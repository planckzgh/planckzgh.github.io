<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>planckgh</title>
  <icon>https://www.gravatar.com/avatar/036b4e7e0d8e7f5b8248d1bce20305d2</icon>
  <subtitle>个人博客</subtitle>
  <link href="https://planckzgh.github.io/atom.xml" rel="self"/>
  
  <link href="https://planckzgh.github.io/"/>
  <updated>2024-03-24T07:07:38.599Z</updated>
  <id>https://planckzgh.github.io/</id>
  
  <author>
    <name>planckgh</name>
    <email>planckgh@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建立时间与保持时间</title>
    <link href="https://planckzgh.github.io/2024/03/23/%E5%BB%BA%E7%AB%8B%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BF%9D%E6%8C%81%E6%97%B6%E9%97%B4/"/>
    <id>https://planckzgh.github.io/2024/03/23/%E5%BB%BA%E7%AB%8B%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BF%9D%E6%8C%81%E6%97%B6%E9%97%B4/</id>
    <published>2024-03-23T14:26:05.000Z</published>
    <updated>2024-03-24T07:07:38.599Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考资料：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/409230001">建立时间与保持时间</a></li><li><a href="https://zhuanlan.zhihu.com/p/161283550">一文解决关于建立保持时间的困惑</a></li></ul></blockquote><h2 id="理解">理解</h2><ul><li><strong>建立时间</strong>就是时钟触发事件来临之前，数据需要保持稳定的最小时间，以便数据能够被时钟正确的采样。</li><li><strong>保持时间</strong>就是时钟触发事件来临之后，数据需要保持稳定的最小时间，以便数据能够被电路准确的传输。</li></ul><p><img src="/imgs/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF.png" alt="数字电路.png"></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>h</mi><mi>d</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>q</mi></mrow></msub><mo>−</mo><msub><mi>T</mi><mrow><mi>s</mi><mi>k</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>+</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mi>b</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>l</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mover accent="true"><mi>T</mi><mo>^</mo></mover><mrow><mi>h</mi><mi>d</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}T_{hd}&amp;\leq T_{cq}-T_{skew}+T_{comb} \\T_{su}&amp;\leq T_{clk}-\hat{T}_{hd}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.10677em;vertical-align:-1.303385em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.803385em;"><span style="top:-3.9633849999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.356615em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.303385em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.803385em;"><span style="top:-3.9633849999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.356615em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.303385em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/imgs/su_hd_time.svg" alt="建立时间保持时间"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123; signal: [</span><br><span class="line">  &#123; name: &quot;clk&quot;,      wave: &quot;p..&quot;, node:&#x27;.ab&#x27;&#125;,</span><br><span class="line">  &#123; name: &quot;D1&quot;,       wave: &quot;01.&quot;, phase: 0.5&#125;,</span><br><span class="line">  &#123; name: &quot;Q1&quot;,       wave: &quot;01.&quot; ,phase:-1, node:&#x27;.c&#x27;&#125;,</span><br><span class="line">  &#123; name: &quot;clk_skew&quot;, wave: &quot;p..&quot;, node:&#x27;.de&#x27;, phase:-0.8&#125;,</span><br><span class="line">  &#123; name: &quot;D2&quot;,       wave: &quot;01.&quot;, phase:-3, node:&#x27;.f&#x27;&#125;,</span><br><span class="line">  ],</span><br><span class="line">  config: &#123; hscale: 5 &#125;,</span><br><span class="line">  edge: [&#x27;a-b Tclk&#x27;, &#x27;a-~c Tcq&#x27;, &#x27;c-~f Tcomb&#x27;, &#x27;a~-d Tskew&#x27;,&#x27;b-~e Tskew&#x27;, &#x27;d~-f &gt;Thd&#x27;, &#x27;f-~e &gt;Tsu&#x27;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题">例题</h2><p><strong>例1</strong>：考虑线网延迟，某电路各种延迟值（单位：ns）如下，时钟周期为 15ns，请判断该电路的建立时间和保持时间是否存在 violation ？</p><p><img src="/imgs/v2-3e4c3887cb341e4801ced1d4164f7_4ed585f31289403d8.jpg" alt=""></p><blockquote><p>答案：建立时间裕量为  1 ；保持时间 violation，裕量为 -4；</p></blockquote><hr><p><strong>例2</strong>： 一道知名公司的面试题：时钟周期为 T, 第一级触发器 D1 建立时间最大值为 T1max，最小值为 T1min。组合逻辑最大延迟为 T2max, 最小值为 T2min。问：第二级触发器 D2 的建立时间和保持时间应该满足什么条件？</p><blockquote><p>答案：<br>第二级触发器的建立时间与保持时间与第一级的触发器没有直接关系；<br>列出约束关系，并根据已知参数适当取舍，得到简化后的约束关系如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>h</mi><mi>d</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><msub><mi>T</mi><mrow><mn>2</mn><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><mi>T</mi><mo>−</mo><msub><mi>T</mi><mrow><mn>2</mn><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}T_{hd}&amp;\leq T_{2min} \\T_{su}&amp;\leq T-T_{2max}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></blockquote><hr><p><strong>例3</strong>：一种简单的分频电路如下所示。该触发器建立时间为 3ns, 保持时间为 3ns， 逻辑延迟为 6ns，两个反相器延迟为 1ns，连线延迟为 0。则该电路的最高工作频率是多少？<br><img src="/imgs/v2-a38a73c87486b4e4cf75996c60493_b75b5821e19244308.jpg" alt=""></p><blockquote><p>答案：<br>只有一个时钟，一个触发器，没有时钟偏移，clock path 的反相器延迟是迷惑项。<br>最高工作频率为 100MHz</p></blockquote><hr><p><strong>例4</strong>：<br>（1）以下电路<strong>固有的建立时间和保持时间</strong>？<br>（2）该电路最高的工作频率？<br><img src="/imgs/v2-65fe35f45522a25d7be37ec7812a0_ca136a3493e5472d9.jpg" alt=""><br><img src="/imgs/su_hd_time2.svg" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123; signal: [</span><br><span class="line">  &#123; name: &quot;Clock&quot;,    wave: &quot;P...&quot;,node: &#x27;.ah&#x27;, phase: 0.8, period:2&#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123; name: &quot;Data&quot;,     wave: &quot;====&quot;,node: &#x27;.d.e&#x27;, phase: 3.7, period: 2&#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123; name: &quot;CK&quot;,       wave: &quot;P..&quot;, node: &#x27;.bg&#x27;, period: 2 &#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123; name: &quot;D&quot;,        wave: &quot;====&quot;,node: &#x27;.c.f&#x27;, phase: 2.15, period: 2&#125;,</span><br><span class="line">  ],</span><br><span class="line">  config: &#123; hscale: 2 &#125;,</span><br><span class="line">  edge: [&#x27;b~-a Tskew&#x27;, &#x27;c-~d Tcomb&#x27;, &#x27;b~-c Tsu&#x27;, &#x27;a-~d 固有建立时间&#x27;,</span><br><span class="line">         &#x27;g~-f Thd&#x27;, &#x27;h-~e 固有保持时间&#x27;, &#x27;e-~f Tcomb&#x27;, &#x27;h~-g Tskew&#x27;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>答案：<br>该电路固有的建立时间为：2.1 + 2 - 1.2 = 2.9ns<br>固有的保持时间为：1.2 + 1.5 - 2.1 = 0.6ns<br>此电路仍然是自身到自身的反馈电路。所以没有时钟偏移，也无需考虑 T1 = 0.9ns 的延迟。所以最高工作频率为： 1 / (1.8 + 1.2 + 2)ns = 200MHz</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/409230001&quot;&gt;建立时间与保持时间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.c</summary>
      
    
    
    
    
    <category term="思考" scheme="https://planckzgh.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>【VIM】Verilog开发环境配置</title>
    <link href="https://planckzgh.github.io/2024/02/01/%E3%80%90VIM%E3%80%91Verilog%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://planckzgh.github.io/2024/02/01/%E3%80%90VIM%E3%80%91Verilog%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2024-02-01T12:55:17.000Z</published>
    <updated>2024-03-27T03:41:37.195Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim-verilog开发环境配置">【VIM】Verilog开发环境配置</h1><h2 id="代码补全">代码补全</h2><ul><li>snippets</li></ul><h2 id="自动例化">自动例化</h2><ul><li>automatic-verilog</li></ul><h2 id="代码格式化">代码格式化</h2><ul><li>tabular</li></ul><h2 id="语法检查">语法检查</h2><ul><li>ale (linter:verilator)</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vim-verilog开发环境配置&quot;&gt;【VIM】Verilog开发环境配置&lt;/h1&gt;
&lt;h2 id=&quot;代码补全&quot;&gt;代码补全&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;snippets&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;自动例化&quot;&gt;自动例化&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;aut</summary>
      
    
    
    
    
    <category term="基础设施" scheme="https://planckzgh.github.io/tags/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/"/>
    
  </entry>
  
  <entry>
    <title>ROIC项目电路设计与调试</title>
    <link href="https://planckzgh.github.io/2024/01/31/ROIC%E9%A1%B9%E7%9B%AE%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E8%B0%83%E8%AF%95/"/>
    <id>https://planckzgh.github.io/2024/01/31/ROIC%E9%A1%B9%E7%9B%AE%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E8%B0%83%E8%AF%95/</id>
    <published>2024-01-31T14:40:07.000Z</published>
    <updated>2024-03-25T10:29:35.496Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="192688a974b2e59f1f18bf4bef00a10f59fef035742da4a937aa30e13a1827e0"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦^o^</summary>
    
    
    
    <category term="项目经验" scheme="https://planckzgh.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="private" scheme="https://planckzgh.github.io/tags/private/"/>
    
  </entry>
  
  <entry>
    <title>Vimium简明教程</title>
    <link href="https://planckzgh.github.io/2024/01/31/Vimium%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2024/01/31/Vimium%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</id>
    <published>2024-01-31T04:57:15.000Z</published>
    <updated>2024-01-31T05:42:12.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vimium简明教程">Vimium简明教程</h1><h2 id="0-show-help">0. ? Show help</h2><h2 id="1-滚动跳转-j-k-d-u-h-l-gg-g-zh-zl">1. 滚动跳转: j,k,d,u,h,l,gg,G,zH,zL</h2><ul><li>j   Scroll down</li><li>k   Scroll up</li><li>dScroll a half page down</li><li>uScroll a half page up</li><li>hScroll left</li><li>lScroll right</li><li>ggScroll to the top of the page</li><li>GScroll to the bottom of the page</li><li>zHScroll all the way to the left</li><li>zLScroll all the way to the right</li><li>mCreate a new mark</li><li>`Go to a mark</li></ul><h2 id="2-刷新页面：r-x-x">2. 刷新页面：r,x,X</h2><ul><li>r   Reload the page</li><li>xClose current tab</li><li>XRestore closed tab</li></ul><h2 id="3-创建页面：p-p-gu-gu-ge-ge-t-yt">3. 创建页面：p,P,gu,gU,ge,gE,t,yt</h2><ul><li>pOpen the clipboard’s URL in the current tab</li><li>POpen the clipboard’s URL in a new tab</li><li>guGo up the URL hierarchy</li><li>gUGo to root of current URL hierarchy</li><li>geEdit the current URL</li><li>gEEdit the current URL and open in a new tab</li><li>tCreate new tab</li><li>ytDuplicate current tab</li></ul><h2 id="4-点击链接：f-f">4. 点击链接：f,F</h2><ul><li>fOpen a link in the current tab</li><li>FOpen a link in a new tab</li></ul><h2 id="5-复制内容：yy-yf-v-v">5. 复制内容：yy,yf,v,V</h2><ul><li>yyCopy the current URL to the clipboard</li><li>yfCopy a link URL to the clipboard</li><li>vEnter visual mode</li><li>VEnter visual line mode</li></ul><h2 id="6-搜索内容：-n-n-o-o-b-b-t">6. 搜索内容：/,n,N,o,O,b,B,T</h2><ul><li>/Enter find mode</li><li>nCycle forward to the next find match</li><li>NCycle backward to the previous find match</li><li>oOpen URL, bookmark or history entry</li><li>OOpen URL, bookmark or history entry in a new tab</li><li>bOpen a bookmark</li><li>BOpen a bookmark in a new tab</li><li>TSearch through your open tabs</li></ul><h2 id="7-切换页面：j-k-g0-g-h-l">7. 切换页面：J,K,^,g0,g$,H,L</h2><ul><li>J, Go one tab left</li><li>K, Go one tab right</li><li>^Go to previously-visited tab</li><li>g0Go to the first tab</li><li>g$Go to the last tab</li><li>HGo back in history</li><li>LGo forward in history</li></ul><h2 id="8-移动页面：w">8. 移动页面：W,&lt;&lt;,&gt;&gt;</h2><ul><li>W  Move tab to new window</li><li>&lt;&lt;Move tab to the left</li><li>&gt;&gt;Move tab to the right</li></ul><h2 id="9-其他操作：">9. 其他操作：</h2><ul><li>&lt;alt-p&gt;Pin or unpin current tab</li><li>&lt;alt-m&gt;Mute or unmute current tab</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vimium简明教程&quot;&gt;Vimium简明教程&lt;/h1&gt;
&lt;h2 id=&quot;0-show-help&quot;&gt;0. ? Show help&lt;/h2&gt;
&lt;h2 id=&quot;1-滚动跳转-j-k-d-u-h-l-gg-g-zh-zl&quot;&gt;1. 滚动跳转: j,k,d,u,h,l,gg,</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【vivado】VIO和ILA联合调试小技巧</title>
    <link href="https://planckzgh.github.io/2024/01/16/%E3%80%90vivado%E3%80%91VIO%E5%92%8CILA%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>https://planckzgh.github.io/2024/01/16/%E3%80%90vivado%E3%80%91VIO%E5%92%8CILA%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2024-01-16T05:18:37.000Z</published>
    <updated>2024-01-16T05:30:30.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vivado中vio-ip核的使用">Vivado中VIO IP核的使用</h1><h2 id="理解">理解</h2><p>相对于ILA更多的关注波形，VIO则专注于输入和输出关系的描述。个人理解为VIO就是一个便携测试，可以根据输入测试输出。类似于开关和LED仿真，相当于在数字电路中加入LED（输入）和开关(输出）。</p><h2 id="配置">配置</h2><p><img src="/imgs/a81b8328e37470507dcf6ae884e1c089.png" alt="a81b8328e37470507dcf6ae884e1c089.png"><br><img src="/imgs/77b7044ded3c4b5c928b31b28c6f51ce_16246caaad564a55b.png" alt="067d7b172dfa4bc9919a5355c99a66c3.png"><br><img src="/imgs/0ef05f246dc84095b29c22cd6d9d8edb_e1b1f43df33d44b08.png" alt="f03fc80e2b2f4b029e2bbe7dd9fabfb8.png"><br><img src="/imgs/5fef9da18d43478dab4ec902f7c1d533_340bf3662d634a8e8.png" alt="9f39c66459724763abfad713cf80d5b9.png"></p><h2 id="联调">联调</h2><p><img src="/imgs/612334be62f5812c20c374b7f83ef9d3.png" alt="612334be62f5812c20c374b7f83ef9d3.png"><br><img src="/imgs/134db90ff14790def0b904d983b3259e.png" alt="134db90ff14790def0b904d983b3259e.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vivado中vio-ip核的使用&quot;&gt;Vivado中VIO IP核的使用&lt;/h1&gt;
&lt;h2 id=&quot;理解&quot;&gt;理解&lt;/h2&gt;
&lt;p&gt;相对于ILA更多的关注波形，VIO则专注于输入和输出关系的描述。个人理解为VIO就是一个便携测试，可以根据输入测试输出。类似于开关和L</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>win11下wsl2搭建vcs2016+verdi开发环境教程</title>
    <link href="https://planckzgh.github.io/2023/12/19/win11%E4%B8%8Bwsl2%E6%90%AD%E5%BB%BAvcs2016-verdi%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2023/12/19/win11%E4%B8%8Bwsl2%E6%90%AD%E5%BB%BAvcs2016-verdi%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%95%99%E7%A8%8B/</id>
    <published>2023-12-19T07:15:52.000Z</published>
    <updated>2023-12-19T07:36:34.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="win11下wsl2搭建vcs2016-verdi开发环境教程">win11下wsl2搭建vcs2016+verdi开发环境教程</h1><h2 id="1-资源获取">1 资源获取</h2><p>链接：<a href="https://pan.baidu.com/s/1SFCxy1CGoOGlp2gwk9imRw">https://pan.baidu.com/s/1SFCxy1CGoOGlp2gwk9imRw</a><br>提取码：1234<br>下载完成后拷贝进wsl2中<br><img src="/imgs/7e500024cee6df4eb326c5a7ce9cdd27.png" alt="文件内容"></p><h2 id="2-安装方法">2 安装方法</h2><h3 id="2-1-具体安装步骤">2.1 具体安装步骤</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建安装目录</span></span><br><span class="line">$ <span class="built_in">mkdir</span> vcs2016 verdi2016 scl_v11.9</span><br><span class="line"><span class="comment"># 2. 解压SynopsysInstaller.rar</span></span><br><span class="line">$ unrar x SynopsysInstaller.rar</span><br><span class="line"><span class="comment"># 3. 执行SynopsysInstaller_v3.3.run安装vcs、scl和verdi的安装器</span></span><br><span class="line">$ <span class="built_in">chmod</span> 777 SynopsysInstaller_v3.3.run</span><br><span class="line">$ ./SynopsysInstaller_v3.3.run</span><br><span class="line">$ Please specify installation directory [.]: ./</span><br><span class="line"><span class="comment"># 4. 安装csh</span></span><br><span class="line">$ sudo apt install csh</span><br><span class="line"><span class="comment"># 5. 运行安装器</span></span><br><span class="line">$ ./setup.sh</span><br><span class="line"><span class="comment"># 6. 根据提示依次安装vcs2016、scl_v11.9、verdi2016</span></span><br><span class="line">&lt;next&gt; &lt;选择安装源目录&gt; &lt;next&gt; &lt;next&gt; &lt;next&gt; &lt;选择linux64，next&gt; &lt;选择第1步创建的安装路径&gt; &lt;Accept Install&gt; &lt;Finish&gt; &lt;Dismiss&gt;</span><br><span class="line"><span class="comment"># 7. 获取mac地址（不清楚就百度一下）和hostname</span></span><br><span class="line">$ ifconfig</span><br><span class="line">$ hostname</span><br><span class="line"><span class="comment"># 8. 通过scl_keygen.exe获取许可证文件Synopsys.dat</span></span><br><span class="line"><span class="comment"># 在&lt;HOST Daemon&gt;和&lt;HOST ID Feature&gt;处填入mac地址</span></span><br><span class="line"><span class="comment"># 在&lt;HOST Name&gt;处填入hostname</span></span><br><span class="line"><span class="comment"># 修改&lt;EXPIRE&gt;为12-dec-2030</span></span><br><span class="line"><span class="comment"># 点击&lt;Generate&gt;生成许可证文件Synopsys.dat</span></span><br><span class="line"><span class="comment"># 9. 修改许可证文件第二行，增加snpslmd文件路径</span></span><br><span class="line">$ dos2unix Synopsys.dat</span><br><span class="line">$ vim Synopsys.dat</span><br><span class="line">$ &lt;2G<span class="variable">$a</span>&gt; scl_v11.9/amd64/bin/snpslmd</span><br><span class="line">$ <span class="built_in">mkdir</span> vcs2016/license</span><br><span class="line">$ <span class="built_in">mv</span> Synopsys.dat vcs2016/license/</span><br><span class="line"><span class="comment"># 10. 修改.bashrc文件，添加环境变量</span></span><br><span class="line">$ <span class="comment"># &lt;见下方&gt;</span></span><br><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 11. 激活license</span></span><br><span class="line">$ lmli</span><br><span class="line"><span class="comment"># 12. 启动dve和verdi</span></span><br><span class="line">$ dve</span><br><span class="line">$ verdi</span><br><span class="line"><span class="comment"># 其他（Debug）</span></span><br><span class="line">$ <span class="comment"># 下载gcc-4.8 g++-4.8的方法见下方</span></span><br><span class="line">$ sudo apt gcc-4.8 g++-4.8</span><br><span class="line">$ sudo apt install lsb-core libjpeg62</span><br><span class="line">$ <span class="comment"># 将libpng12.so.0拷贝进/usr/lib/x86_64-linux-gnu/目录内</span></span><br><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br><span class="line">$ sudo <span class="built_in">mkdir</span> /usr/tmp/</span><br></pre></td></tr></table></figure><h3 id="2-2-配置环境变量">2.2 配置环境变量</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .bashrc文件</span></span><br><span class="line"><span class="comment">#vcs2016</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/vcs2016/gui/dve/bin:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/vcs2016/bin:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> VCS_HOME=<span class="string">&quot;/home/gh/app/vcs2016&quot;</span></span><br><span class="line"><span class="built_in">export</span> DVE_HOME=<span class="string">&quot;/home/gh/app/vcs2016/gui/dve&quot;</span></span><br><span class="line"><span class="built_in">export</span> LM_LICENSE_FILE=<span class="string">&quot;/home/gh/app/vcs2016/license/Synopsys.dat&quot;</span></span><br><span class="line"><span class="built_in">export</span> LM_LICENSE_FILE=27000@planckgh</span><br><span class="line"><span class="built_in">export</span> VCS_TARGET_ARCH=<span class="string">&quot;amd64&quot;</span></span><br><span class="line"><span class="built_in">export</span> VCS_ARCH_OVERRIDE=<span class="string">&quot;linux&quot;</span></span><br><span class="line"><span class="built_in">alias</span> verdi=<span class="string">&#x27;verdi -full64 &amp;&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> dve=<span class="string">&#x27;dve -full64 &amp;&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> lmli=<span class="string">&quot;/home/gh/app/scl_v11.9/amd64/bin/lmgrd -c /home/gh/app/vcs2016/license/Synopsys.dat&quot;</span></span><br><span class="line"><span class="comment">#verdi2016</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/verdi2016/bin:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> VERDI_HOME=<span class="string">&quot;/home/gh/app/verdi2016:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> NOVAS_HOME=<span class="string">&quot;/home/gh/app/verdi2016:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="comment">#scl_v11.9</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/scl_v11.9/amd64/bin:&quot;</span><span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h3 id="2-3-下载所需文件">2.3 下载所需文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim etc/apt/sources.list</span><br><span class="line"># 在文档后面增加</span><br><span class="line">deb http://dk.archive.ubuntu.com/ubuntu/ xenial main</span><br><span class="line">deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe</span><br><span class="line">deb http://cz.archive.ubuntu.com/ubuntu xenial main</span><br><span class="line"># 然后更新镜像源</span><br><span class="line">$ sudo apt update</span><br><span class="line"># 安装gcc-4.8, g++-4.8</span><br><span class="line">sudo apt install gcc-4.8, g++-4.8</span><br></pre></td></tr></table></figure><p>注意，有时update时会报错, 提示GPG error缺少公钥，多见于添加了xenial版本(Ubuntu16)源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">W: GPG error: http://dk.archive.ubuntu.com/ubuntu xenial InRelease: The following signatures couldn&#x27;t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">E: The repository &#x27;http://dk.archive.ubuntu.com/ubuntu xenial InRelease&#x27; is not signed.</span><br><span class="line">N: Updating from such a repository can&#x27;t be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="line">W: GPG error: http://cz.archive.ubuntu.com/ubuntu xenial InRelease: The following signatures couldn&#x27;t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">E: The repository &#x27;http://cz.archive.ubuntu.com/ubuntu xenial InRelease&#x27; is not signed.</span><br><span class="line">N: Updating from such a repository can&#x27;t be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br></pre></td></tr></table></figure><p><strong>解决办法</strong>：</p><p>根据报错信息“NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32”，将对应公钥导入即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5</span><br><span class="line">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;win11下wsl2搭建vcs2016-verdi开发环境教程&quot;&gt;win11下wsl2搭建vcs2016+verdi开发环境教程&lt;/h1&gt;
&lt;h2 id=&quot;1-资源获取&quot;&gt;1 资源获取&lt;/h2&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://pan.baidu.c</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>从Ubuntu真机到WSL2</title>
    <link href="https://planckzgh.github.io/2023/12/03/%E4%BB%8EUbuntu%E7%B3%BB%E7%BB%9F%E5%88%B0WSL2/"/>
    <id>https://planckzgh.github.io/2023/12/03/%E4%BB%8EUbuntu%E7%B3%BB%E7%BB%9F%E5%88%B0WSL2/</id>
    <published>2023-12-03T07:41:51.000Z</published>
    <updated>2023-12-03T08:12:34.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从ubuntu真机到wsl2">从Ubuntu真机到WSL2</h1><blockquote><p>记录一次被迫从Ubuntu22.04真机系统迁移到WSL2-Ubuntu22.04虚拟子系统的经历；<br>原因是运行vcs需要gcc4.8.5，与ysyx项目产生冲突，导致ysyx项目无法编译（动态库链接版本问题），使得真机无法继续进行该项目，于是使用wsl2继续进行ysyx，使用win11平台进行verification，好处是两者均位于同一个系统，使用起来切换自如。且win11系统使用体验确实好于Ubuntu系统，拥有丰富的软件支持。</p></blockquote><h2 id="1-wsl2的启用和ubuntu的安装">1 WSL2的启用和Ubuntu的安装</h2><ol><li>手动启用HyperV</li><li>管理员权限打开PowerShell，并运行，以启用虚拟子系统和虚拟化平台；并将wsl默认设置为wsl2</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><ol start="3"><li>手动更新<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">最新Linux内核</a></li><li>Microsoft Store安装Ubuntu</li></ol><h2 id="2-terminal的美化和增强">2 Terminal的美化和增强</h2><h3 id="2-1-换源">2.1 换源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s@http://.*archive.ubuntu.com@http://repo.huaweicloud.com@g&quot; /etc/apt/sources.list</span><br><span class="line">sed -i &quot;s@http://.*security.ubuntu.com@http://repo.huaweicloud.com@g&quot; /etc/apt/sources.list</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="2-2-美化">2.2 美化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh</span><br><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="2-3-增强">2.3 增强</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br></pre></td></tr></table></figure><h2 id="3-git配置">3 Git配置</h2><h3 id="3-1-安装和配置git">3.1 安装和配置git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br><span class="line">git config --global user.name &quot;your name&quot; # your student ID and name</span><br><span class="line">git config --global user.email &quot;your email&quot;   # your email</span><br><span class="line">git config --global core.editor vim                 # your favorite editor</span><br><span class="line">git config --global color.ui true</span><br></pre></td></tr></table></figure><h3 id="3-2-创建和查看公钥">3.2 创建和查看公钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -C &quot;your email&quot; -t rsa</span><br><span class="line">cat ~/.ssh/id_rsa.pub </span><br></pre></td></tr></table></figure><h3 id="3-3-复制公钥到github">3.3 复制公钥到github</h3><p><img src="/imgs/9c3d117a15db45b9b5ef15759a1aac51.png" alt=""><br><img src="/imgs/6527df4981834576b01f35b267aac0cd.png" alt=""></p><h2 id="4-vim配置">4 vim配置</h2><h3 id="4-1-配置-vimrc">4.1 配置.vimrc</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line">filetype on</span><br><span class="line"><span class="built_in">set</span> rtp+=~/.vim/bundle/Vundle.vim</span><br><span class="line">call vundle<span class="comment">#begin()</span></span><br><span class="line"><span class="string">&quot; 插件配置 &quot;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> YouCompleteMe:语句补全插件</span><br><span class="line"><span class="built_in">set</span> runtimepath+=~/.vim/bundle/YouCompleteMe</span><br><span class="line">autocmd InsertLeave * <span class="keyword">if</span> pumvisible() == 0|pclose|endif<span class="string">&quot;离开插入模式后自动关闭预览窗口&quot;</span></span><br><span class="line"><span class="built_in">let</span> g:ycm_collect_identifiers_from_tags_files = 1           <span class="string">&quot; 开启 YCM基于标签引擎</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot;</span> 注释与字符串中的内容也用于补全</span><br><span class="line"><span class="built_in">let</span> g:syntastic_ignore_files=[<span class="string">&quot;.*\.py$&quot;</span>]</span><br><span class="line"><span class="built_in">let</span> g:ycm_seed_identifiers_with_syntax = 1                  <span class="string">&quot; 语法关键字补全</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_comments = 1</span></span><br><span class="line"><span class="string">let g:ycm_confirm_extra_conf = 0                            &quot;</span> 关闭加载.ycm_extra_conf.py提示</span><br><span class="line"><span class="built_in">let</span> g:ycm_key_list_select_completion = [<span class="string">&#x27;&lt;c-n&gt;&#x27;</span>, <span class="string">&#x27;&lt;Down&gt;&#x27;</span>]  <span class="string">&quot; 映射按键,没有这个会拦截掉tab, 导致其他插件的tab不能用.</span></span><br><span class="line"><span class="string">let g:ycm_key_list_previous_completion = [&#x27;&lt;c-p&gt;&#x27;, &#x27;&lt;Up&gt;&#x27;]</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_comments = 1                          &quot;</span> 在注释输入中也能补全</span><br><span class="line"><span class="built_in">let</span> g:ycm_complete_in_strings = 1                           <span class="string">&quot; 在字符串输入中也能补全</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot;</span> 注释和字符串中的文字也会被收入补全</span><br><span class="line"><span class="built_in">let</span> g:ycm_global_ycm_extra_conf=<span class="string">&#x27;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:ycm_show_diagnostics_ui = 0                           <span class="string">&quot; 禁用语法检查</span></span><br><span class="line"><span class="string">inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;</span>\&lt;C-y&gt;<span class="string">&quot; : &quot;</span>\&lt;CR&gt;<span class="string">&quot;             &quot;</span> 回车即选中当前项</span><br><span class="line">nnoremap &lt;c-j&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;     <span class="string">&quot; 跳转到定义处</span></span><br><span class="line"><span class="string">let g:ycm_min_num_of_chars_for_completion=2                 &quot;</span> 从第2个键入字符就开始罗列匹配项</span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> github 仓库中的插件 <span class="string">&quot;</span></span><br><span class="line"><span class="string">Plugin &#x27;VundleVim/Vundle.vim&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Plugin &#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="string">&quot;</span>vim-airline配置:优化vim界面<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string">&quot; airline设置</span></span><br><span class="line"><span class="string">&quot;</span> 显示颜色</span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br><span class="line"><span class="built_in">set</span> background=dark</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"><span class="string">&quot; 使用powerline打过补丁的字体</span></span><br><span class="line"><span class="string">let g:airline_powerline_fonts = 1</span></span><br><span class="line"><span class="string">&quot;</span> 开启tabline</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string">&quot; tabline中当前buffer两端的分隔字符</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#left_sep = &#x27; &#x27;</span></span><br><span class="line"><span class="string">&quot;</span> tabline中未激活buffer两端的分隔字符</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#left_alt_sep = &#x27; &#x27;</span></span><br><span class="line"><span class="string">&quot; tabline中buffer显示编号</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#buffer_nr_show = 1</span></span><br><span class="line"><span class="string">&quot;</span> 映射切换buffer的键位</span><br><span class="line">nnoremap [b :bp&lt;CR&gt;</span><br><span class="line">nnoremap ]b :bn&lt;CR&gt;</span><br><span class="line"><span class="string">&quot; 映射&lt;leader&gt;num到num buffer</span></span><br><span class="line"><span class="string">map &lt;leader&gt;1 :b 1&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;2 :b 2&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;3 :b 3&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;4 :b 4&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;5 :b 5&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;6 :b 6&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;7 :b 7&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;8 :b 8&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;9 :b 9&lt;CR&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> vim-scripts 中的插件 <span class="string">&quot;</span></span><br><span class="line"><span class="string">Plugin &#x27;taglist.vim&#x27;</span></span><br><span class="line"><span class="string">&quot;</span>ctags 配置:F3快捷键显示程序中的各种tags，包括变量和函数等。</span><br><span class="line">map &lt;F3&gt; :TlistToggle&lt;CR&gt;</span><br><span class="line"><span class="built_in">let</span> Tlist_Use_Right_Window=1</span><br><span class="line"><span class="built_in">let</span> Tlist_Show_One_File=1</span><br><span class="line"><span class="built_in">let</span> Tlist_Exit_OnlyWindow=1</span><br><span class="line"><span class="built_in">let</span> Tlist_WinWidt=25</span><br><span class="line"> </span><br><span class="line">Plugin <span class="string">&#x27;The-NERD-tree&#x27;</span></span><br><span class="line"><span class="string">&quot;NERDTree 配置:F2快捷键显示当前目录树</span></span><br><span class="line"><span class="string">map &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">let NERDTreeWinSize=25 </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Plugin &#x27;indentLine.vim&#x27;</span></span><br><span class="line"><span class="string">Plugin &#x27;delimitMate.vim&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> 非 github 仓库的插件<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> Plugin <span class="string">&#x27;git://git.wincent.com/command-t.git&#x27;</span></span><br><span class="line"><span class="string">&quot; 本地仓库的插件 &quot;</span></span><br><span class="line"> </span><br><span class="line">call vundle<span class="comment">#end()</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>新文件自动填补</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;新建.c,.h,.sh,.v文件，自动插入文件头 </span></span><br><span class="line"><span class="string">autocmd BufNewFile *.cpp,*.[chv],*.sv,*.sh, exec &quot;</span>:call SetTitle()<span class="string">&quot; </span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;定义函数SetTitle，自动插入文件头 </span></span><br><span class="line"><span class="string">func SetTitle() </span></span><br><span class="line"><span class="string">  &quot;</span>如果文件类型为.sh文件 </span><br><span class="line">  <span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;sh&#x27;</span> </span><br><span class="line">    call setline(1, <span class="string">&quot;##########################################################################&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;# File Name: &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;# Author: planckgh&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;# Mail: planckgh@gmail.com&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+3, <span class="string">&quot;# Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+4, <span class="string">&quot;#########################################################################&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+5, <span class="string">&quot;#!/bin/bash&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    call setline(1, <span class="string">&quot;/*************************************************************************&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>),   <span class="string">&quot;  &gt; File Name: &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;  &gt; Author: planckgh&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;  &gt; Mail: planckgh@gmail.com &quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+3, <span class="string">&quot;  &gt; Description: &quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+4, <span class="string">&quot;  &gt; Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+5, <span class="string">&quot; ************************************************************************/&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+6, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">expand</span>(<span class="string">&quot;%:e&quot;</span>) == <span class="string">&#x27;cpp&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#include&lt;iostream&gt;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;using namespace std;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;int main(int argc, char *argv[])&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;    return 0;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">expand</span>(<span class="string">&quot;%:e&quot;</span>) == <span class="string">&#x27;c&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#include&lt;stdio.h&gt;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;int main(int argc, char *argv[])&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;    return 0;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">expand</span>(<span class="string">&quot;%:e&quot;</span>) == <span class="string">&#x27;h&#x27;</span></span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#ifndef __&quot;</span>.toupper(<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>)).<span class="string">&quot;_H__&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;#define __&quot;</span>.toupper(<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>)).<span class="string">&quot;_H__&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;#include&lt;stdio.h&gt;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;#endif&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;verilog&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;module &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>).<span class="string">&quot;(&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;    input&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;    output&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;);&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;endmodule&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line"><span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;systemverilog&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;class &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>).<span class="string">&quot;;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&quot;</span>)</span><br><span class="line">call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;endclass&quot;</span>)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;新建文件后，自动定位到文件末尾</span></span><br><span class="line"><span class="string">  autocmd BufNewFile * normal 5G$</span></span><br><span class="line"><span class="string">endfunc </span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>键盘命令</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;w :w!&lt;cr&gt;</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;f :find&lt;cr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> 映射全选+复制 ctrl+a</span><br><span class="line">map &lt;C-A&gt; ggVGY</span><br><span class="line">map! &lt;C-A&gt; &lt;Esc&gt;ggVGY</span><br><span class="line">map &lt;F12&gt; gg=G</span><br><span class="line"><span class="string">&quot; 选中状态下 Ctrl+c 复制</span></span><br><span class="line"><span class="string">vmap &lt;C-c&gt; &quot;</span>+y</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;实用设置</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 设置当文件被改动时自动载入</span><br><span class="line"><span class="built_in">set</span> autoread</span><br><span class="line"><span class="string">&quot; quickfix模式</span></span><br><span class="line"><span class="string">autocmd FileType c,cpp map &lt;buffer&gt; &lt;leader&gt;&lt;space&gt; :w&lt;cr&gt;:make&lt;cr&gt;</span></span><br><span class="line"><span class="string">&quot;</span>代码补全 </span><br><span class="line"><span class="built_in">set</span> completeopt=preview,menu </span><br><span class="line"><span class="string">&quot;允许插件  </span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string">&quot;</span>共享剪贴板  </span><br><span class="line"><span class="built_in">set</span> clipboard=unnamedplus </span><br><span class="line"><span class="string">&quot;从不备份  </span></span><br><span class="line"><span class="string">set nobackup</span></span><br><span class="line"><span class="string">&quot;</span>make 运行</span><br><span class="line">:<span class="built_in">set</span> makeprg=g++\ -Wall\ \ %</span><br><span class="line"><span class="string">&quot;自动保存</span></span><br><span class="line"><span class="string">set autowrite</span></span><br><span class="line"><span class="string">set ruler                   &quot;</span> 打开状态栏标尺</span><br><span class="line"><span class="string">&quot;set cursorline              &quot;</span> 突出显示当前行</span><br><span class="line"><span class="built_in">set</span> magic                   <span class="string">&quot; 设置魔术</span></span><br><span class="line"><span class="string">set guioptions-=T           &quot;</span> 隐藏工具栏</span><br><span class="line"><span class="built_in">set</span> guioptions-=m           <span class="string">&quot; 隐藏菜单栏</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\</span><br><span class="line"><span class="string">&quot; 设置在状态行显示的信息</span></span><br><span class="line"><span class="string">set foldcolumn=0</span></span><br><span class="line"><span class="string">set foldmethod=indent </span></span><br><span class="line"><span class="string">set foldlevel=3 </span></span><br><span class="line"><span class="string">set foldenable              &quot;</span> 开始折叠</span><br><span class="line"><span class="string">&quot; 不要使用vi的键盘模式，而是vim自己的</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string">&quot;</span> 语法高亮</span><br><span class="line"><span class="built_in">set</span> syntax=on</span><br><span class="line"><span class="string">&quot; 去掉输入错误的提示声音</span></span><br><span class="line"><span class="string">set noeb</span></span><br><span class="line"><span class="string">&quot;</span> 在处理未保存或只读文件的时候，弹出确认</span><br><span class="line"><span class="built_in">set</span> confirm</span><br><span class="line"><span class="string">&quot; 自动缩进</span></span><br><span class="line"><span class="string">set autoindent</span></span><br><span class="line"><span class="string">set cindent</span></span><br><span class="line"><span class="string">&quot;</span> Tab键的宽度</span><br><span class="line"><span class="built_in">set</span> tabstop=2</span><br><span class="line"><span class="string">&quot; 统一缩进为2</span></span><br><span class="line"><span class="string">set softtabstop=2</span></span><br><span class="line"><span class="string">set shiftwidth=2</span></span><br><span class="line"><span class="string">&quot;</span> 不要用空格代替制表符</span><br><span class="line"><span class="built_in">set</span> noexpandtab</span><br><span class="line"><span class="string">&quot; 在行和段开始处使用制表符</span></span><br><span class="line"><span class="string">set smarttab</span></span><br><span class="line"><span class="string">&quot;</span> 显示行号</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="string">&quot; toumingbeijing</span></span><br><span class="line"><span class="string">hi Normal ctermfg=10 ctermbg=none</span></span><br><span class="line"><span class="string">&quot;</span> au GUIEnter * call libcallnr(<span class="string">&quot;vimtweak.dll&quot;</span>, <span class="string">&quot;SetAlpha&quot;</span>, 15)</span><br><span class="line"><span class="string">&quot; 历史记录数</span></span><br><span class="line"><span class="string">set history=1000</span></span><br><span class="line"><span class="string">&quot;</span>禁止生成临时文件</span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"><span class="built_in">set</span> noswapfile</span><br><span class="line"><span class="string">&quot;搜索忽略大小写</span></span><br><span class="line"><span class="string">set ignorecase</span></span><br><span class="line"><span class="string">&quot;</span>搜索逐字符高亮</span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"><span class="built_in">set</span> incsearch</span><br><span class="line"><span class="string">&quot;行内替换</span></span><br><span class="line"><span class="string">set gdefault</span></span><br><span class="line"><span class="string">&quot;</span>编码设置</span><br><span class="line"><span class="built_in">set</span> enc=utf-8</span><br><span class="line"><span class="built_in">set</span> fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936</span><br><span class="line"><span class="string">&quot;语言设置</span></span><br><span class="line"><span class="string">set langmenu=zh_CN.UTF-8</span></span><br><span class="line"><span class="string">set helplang=cn</span></span><br><span class="line"><span class="string">&quot;</span> 我的状态行显示的内容（包括文件类型和解码）</span><br><span class="line"><span class="built_in">set</span> statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;</span><br><span class="line"><span class="built_in">set</span> statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]</span><br><span class="line"><span class="string">&quot; 总是显示状态行</span></span><br><span class="line"><span class="string">set laststatus=2</span></span><br><span class="line"><span class="string">&quot;</span> 命令行（在状态行下）的高度，默认为1，这里是2</span><br><span class="line"><span class="built_in">set</span> cmdheight=2</span><br><span class="line"><span class="string">&quot; 侦测文件类型</span></span><br><span class="line"><span class="string">filetype on</span></span><br><span class="line"><span class="string">&quot;</span> 载入文件类型插件</span><br><span class="line">filetype plugin on</span><br><span class="line"><span class="string">&quot; 为特定文件类型载入相关缩进文件</span></span><br><span class="line"><span class="string">filetype indent on</span></span><br><span class="line"><span class="string">&quot;</span> 保存全局变量</span><br><span class="line"><span class="built_in">set</span> viminfo+=!</span><br><span class="line"><span class="string">&quot; 带有如下符号的单词不要被换行分割</span></span><br><span class="line"><span class="string">set iskeyword+=_,$,@,%,#,-</span></span><br><span class="line"><span class="string">&quot;</span> 字符间插入的像素行数目</span><br><span class="line"><span class="built_in">set</span> linespace=0</span><br><span class="line"><span class="string">&quot; 增强模式中的命令行自动完成操作</span></span><br><span class="line"><span class="string">set wildmenu</span></span><br><span class="line"><span class="string">&quot;</span> 使回格键（backspace）正常处理indent, eol, start等</span><br><span class="line"><span class="built_in">set</span> backspace=2</span><br><span class="line"><span class="string">&quot; 允许backspace和光标键跨越行边界</span></span><br><span class="line"><span class="string">set whichwrap+=&lt;,&gt;,h,l</span></span><br><span class="line"><span class="string">&quot;</span> 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）</span><br><span class="line"><span class="built_in">set</span> mouse=a</span><br><span class="line"><span class="built_in">set</span> selection=exclusive</span><br><span class="line"><span class="built_in">set</span> selectmode=mouse,key</span><br><span class="line"><span class="string">&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过</span></span><br><span class="line"><span class="string">set report=0</span></span><br><span class="line"><span class="string">&quot;</span> 在被分割的窗口间显示空白，便于阅读</span><br><span class="line"><span class="built_in">set</span> fillchars=vert:\ ,stl:\ ,stlnc:\</span><br><span class="line"><span class="string">&quot; 高亮显示匹配的括号</span></span><br><span class="line"><span class="string">set showmatch</span></span><br><span class="line"><span class="string">&quot;</span> 匹配括号高亮的时间（单位是十分之一秒）</span><br><span class="line"><span class="built_in">set</span> matchtime=1</span><br><span class="line"><span class="string">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span></span><br><span class="line"><span class="string">set scrolloff=3</span></span><br><span class="line"><span class="string">&quot;</span> 为C程序提供自动缩进</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="string">&quot; 高亮显示普通txt文件（需要txt.vim脚本）</span></span><br><span class="line"><span class="string"> au BufRead,BufNewFile *  setfiletype txt</span></span><br><span class="line"><span class="string">&quot;</span>自动补全</span><br><span class="line">:inoremap ( ()&lt;ESC&gt;i</span><br><span class="line">:inoremap ) &lt;c-r&gt;=ClosePair(<span class="string">&#x27;)&#x27;</span>)&lt;CR&gt;</span><br><span class="line">:inoremap &#123; &#123;&#125;&lt;ESC&gt;i</span><br><span class="line">:inoremap &#125; &lt;c-r&gt;=ClosePair(<span class="string">&#x27;&#125;&#x27;</span>)&lt;CR&gt;</span><br><span class="line">:inoremap [ []&lt;ESC&gt;i</span><br><span class="line">:inoremap ] &lt;c-r&gt;=ClosePair(<span class="string">&#x27;]&#x27;</span>)&lt;CR&gt;</span><br><span class="line"><span class="string">&quot;:inoremap &quot;</span> <span class="string">&quot;&quot;</span>&lt;ESC&gt;i</span><br><span class="line"><span class="string">&quot;:inoremap &#x27; &#x27;&#x27;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">function! ClosePair(char)</span></span><br><span class="line"><span class="string">  if getline(&#x27;.&#x27;)[col(&#x27;.&#x27;) - 1] == a:char</span></span><br><span class="line"><span class="string">    return &quot;</span>\&lt;Right&gt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">    return a:char</span></span><br><span class="line"><span class="string">  endif</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string">filetype plugin indent on </span></span><br><span class="line"><span class="string">&quot;</span>打开文件类型检测, 加了这句才可以用智能补全</span><br><span class="line"><span class="built_in">set</span> completeopt=longest,menu</span><br><span class="line"><span class="string">&quot;set termguicolors</span></span><br></pre></td></tr></table></figure><h3 id="4-2-安装vundle中的插件">4.2 安装Vundle中的插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install universal-ctags</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br><span class="line">vim</span><br><span class="line">:PluginInstall</span><br><span class="line"><span class="comment"># 一直等到左下角出现“Done!&quot;标志</span></span><br></pre></td></tr></table></figure><h2 id="5-hexo构建">5 hexo构建</h2><h3 id="5-1-安装node-js和npm">5.1 安装Node.js和npm</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install nodejs  npm</span><br></pre></td></tr></table></figure><h3 id="5-2-安装hexo并初始化">5.2 安装hexo并初始化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo</span><br><span class="line">cd hexo</span><br><span class="line">sudo npm install -g hexo-cli</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="5-3-安装插件">5.3 安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save  &amp;</span><br><span class="line">npm install hexo-generator-archive --save  &amp;</span><br><span class="line">npm install hexo-generator-category --save  &amp;</span><br><span class="line">npm install hexo-generator-tag --save  &amp;</span><br><span class="line">npm install hexo-server --save  &amp;</span><br><span class="line">npm install hexo-deployer-git --save  &amp;</span><br><span class="line">npm install hexo-deployer-heroku --save  &amp;</span><br><span class="line">npm install hexo-deployer-rsync --save  &amp; </span><br><span class="line">npm install hexo-deployer-openshift --save &amp; </span><br><span class="line">npm install hexo-renderer-marked --save  &amp;</span><br><span class="line">npm install hexo-renderer-stylus --save  &amp;</span><br><span class="line">npm install hexo-generator-feed --save  &amp;</span><br><span class="line">npm install hexo-generator-sitemap --save &amp;</span><br><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="5-4-配置主题">5.4 配置主题</h3><h4 id="5-4-1-修改-config-yml">5.4.1 修改_config.yml</h4><h4 id="5-4-2-修改theme">5.4.2 修改theme</h4><p>选择你喜欢的<a href="https://hexo.io/themes/">主题</a>  ，以<a href="https://hexo.io/themes/">butterfly</a>为例：</p><ol><li>选择<a href="https://butterfly.js.org/posts/21cfbf15/">中文安装和配置手册</a></li><li>根据安装和配置手册进行安装，关键步骤如下：<ul><li>应用主题：修改hexo根目录下的<code>_config.yml</code>文件（<code>theme: butterfly</code>）</li><li>主题配置：修改hexo/theme/butterfly根目录下的<code>_config.yml</code>文件。</li></ul></li></ol><h3 id="5-5-hexo相关命令">5.5 hexo相关命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;文章名称&quot;</span><br><span class="line">hexo g // 本地部署</span><br><span class="line">hexo s // 本地预览</span><br><span class="line">hexo d // 推到远程</span><br></pre></td></tr></table></figure><h2 id="6-ysyx构建">6 YSYX构建</h2><h3 id="6-1-安装pa相关工具">6.1 安装PA相关工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential man gcc-doc gdb git libreadline-dev libsdl2-dev llvm llvm-dev llvm-11 llvm-11-dev ccache</span><br><span class="line">sudo apt install tmux vim</span><br></pre></td></tr></table></figure><h3 id="6-2-获取项目代码">6.2 获取项目代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master git@github.com:OSCPU/ysyx-workbench.git</span><br><span class="line">bash init.sh nemu</span><br><span class="line">bash init.sh abstract-machine</span><br><span class="line">bash init.sh am-kernels</span><br><span class="line">bash init.sh npc</span><br><span class="line"># 打补丁</span><br><span class="line">sudo apt install flex bison help2man</span><br></pre></td></tr></table></figure><h3 id="6-3-安装verilator-v5-008">6.3 安装verilator v5.008</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git perl python3 make autoconf g++ flex bison ccache</span><br><span class="line">sudo apt-get install libgoogle-perftools-dev numactl perl-doc</span><br><span class="line">sudo apt-get install libfl2 # Ubuntu only (ignore if gives error)</span><br><span class="line">sudo apt-get install libfl-dev # Ubuntu only (ignore if gives error)</span><br><span class="line">sudo apt-get install zlibc zlib1g zlib1g-dev # Ubuntu only (ignore if gives error)</span><br><span class="line">git clone https://github.com/verilator/verilator</span><br><span class="line">unset VERILATOR_ROOT # For bash</span><br><span class="line">cd verilator</span><br><span class="line">git pull # Make sure git repository is up-to-date</span><br><span class="line">git tag # See what versions exist</span><br><span class="line">git checkout v5.008 # Switch to specified release version</span><br><span class="line">autoconf # Create ./configure script</span><br><span class="line">./configure # Configure and create Makefile</span><br><span class="line">make -j \`nproc\` # Build Verilator itself (if error, try just &#x27;make&#x27;)</span><br><span class="line">sudo make install</span><br><span class="line">verilator --version</span><br></pre></td></tr></table></figure><h2 id="7-debug">7 Debug</h2><h3 id="bug1：系统找不到指定的文件">Bug1：系统找不到指定的文件</h3><ol><li><strong>原因一</strong>：安装了VMware，导致注册表发生了改变</li><li><strong>解决方案</strong>：卸载VMware，并使用CleanMyPC软件重新修复注册表</li><li><strong>原因二</strong>：原先安装的Ubuntu卸载之后没有注销</li><li><strong>解决方案</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --all</span><br><span class="line">wsl --unregister Ubuntu-22.04</span><br></pre></td></tr></table></figure><h3 id="bug2：vim打开文件无响应">Bug2：VIM打开文件无响应</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim</span><br><span class="line">$ (无响应)</span><br></pre></td></tr></table></figure><ol><li><strong>原因</strong>：安装了vim-gtk3导致的</li><li><strong>解决方案</strong>：卸载掉vim-gtk3</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;从ubuntu真机到wsl2&quot;&gt;从Ubuntu真机到WSL2&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一次被迫从Ubuntu22.04真机系统迁移到WSL2-Ubuntu22.04虚拟子系统的经历；&lt;br&gt;
原因是运行vcs需要gcc4.8.5，与ysyx项</summary>
      
    
    
    
    
    <category term="记录" scheme="https://planckzgh.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://planckzgh.github.io/2023/12/03/hello-world/"/>
    <id>https://planckzgh.github.io/2023/12/03/hello-world/</id>
    <published>2023-12-03T06:21:17.855Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="choose-a-theme">Choose a theme</h3><p>Such as <a href="https://butterfly.js.org/">Butterfly</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="其他" scheme="https://planckzgh.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Mermaid简明教程</title>
    <link href="https://planckzgh.github.io/2023/11/19/Mermaid%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2023/11/19/Mermaid%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</id>
    <published>2023-11-19T14:20:33.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用教程：<a href="https://zhuanlan.zhihu.com/p/627356428">从入门到精通</a><br>Mermaid 是一种使用文本生成流程图、饼状图、甘特图等图表的描述语言，它可以帮助用户以简单、直观的方式创建各种类型的图表，包括<strong>流程图、时序图、甘特图</strong>等。</p></blockquote><h2 id="1-如何使用-mermaid？">1 如何使用 Mermaid？</h2><ul><li>在 HTML 或 Markdown 文件中引用 Mermaid 库和 Mermaid CSS 样式表。</li><li>使用 Mermaid 的 CLI 工具在命令行中生成图表，或使用 Mermaid 的 API 在自己的应用程序中生成图表。</li></ul><p>具体而言，</p><ul><li>如果只是轻量级、偶尔使用，推荐 <strong>Mermaid 在线渲染编辑器</strong>——<a href="https://mermaid.js.org://mermaid.js.org/">Mermaid Live Editor</a></li><li>推荐使用 <strong>Markdown 编辑器</strong>，比如 <a href="https://typora.io/">Typora</a>，<a href="https://joplinapp.org/">Joplin</a>.</li><li>一些<strong>兼容 Markdown 语法</strong>，支持 Mermaid Code 的现代编辑器，比如 <a href="https://flowus.cn/product">FlowUs 息流</a>.</li><li>流程图工具均支持 Mermaid 语法进行程序绘图。比如，<a href="https://pub.visionon.cn/?c=spike&amp;l=articleid&amp;r=categoryid">VisionOn</a>.</li><li>更多内容，推荐阅读 <a href="https://mermaid.js.org/syntax/timeline.html">Mermaid 官方文档</a>。</li></ul><h2 id="2-mermaid-支持哪些类型的图表？">2 Mermaid 支持哪些类型的图表？</h2><ol><li><strong>流程图</strong>（Flowchart）：展示过程、决策和操作流程。</li><li><strong>序列图</strong>（Sequence Diagram）：展示对象之间的交互顺序。</li><li><strong>甘特图</strong>（Gantt Chart）：展示项目计划和进度。</li><li><strong>类图</strong>（Class Diagram）：展示类的结构和关系。</li><li><strong>饼图</strong>（Pie Chart）：展示数据占比。</li><li><strong>旅程图</strong>（Journey）：展示用户如何与应用程序交互。</li></ol><p>除此之外，Mermaid 还支持其他类型的图表；</p><h2 id="3-mermaid-语法">3 Mermaid 语法</h2><h3 id="3-1-flow-chart">3.1 Flow Chart</h3><h4 id="3-1-1-连线类型">3.1.1 连线类型</h4><h4 id="3-1-2-形状颜色">3.1.2 形状颜色</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">subgraph Subgraph A</span><br><span class="line">A --&gt; B -.-&gt; C &lt;---&gt; D</span><br><span class="line">A ==&gt; C1</span><br><span class="line">C1 ----o D1</span><br><span class="line">C1 ----x E1</span><br><span class="line">end</span><br><span class="line">style A fill:#f9c;</span><br><span class="line">  style B stroke:#333,stroke-width:4px;</span><br><span class="line">  style C fill:#f96,stroke:#333,stroke-width:2px;</span><br><span class="line">  style D fill:#fc9,stroke:#f63,stroke-width:4px,stroke-dasharray: 5 5;</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-1.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">A[Hard edge] --&gt;|Link text| B(Round edge)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result one]</span><br><span class="line">C --&gt;|Two| E[Result two]</span><br><span class="line">style A fill:#f9f,stroke:#333,stroke-width:4px</span><br><span class="line">style B fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-2.png" alt=""></p><h3 id="3-2-sequence-diagram">3.2 Sequence Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant Alice</span><br><span class="line">    participant Bob</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    loop Healthcheck</span><br><span class="line">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class="line">    end</span><br><span class="line">    Note right of John: Rational thoughts &lt;br/&gt;prevail!</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    John-&gt;&gt;Bob: How about you?</span><br><span class="line">    Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-3.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant Alice</span><br><span class="line">    participant John</span><br><span class="line"></span><br><span class="line">    rect rgb(191, 223, 255)</span><br><span class="line">    note right of Alice: Alice calls John.</span><br><span class="line">    Alice-&gt;&gt;+John: Hello John, how are you?</span><br><span class="line">    rect rgb(200, 150, 255)</span><br><span class="line">    Alice-&gt;&gt;+John: John, can you hear me?</span><br><span class="line">    John--&gt;&gt;-Alice: Hi Alice, I can hear you!</span><br><span class="line">    end</span><br><span class="line">    John--&gt;&gt;-Alice: I feel great!</span><br><span class="line">    end</span><br><span class="line">    Alice -&gt;&gt;+ John: Did you want to go to the game tonight?</span><br><span class="line">    John --&gt;&gt;- Alice: Yeah! See you there.</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-4.png" alt=""></p><h3 id="3-3-gantt-chart">3.3 Gantt Chart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">dateFormat  YYYY-MM-DD</span><br><span class="line">title Adding GANTT diagram to mermaid</span><br><span class="line">excludes weekdays 2014-01-10</span><br><span class="line"></span><br><span class="line">section A section</span><br><span class="line">Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">Future task               :         des3, after des2, 5d</span><br><span class="line">Future task2              :         des4, after des3, 5d</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-5.png" alt=""></p><h3 id="3-4-pie-chart">3.4 Pie Chart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pie showData</span><br><span class="line">    title Key elements in Product X</span><br><span class="line">    &quot;Calcium&quot; : 42.96</span><br><span class="line">    &quot;Potassium&quot; : 50.06</span><br><span class="line">    &quot;Magnesium&quot; : 10.01</span><br><span class="line">    &quot;Iron&quot; :  5</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-6.png" alt=""></p><h3 id="3-5-class-diagram">3.5 Class diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class="line">Class03 *-- Class04</span><br><span class="line">Class05 o-- Class06</span><br><span class="line">Class07 .. Class08</span><br><span class="line">Class09 --&gt; C2 : Where am i?</span><br><span class="line">Class09 --* C3</span><br><span class="line">Class09 --|&gt; Class07</span><br><span class="line">Class07 : equals()</span><br><span class="line">Class07 : Object[] elementData</span><br><span class="line">Class01 : size()</span><br><span class="line">Class01 : int chimp</span><br><span class="line">Class01 : int gorilla</span><br><span class="line">Class08 &lt;--&gt; C2: Cool label</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-7.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">classA &lt;|-- classB</span><br><span class="line">classC *-- classD</span><br><span class="line">classE o-- classF</span><br><span class="line">classG &lt;-- classH</span><br><span class="line">classI -- classJ</span><br><span class="line">classK &lt;.. classL</span><br><span class="line">classM &lt;|.. classN</span><br><span class="line">classO .. classP</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-8.png" alt=""></p><h3 id="3-6-journey-diagram">3.6 Journey Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">journey</span><br><span class="line">    title My working day</span><br><span class="line">    section Go to work</span><br><span class="line">      Make tea: 5: Me</span><br><span class="line">      Go upstairs: 3: Me</span><br><span class="line">      Do work: 1: Me, Cat</span><br><span class="line">    section Go home</span><br><span class="line">      Go downstairs: 5: Me</span><br><span class="line">      Sit down: 5: Me</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-9.png" alt=""></p><h3 id="3-7-requirement-diagram">3.7 Requirement Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">requirementDiagram</span><br><span class="line"></span><br><span class="line">    requirement test_req &#123;</span><br><span class="line">id: 1</span><br><span class="line">text: the test text.</span><br><span class="line">risk: high</span><br><span class="line">verifymethod: test</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    element test_entity &#123;</span><br><span class="line">type: simulation</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    test_entity - satisfies -&gt; test_req</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-10.png" alt=""></p><h3 id="3-8-git-graph">3.8 Git graph</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">gitGraph</span><br><span class="line">   commit</span><br><span class="line">   commit</span><br><span class="line">   branch develop</span><br><span class="line">   commit</span><br><span class="line">   checkout main</span><br><span class="line">   commit</span><br><span class="line">   commit</span><br><span class="line">   merge develop</span><br><span class="line">   commit</span><br><span class="line">   commit</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-11.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;使用教程：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/627356428&quot;&gt;从入门到精通&lt;/a&gt;&lt;br&gt;
Mermaid 是一种使用文本生成流程图、饼状图、甘特图等图表的描述语言，它可以帮助用户以简单、直观的方式创建</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22-04安装Questasim2021踩坑记录</title>
    <link href="https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85Questasim2021%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85Questasim2021%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-08T01:31:34.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-资源获取">1 资源获取</h2><p><a href="https://bbs.eetop.cn/forum.php?mod=viewthread&amp;tid=913460&amp;highlight=questasim%2B2021">EETOP Questasim2021</a></p><h2 id="2-安装步骤">2 安装步骤</h2><ol><li>安装依赖</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libxft2 libxft2:i386 lib32ncurses6  </span><br><span class="line">sudo apt install libxext6  </span><br><span class="line">sudo apt install libxext6:i386  </span><br></pre></td></tr></table></figure><ol start="2"><li>获取license</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 mgclicgen.py &lt;hostid&gt;  </span><br></pre></td></tr></table></figure><ol start="3"><li>安装questasim</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./questa_sim-2021.2_1.aol  </span><br></pre></td></tr></table></figure><ol start="3"><li>复制文件<code>pubkey_verify</code>到安装目录下，然后执行</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./pubkey_verify -y</span><br></pre></td></tr></table></figure><p>4, 配置环境变量，然后更新<code>.bashrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/path/to/questasim/linux_x86_64:$PATH</span><br><span class="line">export PATH=/path/to/questasim/RUVM_2021.2:$PATH</span><br><span class="line">export LM_LICENSE_FILE=/path/to/license.dat:$LM_LICENSE_FILE</span><br></pre></td></tr></table></figure><h2 id="3-补充说明">3 补充说明</h2><ol><li><p><code>&lt;hostid&gt;</code>是什么？<br><img src="/imgs/81a085e1495429d040776f7dfabd8d60.png" alt="81a085e1495429d040776f7dfabd8d60.png"><br>host id 是网卡的物理地址，<strong>不要利用hostid获取</strong>，利用ifconfig获取，且<strong>不要省略掉冒号</strong>，如下图所是。<br><img src="/imgs/91014323dc0595e2ce3c6291eaa3ebc0.png" alt="91014323dc0595e2ce3c6291eaa3ebc0.png"></p></li><li><p>环境变量设置<br>注意将<code>/path/to</code>设置为自己的路径，并查看环境变量名是否与其他环境变量名冲突（有可能与VCS的license环境变量产生冲突。</p></li></ol><h2 id="4-运行questasim-2021">4 运行questasim 2021</h2><p>完成安装与破解后，打开终端输入<code>vsim</code>即可启动questasim</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-资源获取&quot;&gt;1 资源获取&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://bbs.eetop.cn/forum.php?mod=viewthread&amp;amp;tid=913460&amp;amp;highlight=questasim%2B2021&quot;&gt;EETOP Q</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22.04安装VCS2018踩坑记录</title>
    <link href="https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85VCS2018%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85VCS2018%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-08T01:07:40.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考资料：<a href="https://blog.csdn.net/qq_41717683/article/details/122267191">VCS2018在Ubuntu20 18安装步骤</a>、<a href="https://www.cnblogs.com/devindd/articles/17173802.html">VCS compiling error issues - devindd</a>、<a href="https://blog.csdn.net/ZikY_0827/article/details/130430660">Ubuntu22.10安装VCS、Verdi</a></p></blockquote><h2 id="1-资源获取">1 资源获取</h2><p><a href="https://pan.baidu.com/s/19CtwqWcxpv-4wPyAD4_ITw">百度网盘链接</a>  提取码：3pib</p><ul><li>文件内容<ul><li><code>libpng12.so.0：</code>后面可能会需要这个包</li><li><code>scl_keygen_2030：</code>这个是License生成器</li><li><code>scl_v2018.06：</code>这个是SCL安装包，用来</li><li><code>synopsysinstaller_v5.0：</code>这个是安装器</li><li><code>vcs_vO-2018.09-SP2：</code>这个是vcs的安装包</li><li><code>verdi-2018.9：</code>这个是verdi安装包</li></ul></li></ul><h2 id="2-安装步骤">2 安装步骤</h2><h3 id="2-1-建立安装路径-更改权限">2.1 建立安装路径，更改权限</h3><p><img src="/imgs/faa20cece21e49aeba5aeda466505a52_cac9d758dbb9412cb.png" alt="在这里插入图片描述"><br>建立图2的安装目录文件：<strong>Liscen</strong>用来存放license文件，<strong>SCL2018</strong>；<strong>vcs2018</strong>、<strong>verdi</strong>是对应的安装路径；<strong>vcs_install</strong>用来存放安装包好安装器。</p><h3 id="2-2-运行安装器进行安装">2.2 运行安装器进行安装</h3><ol><li><p>进入<code>synopsysinstaller_v5.0</code>文件夹，运行<code>./SynopsysInstaller_v5.0.run</code>，会出现下面界面，提示选择安装器安装路径，直接在本路径下安装即可<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_e5039f729d254ad19.jpg" alt="在这里插入图片描述"><br><a href="http://xn--setup-xf6h77jytt8i5c6b4b.sh">安装后出现setup.sh</a><br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_a4c16d9e4c2446438.jpg" alt="在这里插入图片描述"></p></li><li><p>运行<code>setup.sh</code>，进入安装界面，当前安装器可以依次安装Scl、vcs、verdi。下面以vcs安装为例。</p></li><li><p>安装器安装的详细过程<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_1a3ceb9c6f064ec89.png" alt="在这里插入图片描述"><br>选择安装包的路径<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_58a1abeff4ea4a7c8.png" alt="在这里插入图片描述"><br>选择要安装的地址，也就是第一步创建的目录<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_6b8383095342490ea.png" alt="在这里插入图片描述"><br>点击next，进入下面界面，选择vcs<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_0ff2f50c9dc1443cb.png" alt="在这里插入图片描述"><br>一路next，进入下面界面，点击<code>Accept，install</code>，然后等待安装<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_70e67e61d9124c358.png" alt="在这里插入图片描述"><br>安装完后会弹出安装失败，不管这个错误，点击<code>OK</code>。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_02489ba07d2e419ea.png" alt="在这里插入图片描述"><br>然后跳转到这个目录，手动运行这个脚本，根据提示选择路径。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_b1c8cb20ce0841fab.png" alt="在这里插入图片描述"><br>出现下面界面，点击<code>Dismiss</code>, vcs安装结束。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_6dd3009859aa49b79.png" alt="在这里插入图片描述"></p></li><li><p>重复第2步和第3步，选择不同的安装包和安装路径，继续安装<code>verdi</code>和<code>scl</code></p></li></ol><h3 id="2-3-生成license文件">2.3 生成License文件</h3><ol><li>在linux系统终端运行<code>ifconfig</code>获取电脑的物理地址和host-name，如下图所示；<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_dea01911af2744f5a.png" alt="在这里插入图片描述"></li><li>前往window系统运行这个<code>scl_keygen.exe</code>文件生成License文件<code>Synopsys.dat</code>。<br><img src="/imgs/ae57597e189e49cc93ca661e240a3c6e_f893e050867144688.png" alt="在这里插入图片描述"><br>出现下面界面，图中需要修改三个地方，<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_1f1f0f7d05fc4e22a.png" alt="在这里插入图片描述"><br><code>1 2</code>为电脑物理地址，填写物理地址的时候中间的<code>：</code>记得去掉。<code>3</code>为linux的host-name。</li><li>打开<code>Synopsys.dat</code>文件，需要修改的地方有一个<br><img src="/imgs/37f4327eced445d7a78980803a9a8ab5_c721c0b6dc584aa5a.png" alt="在这里插入图片描述"><br>需要在<code>1</code>这个地方添加snpslmd的路径，注意路径记得改成自己的路径，如下图所示<br><img src="/imgs/ff68b70d72e448b096cef6e9888ae20b_c9052d23b9ce47e6a.png" alt="在这里插入图片描述"><br>同时需要注意license有效期的问题，其他的license生成器可能生成的license有效期是2019，需要手动改成2030。本license生成器license有效期为2030，所以不需要改动。如下图所示<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_a6bc2adabff84feba.png" alt="在这里插入图片描述"></li><li>修改完毕之后，将<code>Synopsys.dat</code>转移到Linux系统下的Liscen目录中。</li></ol><h3 id="2-4-设置环境变量">2.4 设置环境变量</h3><p>在<strong>根目录</strong>下打开<code>.bashrc</code>，将下面内容复制进去，下面的路径记得改成自己的路径；设置好后运行<code>source .bashrc</code>命令使环境变量生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> <span class="built_in">export</span> SYNOPSYS=<span class="string">&quot;/usr/software/synopsys&quot;</span></span></span><br><span class="line">export VCS_TARGET_ARCH=&quot;amd64&quot;</span><br><span class="line">export PATH=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2/gui/dve/bin:&quot;$PATH</span><br><span class="line">export DVE_HOME=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2/gui/dve&quot;</span><br><span class="line">export PATH=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2/bin:&quot;$PATH</span><br><span class="line">export VCS_HOME=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> VCS_ARCH_OVERRIDE=<span class="string">&quot;linux&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">verdi</span></span><br><span class="line">export PATH=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2/bin:&quot;$PATH</span><br><span class="line">export VERDI_HOME=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line">export LD_LIBRARY_PATH=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2/share/PLI/lib/LINUX64&quot;:$LD_LIBRARY_PATH</span><br><span class="line">export VERDI_DIR=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line">export NOVAS_INST_DIR=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line">export NPI_PLATFORM=&quot;LINUX64_GNU_472&quot;</span><br><span class="line">export LD_LIBRARY_PATH=&quot;$NOVAS_INST_DIR/share/NPI/lib/LINUX64_GNU_520&quot;:$LD_LIBRARY_PATH</span><br><span class="line">export NOVAS_HOME=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">LICENSE</span></span><br><span class="line">export SNPSLMD_LICENSE_FILE=&quot;/usr/stone/software/Liscen/Synopsys.dat&quot;</span><br><span class="line">export SNPSLMD_LICENSE_FILE=27000@自己的host-name</span><br><span class="line">export LM_LICENSE_FILE=&quot;/usr/stone/software/Liscen/Synopsys.dat&quot;</span><br><span class="line">alias lmli=&quot;/usr/stone/software/SCL2018/scl/2018.06/linux64/bin/lmgrd -c /usr/stone/software/License/Synopsys.dat&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SCL</span></span><br><span class="line">export PATH=/usr/stone/software/SCL2018/scl/2018.06/linux64/bin:$PATH</span><br><span class="line">alias dve=&quot;dve -full64 &amp;&quot;</span><br><span class="line">alias vcs64=&quot;vcs -full64&quot;</span><br><span class="line">alias verdi=&quot;verdi -full64 &amp;&quot;</span><br></pre></td></tr></table></figure><h3 id="2-5-验证license">2.5 验证License</h3><p>通过下面命令验证license，直到出现<code>Passed</code>，如下所示。如果多次验证依旧没有出现<code>Passed</code>，那么重新生成license，重新验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sssverify 自己的license路径</span><br></pre></td></tr></table></figure><p><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_4d9caa0682354de2b.png" alt="在这里插入图片描述"></p><h3 id="2-6-启动lmgrd">2.6 启动lmgrd</h3><p><code>lmgrd</code>是license管理工具，用于将license运行在后台，使软件正常工作，目前对于lmgrd理解只有这些。由于在环境变量设置了命令，所以输入<code>lmli</code>就可以启动<code>lmgrd</code>。</p><ol><li><strong>问题一：</strong><br>路径明明正确，通过<code>ls</code>也可以看到<code>lmgrd</code>，但它就是找不到lmgrd 。<br><img src="/imgs/65d0053bc6864ec5b9518498ec189bd2_2d244dbe4c71436f8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 这是因为没有32位运行库导致的通过下面命令安装即可。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install lsb</span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>问题二：</strong><br>再次执行<code>lmli</code>，提示没有/usr/tmp目录和在/usr/local/flexlm/licenses目录下找不到license。这个是肯定的，因为你压根就没有建这些目录<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_b476714129d64f8e8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 在/usr建立tmp目录，建立local/flexlm/licenses目录，把Synopsys.dat复制到licenses目录下，并把名字改成<strong>license.bat</strong></p></li><li><p><strong>问题三：</strong><br>提示打不开license，这是因为环境变量<code>SNPSLMD_LICENSE_FILE</code>的问题，在这个环境变量中赋值了两次，第一次是license的位置，第二次是用户。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_e21fc48a06a64178b.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 这里需要license的位置，所以先把第二个赋值注释，在后面启动DVE中，又会需要第二次赋值，再把注释打开</p></li><li><p><strong>问题四：</strong><br>由于上面lmgrd没有启动成功，但是端口号他还是占用的。当你再次输入<strong>lmli</strong>，应该会出现下面错误，显示端口号被占用<br><img src="/imgs/3c0d5dca161c487995a46fab2f3a4344_816dbc938bae49ac8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 输入下面命令终止该端口号。首先释放license，显示lmgrd占用的端口号，然后结束这个端口号进程，如下图所示</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lmdown ps auf | grep lmgrd kill -9 2381</span><br></pre></td></tr></table></figure><p><img src="/imgs/104c7525021f44ca9a7b8df1f9b39c1e_58f4aeccdaaa46dca.png" alt="在这里插入图片描述"><br>然后再次输入<code>lmli</code>,启动lmgrd。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_980e1f3be4484235b.png" alt="在这里插入图片描述"></p></li><li><p><strong>问题五：</strong><br>提示verdi语法错误Syntax error: “(“ unexpected<br><img src="/imgs/7e05b497b9ef8075fd878404c3e94aa0.png" alt="7e05b497b9ef8075fd878404c3e94aa0.png"><br><strong>解决方案：</strong> 代码对于标准bash而言没有错，因为Ubuntu为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼，解决方法就是取消dash。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure dash</span><br></pre></td></tr></table></figure><p><img src="/imgs/fcca05d088a62e2b3ee8f3c480f287c5.png" alt="fcca05d088a62e2b3ee8f3c480f287c5.png"><br>选择no</p></li></ol><h3 id="2-7-验证软件是否安装成功">2.7 验证软件是否安装成功</h3><ol><li>dve<br>输入<code>dve</code>,再次报错，提示<strong>SNPSLMD_LICENSE_FILE</strong>指示错误server。<br><img src="/imgs/f346182cc8c542c88fefc78bb6799bcb_fb38f5b7eb61418b8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 不慌，这个就是咱上面遗留的问题，把上面的注释打开即可。再次输入<code>dve</code>,见证dve的真面目吧！！！<br><img width="1219" height="641" src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_047ba3d9ba624537a.png"/></li><li>verdi<br>输入<code>verdi</code>，不要慌张，该来的总会来的。提示没有<strong>libpng12.so.0</strong>这个库<br><img src="/imgs/b65d253e28f044748fdce1264ca48335_f23015c7cdc743429.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 还记得第一步提到的那个库文件么，这时候就派上用场了。输入下面命令，注意<strong>libpng12.so.0</strong>是文件夹里面的文件，移动整个文件夹无法解决问题 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp libpng12.so.0  /usr/lib/x86_64-linux-gnu/</span><br></pre></td></tr></table></figure>再次输入<code>verdi</code>,激动吧！<br><img width="1219" height="573" src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_15cfc5162b954b359.png"/></li><li>VCS<br>输入<code>vcs -help</code>,坚持就是胜利！出现下面错误 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh:0: illegal option –h</span><br></pre></td></tr></table></figure><strong>解决方案：</strong> 这是因为Ubuntu下默认将<code>sh</code>链接到<code>bash</code>，输入下面命令重新链接。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /bin/sh ln -s /bin/bash /bin/sh</span><br></pre></td></tr></table></figure>输入<code>vcs -help</code>，好了，你的努力不是白费的。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_abaa340ee93742d98.png" alt="在这里插入图片描述"></li></ol><h3 id="2-8-设置开机自启动license">2.8 设置开机自启动License</h3><p>在<code>/etc/profile.d/</code>目录下创建<code>lmli.sh</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/profile.d/  </span><br><span class="line">sudo touch lmli.sh </span><br><span class="line">sudo chmod 777 lmli.sh</span><br></pre></td></tr></table></figure><p>写入下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/stone/software/SCL2018/scl/2018.06/linux64/bin/lmgrd -c </span><br><span class="line">/usr/stone/software/License/Synopsys.dat -l </span><br><span class="line">/usr/stone/software/SCL2018/scl/2018.06/linux64/bin/lmgrd.log</span><br></pre></td></tr></table></figure><hr><p>至此，vcs安装结束！</p><h2 id="3-vcs启动过程中的问题">3 VCS启动过程中的问题</h2><h3 id="1-vcs安装license激活的问题">1. VCS安装license激活的问题</h3><p>在VCS安装好后，使用scl工具对license进行激活时，可能会遇到如下错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash: /usr/synopsys/scl/scl/linux64/bin/lmgrd: No such file or directory</span><br></pre></td></tr></table></figure><p>该问题的原因是没有lsb库，在保证license文件路径正确的情况下，使用如下命令安装lsb库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lsb-core</span><br></pre></td></tr></table></figure><p>安装完成后reboot虚拟机即可解决上述问题，但可能还会出现flexlm文件不存在的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can&#x27;t make directory /usr/tmp/.flexlm, errno: 2(No such file or directory)</span><br></pre></td></tr></table></figure><p>这个问题比较好解决，直接创建一个flexlm文件就行了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.  sudo mkdir /usr/tmp </span><br><span class="line">2.  sudo touch /usr/tmp/.flexlm</span><br></pre></td></tr></table></figure><h2 id="4-vcs编译仿真中的问题">4 VCS编译仿真中的问题</h2><h3 id="4-1-recipe-for-target-simv-failed问题">4.1 recipe for target ‘simv’ failed问题</h3><p>在临时license授权成功后，就可以对编写的RTL代码编译和运行，但由于系统一开始缺少一些设置，直接运行VCS可能会出现一些问题，一开始会遇到这样的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh: 0: Illegal option -h</span><br><span class="line">Makefile:4: recipe for target &#x27;simv&#x27; failed</span><br><span class="line">make: *** [simv] Error 2</span><br></pre></td></tr></table></figure><p>该问题是由于Ubuntu操作系统将sh链接到了dash，手动修改sh链接到bash即可解决该问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /bin/sh /bin/sh_bak</span><br><span class="line">sudo ln -s /bin/bash /bin/sh</span><br></pre></td></tr></table></figure><h3 id="4-2-product-timestamp-error问题">4.2 product_timestamp error问题</h3><p>解决上述问题后，可能会遇到product_timestamp error的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Makefile:109: recipe for target &#x27;product_timestamp&#x27; failed</span><br><span class="line">make[1]: *** [product_timestamp] Error 1</span><br><span class="line">make[1]: Leaving directory &#x27;/home/alanwu/Documents/RISCV-SIM/csrc&#x27;</span><br><span class="line">Make exited with status 2</span><br></pre></td></tr></table></figure><p>这是因为操作系统安装的gcc版本太高，VCS调用的版本较低，需要修改VCS启动的变量，将gcc指定为g+±4.8，同时在你的vcs命令中添加如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">simv:filelist.f</span><br><span class="line">vcs -full64 -cpp g++-4.8 -cc gcc-4.8 -LDFLAGS -Wl,--no-as-needed \</span><br><span class="line">-f filelist.f \</span><br><span class="line">-sverilog \</span><br><span class="line">-debug_access+all \</span><br><span class="line">-kdb \</span><br><span class="line">-timescale=1ns/1ps \</span><br><span class="line">-l com.log</span><br></pre></td></tr></table></figure><p>如果操作系统没有安装gcc 4.8，会报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make[1]: Entering directory &#x27;/home/alanwu/Documents/RISCV-SIM/csrc&#x27;</span><br><span class="line">make[1]: gcc-4.8: Command not found</span><br></pre></td></tr></table></figure><p>安装gcc 4.8即可，这里安装直接从官方下载安装（如下方式）即可，不建议使用安装包的方式完成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd</span><br><span class="line">mkdir install_g++-4.8</span><br><span class="line">cd install_g++-4.8/</span><br><span class="line">sudo apt update</span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/g++-4.8_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/cpp-4.8_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libasan0_4.8.5-4ubuntu8_amd64.deb  </span><br><span class="line">sudo apt install ./gcc-4.8_4.8.5-4ubuntu8_amd64.deb ./gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb ./libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./cpp-4.8_4.8.5-4ubuntu8_amd64.deb ./libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./libasan0_4.8.5-4ubuntu8_amd64.deb ./g++-4.8_4.8.5-4ubuntu8_amd64.deb</span><br><span class="line">cd</span><br><span class="line">rm -rf install_g++-4.8</span><br></pre></td></tr></table></figure><h3 id="4-3-g-4-8-unrecognized-command-line-option-no-pie-错误">4.3 g+±4.8 unrecognized command line option '-no-pie’错误</h3><p>这里重点强调下g++的-no-pie错误，在安装好gcc 4.8和g+±4.8以后，可能还会报出g+±4.8: error: unrecognized command line option '-no-pie’的错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++-4.8: error: unrecognized command line option &#x27;-no-pie&#x27;</span><br><span class="line">Makefile:109: recipe for target &#x27;product_timestamp&#x27; failed</span><br></pre></td></tr></table></figure><p>出现该错误的原因是g++版本较低，VCS的预编译选项中会添加-no-pie标志，但g++不能够识别该命令，在VCS编译完成后的/csrc/Makefile文件中，会增加预编译选项：<br><img width="751" height="268" src="/imgs/f2b2e0f13176479d82c0f2c5fd2ffd28_65dad2919c8e462ea.png"/><br>csrc是个临时文件，真正产生该文件的位置是在安装的VCS路径下面：<br><img width="751" height="138" src="/imgs/07710ad1937a4483b2e946b4177825a4_6dd4725aba2848708.png"/><br>因此，进入VCS安装路径对应的/bin/文件夹下，打开vcs文件，将其中的PRE_LDFLAGS参数后面的-no-pie删除，即可成功解决该问题。<br><img width="751" height="127" src="/imgs/9e6cf1aa0e654b7d8219426de55bea21_1e42c29dbc9248b59.png"/></p><h3 id="4-5-undefined-reference-to-vfs-set-dir-map-问题">4.5 undefined reference to ‘vfs_set_dir_map’问题</h3><p>在vcs编译选项中加入下列语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-LDFLAGS -Wl,--no-as-needed</span><br></pre></td></tr></table></figure><h3 id="4-5-undefined-reference-to-pthread-yield问题">4.5 undefined reference to pthread_yield问题</h3><p>原因是：<code>/home/synopsys/vcs_2018.9/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o</code> 中的pthread_yield已在最新的glibc放弃使用了。<strong>注意文件夹路径</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 备份 </span></span><br><span class="line"><span class="built_in">mv</span> /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o.bak </span><br><span class="line"><span class="comment"># 2. 替换符号表中的pthread_yield </span></span><br><span class="line">objcopy --redefine-sym pthread_yield=sched_yield /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o.bak /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://blog.csdn.net/qq_41717683/article/details/122267191&quot;&gt;VCS2018在Ubuntu20 18安装步骤&lt;/a&gt;、&lt;a href=&quot;https://www.</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>YSYX-PA1学习记录</title>
    <link href="https://planckzgh.github.io/2023/11/05/YSYX-PA1%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/05/YSYX-PA1%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-05T06:59:40.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ysyx-pa1学习记录">YSYX-PA1学习记录</h1><h2 id="1-rtfsc">1 RTFSC</h2><p>这一部分最关键的是<strong>反复阅读</strong>源码！<br>不是像读课文一样反复阅读，而是了解源码结构和功能之后，在后面的练习中遇到不懂的反复回看源码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">ics2023</span><br><span class="line">├── abstract-machine           # 抽象计算机</span><br><span class="line">├── am-kernels                 # 基于抽象计算机开发的应用程序</span><br><span class="line">├── fceux-am                   # 红白机模拟器</span><br><span class="line">├── init.sh                    # 初始化脚本</span><br><span class="line">├── Makefile                   # 用于工程打包提交</span><br><span class="line">├── nemu                       # NEMU</span><br><span class="line">└── README.md</span><br><span class="line">───────────────────────────────────────────────</span><br><span class="line">nemu</span><br><span class="line">├── configs                    # 预先提供的一些配置文件</span><br><span class="line">├── include                    # 存放全局使用的头文件</span><br><span class="line">│   ├── common.h               # 公用的头文件</span><br><span class="line">│   ├── config                 # 配置系统生成的头文件, 用于维护配置选项更新的时间戳</span><br><span class="line">│   ├── cpu</span><br><span class="line">│   │   ├── cpu.h</span><br><span class="line">│   │   ├── decode.h           # 译码相关</span><br><span class="line">│   │   ├── difftest.h</span><br><span class="line">│   │   └── ifetch.h           # 取指相关</span><br><span class="line">│   ├── debug.h                # 一些方便调试用的宏</span><br><span class="line">│   ├── device                 # 设备相关</span><br><span class="line">│   ├── difftest-def.h</span><br><span class="line">│   ├── generated</span><br><span class="line">│   │   └── autoconf.h         # 配置系统生成的头文件, 用于根据配置信息定义相关的宏</span><br><span class="line">│   ├── isa.h                  # ISA相关</span><br><span class="line">│   ├── macro.h                # 一些方便的宏定义</span><br><span class="line">│   ├── memory                 # 访问内存相关</span><br><span class="line">│   └── utils.h</span><br><span class="line">├── Kconfig                    # 配置信息管理的规则</span><br><span class="line">├── Makefile                   # Makefile构建脚本</span><br><span class="line">├── README.md</span><br><span class="line">├── resource                   # 一些辅助资源</span><br><span class="line">├── scripts                    # Makefile构建脚本</span><br><span class="line">│   ├── build.mk</span><br><span class="line">│   ├── config.mk</span><br><span class="line">│   ├── git.mk                 # git版本控制相关</span><br><span class="line">│   └── native.mk</span><br><span class="line">├── src                        # 源文件</span><br><span class="line">│   ├── cpu</span><br><span class="line">│   │   └── cpu-exec.c         # 指令执行的主循环</span><br><span class="line">│   ├── device                 # 设备相关</span><br><span class="line">│   ├── engine</span><br><span class="line">│   │   └── interpreter        # 解释器的实现</span><br><span class="line">│   ├── filelist.mk</span><br><span class="line">│   ├── isa                    # ISA相关的实现</span><br><span class="line">│   │   ├── mips32</span><br><span class="line">│   │   ├── riscv32</span><br><span class="line">│   │   ├── riscv64</span><br><span class="line">│   │   └── x86</span><br><span class="line">│   ├── memory                 # 内存访问的实现</span><br><span class="line">│   ├── monitor</span><br><span class="line">│   │   ├── monitor.c</span><br><span class="line">│   │   └── sdb                # 简易调试器</span><br><span class="line">│   │       ├── expr.c         # 表达式求值的实现</span><br><span class="line">│   │       ├── sdb.c          # 简易调试器的命令处理</span><br><span class="line">│   │       └── watchpoint.c   # 监视点的实现</span><br><span class="line">│   ├── nemu-main.c            # 你知道的...</span><br><span class="line">│   └── utils                  # 一些公共的功能</span><br><span class="line">│       ├── log.c              # 日志文件相关</span><br><span class="line">│       ├── rand.c</span><br><span class="line">│       ├── state.c</span><br><span class="line">│       └── timer.c</span><br><span class="line">└── tools                      # 一些工具</span><br><span class="line">    ├── fixdep                 # 依赖修复, 配合配置系统进行使用</span><br><span class="line">    ├── gen-expr</span><br><span class="line">    ├── kconfig                # 配置系统</span><br><span class="line">    ├── kvm-diff</span><br><span class="line">    ├── qemu-diff</span><br><span class="line">    └── spike-diff</span><br></pre></td></tr></table></figure><h2 id="2-基础设施：简易调试器">2 基础设施：简易调试器</h2><h3 id="2-1-解析命令">2.1 解析命令</h3><p>掌握一些字符串处理函数</p><ol><li><code>man strtok</code>：字符串切分和解析函数</li><li><code>man strncpy</code>：字符串复制函数</li><li><code>man sscanf</code>：字符串解析函数</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">strtok(<span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *delim);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- 第一次调用时，str需要指定，后续对同一个str解析时，str指定为NULL</span></span><br><span class="line"><span class="comment">- 每次调用，delim可以制定不同的分界符</span></span><br><span class="line"><span class="comment">- 每次调用，strtok都会返回一个指针指向下一个token，直到下一个token为空指向NULL</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">strncpy</span>(<span class="type">char</span> *dest, <span class="type">const</span> <span class="type">char</span> *str, <span class="type">size_t</span> n);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- 复制str字符串的前n个字节至dest中</span></span><br><span class="line"><span class="comment">- str不足n长，用空字节补全</span></span><br><span class="line"><span class="comment">- 如果str的前n字节无空字节，dest将不会以空字节`\0`结尾</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sscanf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- sscanf返回成功提取的参数的个数，否则返回0</span></span><br><span class="line"><span class="comment">- format可以自定义解析的格式</span></span><br><span class="line"><span class="comment">- 特殊用法：sscanf(str, &quot;%d %50[^\n]&quot;, &amp;num, expr); 其中%50[^\n]指的是提取宽度为50的字符串并将其解析成字符串（除非遇到换行符\n）</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="2-2-单步执行">2.2 单步执行</h3><p>掌握<code>cpu_exec(n)</code>的作用</p><h3 id="2-3-打印寄存器">2.3 打印寄存器</h3><p>寄存器符号<code>regs[i]</code>和寄存器值<code>cpu.gpr[i]</code><br>别忘了<code>pc</code>寄存器和寄存器值<code>cpu.pc</code></p><h3 id="2-4-扫描内存">2.4 扫描内存</h3><p>掌握<code>sscanf()</code>函数解析字符串</p><h2 id="3-表达式求值">3 表达式求值</h2><h3 id="3-1-利用正则表达式识别token">3.1 利用正则表达式识别token</h3><h3 id="3-2-递归求值-分治法">3.2 递归求值——分治法</h3><h4 id="3-2-1-匹配括号">3.2.1 匹配括号</h4><h4 id="3-2-2-寻找主操作符">3.2.2 寻找主操作符</h4><h3 id="3-3-随机测试">3.3 随机测试</h3><ul><li>[ ] 如何保证表达式进行无符号运算?</li><li>[x] 如何随机插入空格?</li><li>[ ] 如何生成长表达式, 同时不会使buf溢出?</li><li>[x] 如何过滤求值过程中有除0行为的表达式?</li></ul><h2 id="4-监视点">4 监视点</h2><p>单向链表的插入操作：头插法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ysyx-pa1学习记录&quot;&gt;YSYX-PA1学习记录&lt;/h1&gt;
&lt;h2 id=&quot;1-rtfsc&quot;&gt;1 RTFSC&lt;/h2&gt;
&lt;p&gt;这一部分最关键的是&lt;strong&gt;反复阅读&lt;/strong&gt;源码！&lt;br&gt;
不是像读课文一样反复阅读，而是了解源码结构和功能之后，在后</summary>
      
    
    
    
    
    <category term="总结" scheme="https://planckzgh.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>YSYX-PA0学习记录</title>
    <link href="https://planckzgh.github.io/2023/11/01/YSYX-PA0%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/01/YSYX-PA0%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-01T09:40:30.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ysyx-pa0学习记录">YSYX-PA0学习记录</h1><blockquote><p>写下PA0重新复盘PA0的完成过程，查漏补缺</p></blockquote><h2 id="1-ubuntu的安装">1 Ubuntu的安装</h2><p>由于之前使用的常常是windows系统，此处选择安装双系统，主要参考b站up阿杰的<a href="https://www.bilibili.com/video/BV1554y1n7zv/?spm_id_from=333.337.search-card.all.click&amp;vd_source=1d1cb8cc1e7664d1de1ccb2714b0b9b4">双系统安装教程</a>，关键步骤如下：</p><ol><li>使用rufus制作启动U盘；</li><li>磁盘分区尽量大一些；（如果选择方案二，根挂载点应当给到50GB以上）</li><li>注意系统的时间同步问题；</li></ol><h2 id="2-ubuntu系统的配置">2 Ubuntu系统的配置</h2><ol><li>推荐安装一些常用软件：QQ，网易邮箱，Joplin，clash，onedrive，edge, sublime-text</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i *.deb</span><br></pre></td></tr></table></figure><ol start="2"><li>简洁的配置vim和sublime</li></ol><h2 id="3-linux的学习探索">3 Linux的学习探索</h2><blockquote><p>学习资源：<a href="https://101.ustclug.org/">Linux101</a>、<a href="https://www.harley.com/books/sg3.html">HARLEY HAHN’S GUIDE TO UNIX AND LINUX</a>、<a href="https://missing-semester-cn.github.io/">计算机教育中缺失的一课</a>、<a href="http://akaedu.github.io/book/">C语言教程</a>、<a href="https://www.cntofu.com/book/25/index.html">笨办法学C</a>，<a href="https://github.com/search?o=desc&amp;q=dotfiles&amp;s=stars&amp;type=Repositories">dotfiles仓库</a></p></blockquote><h3 id="3-1-常用命令">3.1 常用命令</h3><ol><li>软件安装：<code>sudo apt install file or *.deb</code></li><li>帮助文档<ul><li>全面：<code>man</code></li><li>快速：<code>tldr</code></li></ul></li><li>文件操作<ul><li>查看：<code>cat</code>,<code>less</code>,<code>head</code>,<code>tail</code></li><li>复制：<code>cp</code></li><li>移动：<code>mv</code></li><li>删除：<code>rm</code></li><li>创建：<code>mkdir</code>,<code>touch</code></li><li>压缩：<code>tar</code></li><li>权限：<code>chmod</code></li><li>搜索：<code>find</code>，<code>fd</code>，<code>locate</code></li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找所有名称为src的文件夹</span></span><br><span class="line">find . -name src -type d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找所有文件夹路径中包含<span class="built_in">test</span>的python文件</span></span><br><span class="line">find . -path &#x27;*/test/*.py&#x27; -type f</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找前一天修改的所有文件</span></span><br><span class="line">find . -mtime -1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找所有大小在500k至10M的tar.gz文件</span></span><br><span class="line">find . -size +500k -size -10M -name &#x27;*.tar.gz&#x27;</span><br></pre></td></tr></table></figure><ol start="4"><li>重定向与管道<ul><li>覆盖：<code>echo &quot;Hello Linux!&quot; &gt; output_file</code></li><li>追加：<code>echo &quot;Hello Linux!&quot; &gt;&gt; output_file</code><ul><li>转义与不转义：<code>echo &quot;$foo&quot;</code> or <code>echo '$foo'</code></li></ul></li><li>管道：<code>|</code>将符号左侧命令的<code>stdout</code>作为符号右侧命令的<code>stdin</code></li></ul></li><li>网络下载：<code>wget</code>,<code>curl</code></li><li>文本处理<ul><li>统计：<code>wc</code></li><li>比较：<code>diff file1 file2</code></li><li>查找：<code>grep</code></li><li>替换：<code>sed</code></li><li>排序：<code>sort</code></li><li>正则表达式</li></ul></li></ol><h3 id="3-2-shell脚本">3.2 Shell脚本</h3><ol><li>变量赋值：<code>foo=bar</code></li><li>变量访问：<code>$foo</code></li><li>字符串：转义<code>&quot;&quot;</code>，原义<code>''</code></li><li>通配符：<ul><li><code>?</code>：匹配一个字符</li><li><code>*</code>：匹配任意个字符</li></ul></li><li>花括号：<code>mv *&#123;.py,.sh&#125; folder</code></li><li>函数：<ol><li>参数：<ul><li><code>$0</code>：脚本名</li><li><code>$1-$9</code>：第1-9个参数</li><li><code>$@</code>：所有参数</li><li><code>$#</code>：参数个数</li><li><code>$?</code>：前一个命令的返回值</li><li><code>$$</code>：当前脚本的进程识别码</li><li><code>!!</code>：完整的上一条命令</li><li><code>$_</code>：上一条命令的最后一个参数</li></ul></li><li>返回值：<code>0</code>：表示正常执行，反之出错</li></ol></li><li>条件语句：<ul><li><code>-z/-n</code> ：空/非空</li><li><code>-eq/-ne</code>：相等/不等</li><li><code>-gt/-lt</code>：大于/小于</li><li><code>-ge/-le</code>：大于等于/小于等于</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if condition1</span><br><span class="line">then</span><br><span class="line">    # 代码块会在条件1为真时执行</span><br><span class="line">elif condition2</span><br><span class="line">then</span><br><span class="line">    # 代码块会在条件2为真时执行</span><br><span class="line">else</span><br><span class="line">    # 如果前面的条件都不为真，执行此代码块</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="3-3-makefile简明教程">3.3 Makefile简明教程</h3><h3 id="3-4-gdb">3.4 GDB</h3><blockquote><p><a href="https://linuxconfig.org/gdb-debugging-tutorial-for-beginners">small tutorial</a></p></blockquote><h4 id="3-4-1-bug：生成转储文件">3.4.1 BUG：生成转储文件</h4><ol start="0"><li>生成可执行文件：<code>gcc -ggdb test.c -o test.out</code></li><li>查看转储文件生成路径：<code>cat /proc/sys/kernel/core_pattern</code></li><li>修改转储文件输出路径和输出文件名</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 控制core文件的文件名中是否添加pid作为扩展</span><br><span class="line">echo &quot;1&quot; &gt; /proc/sys/kernel/core_uses_pid </span><br><span class="line">// 设置core文件的输出路径和输出文件名，这里我的路径是/home/boy/corefile，文件名就是后面的部分</span><br><span class="line">echo &quot;/home/your_path/core-%e-%p-%t&quot;&gt; /proc/sys/kernel/core_pattern </span><br><span class="line">//参数说明</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">p - insert pid into filename 添加pid</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">u - insert current uid into filename 添加当前uid</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">g - insert current gid into filename 添加当前gid</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">s - insert signal that caused the coredump into the filename 添加导致产生core的信号</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">t - insert UNIX time that the coredump occurred into filename 添加core文件生成时的unix时间</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">h - insert hostname <span class="built_in">where</span> the coredump happened into filename 添加主机名</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">e - insert coredumping executable name into filename 添加程序名</span></span><br></pre></td></tr></table></figure><ol start="3"><li>查看core file size：<code>ulimit -a</code></li><li>修改core file size：<code>ulimit -c unlimited</code></li><li>重新运行可执行文件：<code>./test.out</code></li><li>注意：以上行为可能需要su权限，甚至gdb执行内核转储文件的操作也需要su权限。</li></ol><h4 id="3-4-2-基本操作">3.4.2 基本操作</h4><ol><li>su下使用gdb分析core dump：<code>gdb ./test.out ./core.1341870.1000.8.test.out.1598867712</code></li><li>Backstracing：<code>bt</code></li><li>Frame: <code>f n</code></li><li>List source code: <code>list</code></li><li>Print: <code>p a</code></li><li><code>watch expr</code>：表达式发生变化时暂停运行</li><li><code>awatch expr</code>：表达式被访问、改变是暂停执行</li><li>rwatch <code>expr</code>：表达式被访问时暂停执行</li></ol><h3 id="3-5-tmux简明教程">3.5 <a href="https://planckzgh.github.io/2023/10/23/Tmux%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/">Tmux简明教程</a></h3><h3 id="3-6-git简明教程">3.6 Git简明教程</h3><blockquote><p><a href="https://missing-semester-cn.github.io/2020/version-control/">git</a><br><a href="https://learngitbranching.js.org/?locale=zh_CN">Learn Git Branching</a></p></blockquote><h3 id="3-7-c语言教程">3.7 C语言教程</h3><blockquote><p>在此总结此后遇到的所有与c语言相关的问题；<br>完成预学习部分的C语言题目</p></blockquote><h3 id="3-8-正则表达式">3.8 正则表达式</h3><p><img src="/imgs/a1.png" alt="正则表达式基本规则.png"></p><h2 id="4-数字电路基础实验">4 数字电路基础实验</h2><blockquote><p><a href="https://nju-projectn.github.io/dlco-lecture-note/exp/01.html">南大数字逻辑与计算机组成课程实验</a></p></blockquote><h3 id="4-1-注意">4.1 注意！</h3><ol><li>强烈建议初学者不要使用行为建模方式设计电路</li><li>One-hot编码的状态机从一个状态到另一个状态的<strong>状态跳转速度非常快</strong>，而顺序二进制编码从一个状态跳转到另外一个状态需要较多次跳转，并且随着状态的增加，速度急剧下降。 在芯片受到干扰时，one-hot编码一般只能跳转到无效状态（如果跳到另一有效状态必须是当前为 1 的为变为 0 ，同时另外一位变成由 0 变为 1 ，这种可能性很小），因此<strong>one-hot编码的状态机稳定性高</strong>。CPLD多使用gray-code，而FPGA多使用one-hot 编码。对于触发器资源非常丰富的FPGA器件，使用one-hot是常用的。</li></ol><hr><p>Verilog一开始并不是为了设计可综合电路而提出的，它的本质是一门基于事件队列模型的电路建模语言。因此，行为建模很容易会让初学者偏离描述电路的初衷: 开发者需要看着电路图，心里想象电路的行为，然后转化成事件队列模型的思考方式，最后再用行为建模方式来描述电路的行为，综合器再来根据这样的描述推导出相应的电路。从这个过程来看，这不仅是没有必要的，而且还很容易引入错误：如果开发者心里本身就已经有电路图，直接描述它是最方便的，如果开发者心里本身就已经有电路图，而开发者对行为建模方式的理解所有偏差，可能会采用了错误的描述方式，从而设计出非预期的电路。如果开发者心里没有电路图，而是期望通过行为建模方式让综合器生成某种行为的电路，这就已经偏离“描述电路”的本质了。大部分同学非常容易犯这样的错误，把行为建模当作过程式的C语言来写，尝试把任意复杂的行为描述映射到电路，最终综合器只会生成出延迟大，面积大，功耗高的低质量电路。所以，直到大家掌握“描述电路”的思维而不被行为建模误导之前，我们强烈建议初学者远离行为建模方式，仅通过数据流建模和结构化建模方式直接描述电路。例如，上文关于if和always的说法从某种程度上来说是正确的，但下面的问题可以帮助大家测试自己是否已经掌握了Verilog的本质：</p><ul><li>在硬件描述语言中，“执行”的精确含义是什么？</li></ul><blockquote><p>答：在仿真器里是模拟电路；在综合器中综合电路；在时序电路中顺序执行，在并行电路中交互执行；</p></blockquote><ul><li>是谁在执行Verilog的语句？ 是电路，综合器，还是其它的？</li></ul><blockquote><p>答：在开发阶段，使用模拟器；在综合阶段，使用综合器；最后在电路上执行。</p></blockquote><ul><li>if的条件满足，就不执行else后的语句，这里的“不执行”又是什么意思？ 和描述电路有什么联系？</li></ul><blockquote><p>都要描述；不执行指跳过执行。</p></blockquote><ul><li>有“并发执行”，又有“顺序执行”，还有“任何一个变量发生变化就立即执行”，以及“在任何情况下都执行”，它们都是如何在设计出来的电路中体现的？</li></ul><blockquote><p>并联和串联的关系；顺序执行可以通过时序和寄存器实现；变化执行可以通过触发器(Flip-Flops)实现；</p></blockquote><p>如果你无法对这些问题作出明确的回答，我们强烈建议你不要使用行为建模方式。如果你真的想弄懂它们，你需要阅读 Verilog标准手册 。</p><p><strong>真正的描述电路 = 实例化 + 连线</strong></p><ul><li>实例化：在电路板上放一个元件/模块，可以是一个门电路，或者是由门电路组成的模块</li><li>连线：用导线将元件/模块的引脚正确地连起来</li></ul><h3 id="4-2-拓展">4.2 拓展</h3><blockquote><p><strong>生成进位加法器</strong><br>先行进位加法器（Carry Look-Ahead Adder，CLA）是一种加法器设计，旨在加快加法操作的速度，特别是在大规模加法操作中。与传统的Ripple Carry Adder相比，CLA具有更高的性能，因为它可以在不等待进位传递的情况下生成和处理进位。<br>CLA加法器的设计基于以下原理：</p><ol><li>生成（G）和传播（P）信号：CLA加法器使用生成和传播信号来确定每个位的进位。生成信号（G）表示两个输入位相加时是否会生成进位（1表示生成，0表示不生成），而传播信号（P）表示输入位是否传播进位到该位（1表示传播，0表示不传播）。</li><li>进位生成：对于每一位i，进位生成（G_i）等于输入A_i和B_i相加的逻辑与（AND）操作。即：G_i = A_i &amp; B_i。</li><li>进位传播：进位传播（P_i）等于输入A_i或B_i的逻辑或（OR）操作。即：P_i = A_i | B_i。</li><li>进位计算：CLA加法器使用生成（G）和传播（P）信号来计算每一位的进位。对于第一位（最低位），进位C0等于G0，然后每一位的进位C_i都通过以下等式计算：C_i = G_i + (P_i &amp; C_(i-1))。</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ysyx-pa0学习记录&quot;&gt;YSYX-PA0学习记录&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;写下PA0重新复盘PA0的完成过程，查漏补缺&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-ubuntu的安装&quot;&gt;1 Ubuntu的安装&lt;/h2&gt;
&lt;p&gt;由于</summary>
      
    
    
    
    
    <category term="总结" scheme="https://planckzgh.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Tmux简明教程</title>
    <link href="https://planckzgh.github.io/2023/10/23/Tmux%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2023/10/23/Tmux%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</id>
    <published>2023-10-23T03:26:59.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tmux简明教程">Tmux简明教程</h1><blockquote><p>参考资料：<a href="https://blog.csdn.net/easylife206/article/details/102713902">可能是东半球最全面易懂的 Tmux 使用教程！( 强烈建议收藏 )</a></p></blockquote><h2 id="tmux简介">Tmux简介</h2><ol><li>会话：用户在终端窗口(进程)中输入命令进行交互，称为一次会话；</li><li>Tmux就是会话与窗口的解绑工具。</li></ol><h2 id="基本操作">基本操作</h2><h3 id="0-前缀键：ctrl-b">0. 前缀键：<code>ctrl+b</code></h3><ol><li><code>+ 方向键</code>：切换窗格</li><li><code>+ x</code>：关闭当前窗格</li><li><code>+ z</code>：全屏当前窗格</li><li><code>+ d</code>：分离当前会话</li><li><code>+ q</code>：显示窗格编号tmux</li></ol><h3 id="1-会话操作">1. 会话操作</h3><blockquote><p>启动，退出，创建，接入，分离，查看，杀死，重命名，切换0</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tmux # 启动</span><br><span class="line">exit # 退出</span><br><span class="line">tmux new -s &lt;session-name&gt;</span><br><span class="line">tmux attach -t &lt;session-name&gt;</span><br><span class="line">tmux detach </span><br><span class="line">tmux ls</span><br><span class="line">tmux kill-session -t &lt;session-name&gt;</span><br><span class="line">tmux rename-session -t &lt;target-name&gt; &lt;new-name&gt;</span><br><span class="line">tmux switch-session -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure><h3 id="2-窗格操作">2. 窗格操作</h3><blockquote><p>新建，切换，划分，移动，交换</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tmux new-window -n &lt;window-name&gt;</span><br><span class="line">tmux select-window -t &lt;window-name&gt;</span><br><span class="line">tmux rename-window &lt;new-name&gt;</span><br><span class="line"></span><br><span class="line">tmux split-window    # up-down</span><br><span class="line">tmux split-window -h # left-right</span><br><span class="line"></span><br><span class="line">tmux select-pane -U  # up</span><br><span class="line">tmux select-pane -D  # down</span><br><span class="line">tmux select-pane -L  # left</span><br><span class="line">tmux select-pane -R  # right</span><br><span class="line"></span><br><span class="line">tmux swap-pane   -U  # -D -L -R</span><br></pre></td></tr></table></figure><h3 id="3-其他操作">3. 其他操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux set mouse on # 设定鼠标滚动支持</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;tmux简明教程&quot;&gt;Tmux简明教程&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://blog.csdn.net/easylife206/article/details/102713902&quot;&gt;可能是东半球最全面易懂的 Tmux</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Joplin笔记恢复记录</title>
    <link href="https://planckzgh.github.io/2023/10/23/Joplin%E7%AC%94%E8%AE%B0%E6%81%A2%E5%A4%8D%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/10/23/Joplin%E7%AC%94%E8%AE%B0%E6%81%A2%E5%A4%8D%E8%AE%B0%E5%BD%95/</id>
    <published>2023-10-23T02:03:30.000Z</published>
    <updated>2024-03-24T10:55:18.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记一次joplin笔记恢复记录">记一次Joplin笔记恢复记录</h1><h2 id="1-原因">1 原因</h2><p>更改了Onedrive本地文件夹路径，导致Joplin同步为空，但本地文件并未丢失。</p><h2 id="2-找回方法">2 找回方法</h2><h3 id="2-1-确定现象">2.1 确定现象</h3><p>打开Joplin，等待软件自动同步，Joplin会因找不到原路径而重新创建一个新路径（我的路径为：Onedrive/应用/Joplin）</p><p><strong>注意</strong>：此处Joplin找不到路径的原因是我们曾经动过Joplin的同步路径，就算我们后来改回了原路径，也算曾经对原路径改动过，Joplin仍然会忽略我们改回的路径，重新创建一个同步路径。<br>那我自己举例：</p><ol><li>我将Joplin同步路径（Onedrive/应用/Joplin）不小心更改为（Onedrive/Apps/Joplin）。</li><li>在上述操作不知情时，我打开Joplin记笔记，Joplin会自动同步，找不到路径重新生成新路径（Onedrive/应用/Joplin），此时我发现同步笔记数据部分丢失。</li><li>于是我删除了Joplin重新创建的新路径（因为新路径的笔记数据不完整），将第一步操作重做（即，重新将Joplin同步路径更改为Onedrive/应用/Joplin）</li><li>此时，我再次打开Joplin，发现Joplin似乎不认识原路径，自动同步状态下重新创建了新路径（Onedrive/应用 1/Joplin）</li></ol><h3 id="2-2-解决方案">2.2 解决方案</h3><p>利用Joplin同步一共分为五个步骤。</p><ol><li>备份Joplin笔记数据。</li><li>清空Onedrive中Joplin的同步路径（无论是Joplin的原始同步路径，还是Joplin后来创建的新的同步路径）。</li><li>打开Joplin，等待Joplin同步完成，自动创建同步路径（Onedrive/应用/Joplin），<strong>不要</strong>关闭Joplin软件。</li><li>删除（Onedrive/应用）路径下的Joplin文件夹，更换为第一步已备份的Joplin文件夹。</li><li>点击Joplin软件菜单栏的工具–&gt;选项–&gt;同步–&gt;显示高级选项–&gt;重新上传本地数据到同步目标–&gt;确定，等待Joplin上传本地项目。此时，Joplin笔记数据会慢慢恢复。</li></ol><h2 id="3-总结">3 总结</h2><p>经此一次，我得出教训，Joplin同步路径最好不要乱动，对于平日在Joplin记录的重要内容要定期定时进行多端（手机端，电脑端、平板端和网页端）同步。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;记一次joplin笔记恢复记录&quot;&gt;记一次Joplin笔记恢复记录&lt;/h1&gt;
&lt;h2 id=&quot;1-原因&quot;&gt;1 原因&lt;/h2&gt;
&lt;p&gt;更改了Onedrive本地文件夹路径，导致Joplin同步为空，但本地文件并未丢失。&lt;/p&gt;
&lt;h2 id=&quot;2-找回方法&quot;&gt;2 找回</summary>
      
    
    
    
    
    <category term="记录" scheme="https://planckzgh.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
