<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>planckgh</title>
  <icon>https://www.gravatar.com/avatar/036b4e7e0d8e7f5b8248d1bce20305d2</icon>
  <subtitle>个人博客</subtitle>
  <link href="https://planckzgh.github.io/atom.xml" rel="self"/>
  
  <link href="https://planckzgh.github.io/"/>
  <updated>2024-03-24T07:07:38.599Z</updated>
  <id>https://planckzgh.github.io/</id>
  
  <author>
    <name>planckgh</name>
    <email>planckgh@gmail.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>建立时间与保持时间</title>
    <link href="https://planckzgh.github.io/2024/03/23/%E5%BB%BA%E7%AB%8B%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BF%9D%E6%8C%81%E6%97%B6%E9%97%B4/"/>
    <id>https://planckzgh.github.io/2024/03/23/%E5%BB%BA%E7%AB%8B%E6%97%B6%E9%97%B4%E4%B8%8E%E4%BF%9D%E6%8C%81%E6%97%B6%E9%97%B4/</id>
    <published>2024-03-23T14:26:05.000Z</published>
    <updated>2024-03-24T07:07:38.599Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考资料：</p><ul><li><a href="https://zhuanlan.zhihu.com/p/409230001">建立时间与保持时间</a></li><li><a href="https://zhuanlan.zhihu.com/p/161283550">一文解决关于建立保持时间的困惑</a></li></ul></blockquote><h2 id="理解">理解</h2><ul><li><strong>建立时间</strong>就是时钟触发事件来临之前，数据需要保持稳定的最小时间，以便数据能够被时钟正确的采样。</li><li><strong>保持时间</strong>就是时钟触发事件来临之后，数据需要保持稳定的最小时间，以便数据能够被电路准确的传输。</li></ul><p><img src="/imgs/%E6%95%B0%E5%AD%97%E7%94%B5%E8%B7%AF.png" alt="数字电路.png"></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>h</mi><mi>d</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>q</mi></mrow></msub><mo>−</mo><msub><mi>T</mi><mrow><mi>s</mi><mi>k</mi><mi>e</mi><mi>w</mi></mrow></msub><mo>+</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>o</mi><mi>m</mi><mi>b</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><msub><mi>T</mi><mrow><mi>c</mi><mi>l</mi><mi>k</mi></mrow></msub><mo>−</mo><msub><mover accent="true"><mi>T</mi><mo>^</mo></mover><mrow><mi>h</mi><mi>d</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}T_{hd}&amp;\leq T_{cq}-T_{skew}+T_{comb} \\T_{su}&amp;\leq T_{clk}-\hat{T}_{hd}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.10677em;vertical-align:-1.303385em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.803385em;"><span style="top:-3.9633849999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.356615em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.303385em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.803385em;"><span style="top:-3.9633849999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">q</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span><span class="mord mathdefault mtight">e</span><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.356615em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9467699999999999em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span></span></span><span style="top:-3.25233em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.303385em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><img src="/imgs/su_hd_time.svg" alt="建立时间保持时间"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&#123; signal: [</span><br><span class="line">  &#123; name: &quot;clk&quot;,      wave: &quot;p..&quot;, node:&#x27;.ab&#x27;&#125;,</span><br><span class="line">  &#123; name: &quot;D1&quot;,       wave: &quot;01.&quot;, phase: 0.5&#125;,</span><br><span class="line">  &#123; name: &quot;Q1&quot;,       wave: &quot;01.&quot; ,phase:-1, node:&#x27;.c&#x27;&#125;,</span><br><span class="line">  &#123; name: &quot;clk_skew&quot;, wave: &quot;p..&quot;, node:&#x27;.de&#x27;, phase:-0.8&#125;,</span><br><span class="line">  &#123; name: &quot;D2&quot;,       wave: &quot;01.&quot;, phase:-3, node:&#x27;.f&#x27;&#125;,</span><br><span class="line">  ],</span><br><span class="line">  config: &#123; hscale: 5 &#125;,</span><br><span class="line">  edge: [&#x27;a-b Tclk&#x27;, &#x27;a-~c Tcq&#x27;, &#x27;c-~f Tcomb&#x27;, &#x27;a~-d Tskew&#x27;,&#x27;b-~e Tskew&#x27;, &#x27;d~-f &gt;Thd&#x27;, &#x27;f-~e &gt;Tsu&#x27;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="例题">例题</h2><p><strong>例1</strong>：考虑线网延迟，某电路各种延迟值（单位：ns）如下，时钟周期为 15ns，请判断该电路的建立时间和保持时间是否存在 violation ？</p><p><img src="/imgs/v2-3e4c3887cb341e4801ced1d4164f7_4ed585f31289403d8.jpg" alt=""></p><blockquote><p>答案：建立时间裕量为  1 ；保持时间 violation，裕量为 -4；</p></blockquote><hr><p><strong>例2</strong>： 一道知名公司的面试题：时钟周期为 T, 第一级触发器 D1 建立时间最大值为 T1max，最小值为 T1min。组合逻辑最大延迟为 T2max, 最小值为 T2min。问：第二级触发器 D2 的建立时间和保持时间应该满足什么条件？</p><blockquote><p>答案：<br>第二级触发器的建立时间与保持时间与第一级的触发器没有直接关系；<br>列出约束关系，并根据已知参数适当取舍，得到简化后的约束关系如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>h</mi><mi>d</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><msub><mi>T</mi><mrow><mn>2</mn><mi>m</mi><mi>i</mi><mi>n</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>T</mi><mrow><mi>s</mi><mi>u</mi></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>≤</mo><mi>T</mi><mo>−</mo><msub><mi>T</mi><mrow><mn>2</mn><mi>m</mi><mi>a</mi><mi>x</mi></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}T_{hd}&amp;\leq T_{2min} \\T_{su}&amp;\leq T-T_{2max}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000000000000004em;vertical-align:-1.2500000000000002em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">h</span><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mord mathdefault mtight">u</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7500000000000002em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2500000000000002em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></blockquote><hr><p><strong>例3</strong>：一种简单的分频电路如下所示。该触发器建立时间为 3ns, 保持时间为 3ns， 逻辑延迟为 6ns，两个反相器延迟为 1ns，连线延迟为 0。则该电路的最高工作频率是多少？<br><img src="/imgs/v2-a38a73c87486b4e4cf75996c60493_b75b5821e19244308.jpg" alt=""></p><blockquote><p>答案：<br>只有一个时钟，一个触发器，没有时钟偏移，clock path 的反相器延迟是迷惑项。<br>最高工作频率为 100MHz</p></blockquote><hr><p><strong>例4</strong>：<br>（1）以下电路<strong>固有的建立时间和保持时间</strong>？<br>（2）该电路最高的工作频率？<br><img src="/imgs/v2-65fe35f45522a25d7be37ec7812a0_ca136a3493e5472d9.jpg" alt=""><br><img src="/imgs/su_hd_time2.svg" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&#123; signal: [</span><br><span class="line">  &#123; name: &quot;Clock&quot;,    wave: &quot;P...&quot;,node: &#x27;.ah&#x27;, phase: 0.8, period:2&#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123; name: &quot;Data&quot;,     wave: &quot;====&quot;,node: &#x27;.d.e&#x27;, phase: 3.7, period: 2&#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123; name: &quot;CK&quot;,       wave: &quot;P..&quot;, node: &#x27;.bg&#x27;, period: 2 &#125;,</span><br><span class="line">  &#123;&#125;,</span><br><span class="line">  &#123; name: &quot;D&quot;,        wave: &quot;====&quot;,node: &#x27;.c.f&#x27;, phase: 2.15, period: 2&#125;,</span><br><span class="line">  ],</span><br><span class="line">  config: &#123; hscale: 2 &#125;,</span><br><span class="line">  edge: [&#x27;b~-a Tskew&#x27;, &#x27;c-~d Tcomb&#x27;, &#x27;b~-c Tsu&#x27;, &#x27;a-~d 固有建立时间&#x27;,</span><br><span class="line">         &#x27;g~-f Thd&#x27;, &#x27;h-~e 固有保持时间&#x27;, &#x27;e-~f Tcomb&#x27;, &#x27;h~-g Tskew&#x27;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>答案：<br>该电路固有的建立时间为：2.1 + 2 - 1.2 = 2.9ns<br>固有的保持时间为：1.2 + 1.5 - 2.1 = 0.6ns<br>此电路仍然是自身到自身的反馈电路。所以没有时钟偏移，也无需考虑 T1 = 0.9ns 的延迟。所以最高工作频率为： 1 / (1.8 + 1.2 + 2)ns = 200MHz</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.com/p/409230001&quot;&gt;建立时间与保持时间&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://zhuanlan.zhihu.c</summary>
      
    
    
    
    
    <category term="思考" scheme="https://planckzgh.github.io/tags/%E6%80%9D%E8%80%83/"/>
    
  </entry>
  
  <entry>
    <title>【VIM】Verilog开发环境配置</title>
    <link href="https://planckzgh.github.io/2024/02/01/%E3%80%90VIM%E3%80%91Verilog%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
    <id>https://planckzgh.github.io/2024/02/01/%E3%80%90VIM%E3%80%91Verilog%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</id>
    <published>2024-02-01T12:55:17.000Z</published>
    <updated>2024-02-01T13:46:39.868Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim-verilog开发环境配置">【VIM】Verilog开发环境配置</h1><h2 id="代码补全">代码补全</h2><p>网上有推荐的，暂时还没有使用过</p><h2 id="自动例化">自动例化</h2><p>Plugin: automatic-verilog</p><h2 id="代码格式化">代码格式化</h2><p>没有什么好用的一键格式化的工具<br>推荐敲代码时用的格式化工具；<br>tabular</p><h2 id="语法检查">语法检查</h2><p>Plugin: ale<br>verilator</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vim-verilog开发环境配置&quot;&gt;【VIM】Verilog开发环境配置&lt;/h1&gt;
&lt;h2 id=&quot;代码补全&quot;&gt;代码补全&lt;/h2&gt;
&lt;p&gt;网上有推荐的，暂时还没有使用过&lt;/p&gt;
&lt;h2 id=&quot;自动例化&quot;&gt;自动例化&lt;/h2&gt;
&lt;p&gt;Plugin: automat</summary>
      
    
    
    
    
    <category term="基础设施" scheme="https://planckzgh.github.io/tags/%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD/"/>
    
  </entry>
  
  <entry>
    <title>ROIC项目电路设计与调试</title>
    <link href="https://planckzgh.github.io/2024/01/31/ROIC%E9%A1%B9%E7%9B%AE%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E8%B0%83%E8%AF%95/"/>
    <id>https://planckzgh.github.io/2024/01/31/ROIC%E9%A1%B9%E7%9B%AE%E7%94%B5%E8%B7%AF%E8%AE%BE%E8%AE%A1%E4%B8%8E%E8%B0%83%E8%AF%95/</id>
    <published>2024-01-31T14:40:07.000Z</published>
    <updated>2024-02-03T13:44:24.279Z</updated>
    
    <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="54509c3593c551161a006dd3658544806aa8a77b87803470b98a2ac6b379260c"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
    
    
    <summary type="html">这里有东西被加密了，需要输入密码查看哦^o^</summary>
    
    
    
    <category term="项目经验" scheme="https://planckzgh.github.io/categories/%E9%A1%B9%E7%9B%AE%E7%BB%8F%E9%AA%8C/"/>
    
    
    <category term="private" scheme="https://planckzgh.github.io/tags/private/"/>
    
  </entry>
  
  <entry>
    <title>Vimium简明教程</title>
    <link href="https://planckzgh.github.io/2024/01/31/Vimium%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2024/01/31/Vimium%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</id>
    <published>2024-01-31T04:57:15.000Z</published>
    <updated>2024-01-31T05:42:12.735Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vimium简明教程">Vimium简明教程</h1><h2 id="0-show-help">0. ? Show help</h2><h2 id="1-滚动跳转-j-k-d-u-h-l-gg-g-zh-zl">1. 滚动跳转: j,k,d,u,h,l,gg,G,zH,zL</h2><ul><li>j   Scroll down</li><li>k   Scroll up</li><li>dScroll a half page down</li><li>uScroll a half page up</li><li>hScroll left</li><li>lScroll right</li><li>ggScroll to the top of the page</li><li>GScroll to the bottom of the page</li><li>zHScroll all the way to the left</li><li>zLScroll all the way to the right</li><li>mCreate a new mark</li><li>`Go to a mark</li></ul><h2 id="2-刷新页面：r-x-x">2. 刷新页面：r,x,X</h2><ul><li>r   Reload the page</li><li>xClose current tab</li><li>XRestore closed tab</li></ul><h2 id="3-创建页面：p-p-gu-gu-ge-ge-t-yt">3. 创建页面：p,P,gu,gU,ge,gE,t,yt</h2><ul><li>pOpen the clipboard’s URL in the current tab</li><li>POpen the clipboard’s URL in a new tab</li><li>guGo up the URL hierarchy</li><li>gUGo to root of current URL hierarchy</li><li>geEdit the current URL</li><li>gEEdit the current URL and open in a new tab</li><li>tCreate new tab</li><li>ytDuplicate current tab</li></ul><h2 id="4-点击链接：f-f">4. 点击链接：f,F</h2><ul><li>fOpen a link in the current tab</li><li>FOpen a link in a new tab</li></ul><h2 id="5-复制内容：yy-yf-v-v">5. 复制内容：yy,yf,v,V</h2><ul><li>yyCopy the current URL to the clipboard</li><li>yfCopy a link URL to the clipboard</li><li>vEnter visual mode</li><li>VEnter visual line mode</li></ul><h2 id="6-搜索内容：-n-n-o-o-b-b-t">6. 搜索内容：/,n,N,o,O,b,B,T</h2><ul><li>/Enter find mode</li><li>nCycle forward to the next find match</li><li>NCycle backward to the previous find match</li><li>oOpen URL, bookmark or history entry</li><li>OOpen URL, bookmark or history entry in a new tab</li><li>bOpen a bookmark</li><li>BOpen a bookmark in a new tab</li><li>TSearch through your open tabs</li></ul><h2 id="7-切换页面：j-k-g0-g-h-l">7. 切换页面：J,K,^,g0,g$,H,L</h2><ul><li>J, Go one tab left</li><li>K, Go one tab right</li><li>^Go to previously-visited tab</li><li>g0Go to the first tab</li><li>g$Go to the last tab</li><li>HGo back in history</li><li>LGo forward in history</li></ul><h2 id="8-移动页面：w">8. 移动页面：W,&lt;&lt;,&gt;&gt;</h2><ul><li>W  Move tab to new window</li><li>&lt;&lt;Move tab to the left</li><li>&gt;&gt;Move tab to the right</li></ul><h2 id="9-其他操作：">9. 其他操作：</h2><ul><li>&lt;alt-p&gt;Pin or unpin current tab</li><li>&lt;alt-m&gt;Mute or unmute current tab</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vimium简明教程&quot;&gt;Vimium简明教程&lt;/h1&gt;
&lt;h2 id=&quot;0-show-help&quot;&gt;0. ? Show help&lt;/h2&gt;
&lt;h2 id=&quot;1-滚动跳转-j-k-d-u-h-l-gg-g-zh-zl&quot;&gt;1. 滚动跳转: j,k,d,u,h,l,gg,</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>【vivado】VIO和ILA联合调试小技巧</title>
    <link href="https://planckzgh.github.io/2024/01/16/%E3%80%90vivado%E3%80%91VIO%E5%92%8CILA%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    <id>https://planckzgh.github.io/2024/01/16/%E3%80%90vivado%E3%80%91VIO%E5%92%8CILA%E8%81%94%E5%90%88%E8%B0%83%E8%AF%95%E5%B0%8F%E6%8A%80%E5%B7%A7/</id>
    <published>2024-01-16T05:18:37.000Z</published>
    <updated>2024-01-16T05:30:30.724Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vivado中vio-ip核的使用">Vivado中VIO IP核的使用</h1><h2 id="理解">理解</h2><p>相对于ILA更多的关注波形，VIO则专注于输入和输出关系的描述。个人理解为VIO就是一个便携测试，可以根据输入测试输出。类似于开关和LED仿真，相当于在数字电路中加入LED（输入）和开关(输出）。</p><h2 id="配置">配置</h2><p><img src="/imgs/a81b8328e37470507dcf6ae884e1c089.png" alt="a81b8328e37470507dcf6ae884e1c089.png"><br><img src="/imgs/77b7044ded3c4b5c928b31b28c6f51ce_16246caaad564a55b.png" alt="067d7b172dfa4bc9919a5355c99a66c3.png"><br><img src="/imgs/0ef05f246dc84095b29c22cd6d9d8edb_e1b1f43df33d44b08.png" alt="f03fc80e2b2f4b029e2bbe7dd9fabfb8.png"><br><img src="/imgs/5fef9da18d43478dab4ec902f7c1d533_340bf3662d634a8e8.png" alt="9f39c66459724763abfad713cf80d5b9.png"></p><h2 id="联调">联调</h2><p><img src="/imgs/612334be62f5812c20c374b7f83ef9d3.png" alt="612334be62f5812c20c374b7f83ef9d3.png"><br><img src="/imgs/134db90ff14790def0b904d983b3259e.png" alt="134db90ff14790def0b904d983b3259e.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;vivado中vio-ip核的使用&quot;&gt;Vivado中VIO IP核的使用&lt;/h1&gt;
&lt;h2 id=&quot;理解&quot;&gt;理解&lt;/h2&gt;
&lt;p&gt;相对于ILA更多的关注波形，VIO则专注于输入和输出关系的描述。个人理解为VIO就是一个便携测试，可以根据输入测试输出。类似于开关和L</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>IC设计基础知识</title>
    <link href="https://planckzgh.github.io/2023/12/19/IC%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/"/>
    <id>https://planckzgh.github.io/2023/12/19/IC%E8%AE%BE%E8%AE%A1%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/</id>
    <published>2023-12-19T08:25:18.000Z</published>
    <updated>2023-12-22T07:39:03.196Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ic设计基础知识">IC设计基础知识</h1><blockquote><p>参考资料：<a href="http://mp.weixin.qq.com/mp/homepage?__biz=Mzg2NzczODYzOA==&amp;hid=3&amp;sn=0d56f57d4fd75206e08183bf3a823857&amp;scene=18#wechat_redirect">知心有道</a>公众号</p></blockquote><h2 id="竞争和冒险">竞争和冒险</h2><h3 id="概念">概念</h3><ol><li>在组合逻辑电路中，某个输入信号变化通过两条或两条以上途径传输到同一点门级电路时，由于<strong>延迟时间不同</strong>导致到达输出节点的时间上有先有后，这种<strong>先后所形成的时间差</strong>的现象称为<strong>竞争（Competition）</strong>。</li><li>由于竞争的存在，组合逻辑的输出有着先后变化，需要<strong>经过一段时间才能达到期望状态</strong>，在这个过渡时间中可能会产生<strong>瞬时错误</strong>输出，出现一些<strong>不正确的尖峰（毛刺）信号</strong>，。这种现象被称为<strong>冒险（Hazard）</strong>。</li><li>竞争不一定会导致冒险，但冒险一定会有竞争。</li><li>由<strong>同一个输入信号</strong>经过多个路线与速度到达输入端产生竞争引起的冒险称为<strong>逻辑冒险</strong>；由<strong>多个输入信号</strong>经过不同硬件工艺和延迟电路产生竞争引起的冒险称为<strong>功能冒险</strong>。</li></ol><h3 id="危害">危害</h3><p>如果组合逻辑是同步电路中的组合成分，那么其输入是直接由寄存器驱动的，只需要通过时序分析，就可以有效遏制险象对后续电路的危害。</p><p>对于异步电路来说，即使每次只改变单个输入的值，也会可能导致输出不稳定的现象产生。而如果输出是用于产生其他逻辑的时钟或异步复位信号等控制信号，则必然会影响到后续电路的工作。</p><h3 id="处理方法">处理方法</h3><ul><li><strong>增加冗余项</strong></li><li><strong>使用时钟同步电路，利用触发器进行打拍延迟</strong></li><li><strong>输出端并联电容器（滤波电容）</strong></li><li><strong>添加选通脉冲</strong></li><li><strong>采用格雷码计数器</strong><br>在递加的计数中，有时会发生多bits的跳变，例如从11计数到12时，对应二进制数字为4’b1011至4’b1100，后三个bit都需要发生变化，此时各个数据位的转变可能导致延时,举个例子，上述情况下多bit的转变过程可能为   4’b1011-&gt;4’b1111-&gt;4’b1110-&gt;4’b1100。此时则可能会出现尖峰脉冲，从而导致竞争与冒险发生。</li></ul><p>而格雷码计数器在计数时相邻数之间只有一个bit会发生变化，因此可以有效避免竞争与冒险。</p><h2 id="亚稳态">亚稳态</h2><h3 id="亚稳态的概念与原理">亚稳态的概念与原理</h3><p><strong>在数字电路中</strong>，本质<strong>0/1</strong>逻辑，但实际电路中，<strong>逻辑电平0表示的不一定是就是电压0V，逻辑电平1表示的不一定是就是电压1V</strong>，根据不同的器件特性，逻辑电平0和逻辑电平1代表的电压值可能是不一样的，并且实际电路中，0到1的变化，1到0的变化，都不可能是突变的，比如对于一个如下所示：<br><img src=":/c98f5620ccd14030a77c8d526f7b3100" alt="实际CMOS反相器的电平传输特性"></p><p>==数字信号跳变时，如果输入信号刚好在寄存器不能判断的区间（VL~VH），那么，输出就不能判断是0还是1，也就是亚稳态。==</p><p><img src=":/e7553bee4695477d9297294ba5b89c16" alt=""></p><ul><li><strong>建立时间Tsu</strong>：是指在触发器的时钟信号上升沿到来以前，数据稳定不变的时间，如果建立时间不够，数据将不能在这个时钟上升沿被稳定的打入触发器，Tsu就是指这个最小的稳定时间。</li><li><strong>保持时间Th</strong>：是指在触发器的时钟信号上升沿到来以后，数据稳定不变的时间，如果保持时间不够，数据同样不能被稳定的打入触发器，Th就是指这个最小的保持时间。</li><li><strong>输出时间Tco</strong>：是触发器在clk时钟上升沿到来之后需多长的时间才能稳定输出的的时间。</li><li><strong>稳定时间Tmet</strong>：亚稳态输出恢复到稳定状态所需的超出Tco的额外时间称为稳定时间，也叫决断时间，这段时间寄存器输出Q端是不稳定的，但经过这段时间，亚稳态变成稳态了（<strong>但并不一定是正确状态</strong>）。<ul><li>亚稳态震荡时间Tmet关系到后级寄存器的采集稳定问题，Tmet影响因素包括：器件的生产工艺、温度、环境以及寄存器采集到亚稳态离稳定态的时刻等。甚至某些特定条件，如干扰、辐射等都会造成Tmet增长。</li><li>如果亚稳态持续时间过长（超过一个或者两个时钟周期），就有可能被下一级的触发器捕获，导致下一级触发器也处于亚稳态，这就是<strong>亚稳态的传播现象</strong>，这是很严重的。</li></ul></li></ul><h3 id="亚稳态出现场景">亚稳态出现场景</h3><p>在实际电路设计中，出现亚稳态传播的主要场景是<strong>异步信号采样</strong>以及<strong>跨时钟域信号传输</strong>。同步复位也会存在亚稳态的问题，只是概率没有异步复位高。</p><ol><li>同步电路会通过STA检查，确保同步电路的寄存器通路上会保证setup/hold时间，不会出现时序违例，因此我们才说同步电路寄存器的输出不会出现亚稳态。</li><li>异步电路由于两级触发器采样的时钟不同，因此不能保证每个触发器的D端都可以满足setup/hold时间，会出现亚稳态传播现象。<strong>STA是不会对异步电路进行时序检查</strong>。</li></ol><h4 id="异步信号采样">异步信号采样</h4><p>异步信号采样，主要是指异步复位信号，在verilog中，同步复位和异步复位写法如下：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 异步复位</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rst_n) dout &lt;= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> dout &lt;= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="comment">// 同步复位</span></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk) <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rst_n) dout &lt;= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> dout &lt;= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><p><code>rst_n</code>信号是异步信号，它撤销的时间点可能会造成亚稳态传播。如下所示：<br><img src=":/c9af965791b145a284d8c695744048a8" alt=""></p><ul><li><strong>Trecovery是rst_n信号的恢复时间</strong>，<strong>下一个时钟沿到来之前变成无效的最小时间</strong>。如果rst_n拉高到下一个时钟沿到来之间间隔太短，小于Trecovery，那么下个时钟沿可能会失效，采样不到这个信号，类似setup时间。</li><li><strong>Tremoval是rst_n信号的去除时间，在采样时钟到来之后，到rst_n无效之间的最小时间，类似hold时间</strong>。如果采样时钟上升沿到rst_n撤销之间的间隔时间太短，小于Tremoval时间，就不能有效的屏蔽当前这个采样时钟沿，有可能会采样到rst_n撤销掉。</li></ul><p>换句话来说，如果你想让某个时钟沿<strong>起作用</strong>，那么你就应该<strong>在“恢复时间”之前使异步控制信号变无效</strong>，如果你想让某个时钟沿<strong>不起作用</strong>，那么你就应该<strong>在“去除时间”过后使控制信号变无效</strong>。如果你的控制信号在这两种情况之间，那么就没法确定时钟沿是否起作用或不起作用了，也就是说可能会造成寄存器处于不确定的状态。而这些情况是应该避免的。</p><h4 id="跨时钟域信号传输">跨时钟域信号传输</h4><p>在跨时钟传输中，由于时钟之间存在<strong>相移</strong>，因此当源寄存器发出数据之后，<strong>无法确定在什么时间段到达目的寄存器</strong>，因此也不能保证满足目的寄存器的setup time 和hold time要求。</p><h3 id="亚稳态出现概率">亚稳态出现概率</h3><p>亚稳态发生的都是由于clk的Tsu和Th不满足，又或者是复位信号的去除和恢复时间不满足。亚稳态产生的概率大概为：==概率 = （建立时间 + 保持时间）/ 采集时钟周期==</p><h3 id="降低亚稳态出现概率的办法">降低亚稳态出现概率的办法</h3><ul><li>使用同步器；</li><li>在满足要求的情况下，降低时钟频率；</li><li>采用工艺更好的器件，也就是Tsu和Th时间较小的器件（采用反应更快的触发器）；</li><li>减少使用或者避免使用那种信号翻转时间很长的输入信号。</li></ul><p>根据上面提供的方法，只有同步器是实际设计过程中可以有发挥的空间。下面介绍几种常见的同步器设计方法。</p><h4 id="异步复位同步释放">异步复位同步释放</h4><p>外部给过来的异步复位信号，我们一般不会直接用在内部寄存器上，而是会先经过处理之后再在内部使用，这个过程就是异步复位同步撤离，常见的方式就是打拍，如下代码所示：</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> asyrst(</span><br><span class="line"><span class="keyword">input</span>clk,</span><br><span class="line"><span class="keyword">input</span>asyrst_n,</span><br><span class="line"><span class="keyword">output</span>syrst_n</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> rst1;</span><br><span class="line"><span class="keyword">reg</span> rst2;</span><br><span class="line"></span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> asyrst_n) <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!asyrst_n) <span class="keyword">begin</span></span><br><span class="line">rst1 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line">rst2 &lt;= <span class="number">1&#x27;b0</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">rst1 &lt;= <span class="number">1&#x27;b1</span>;</span><br><span class="line">rst2 &lt;= rst1;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">assign</span> syrst_n = rst2;</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><ul><li><strong>异步复位</strong>：显而易见，<strong>asyrst_n异步复位后，syrst_n将拉低</strong>，即实现异步复位。</li><li>**同步释放：**这个是关键，看如何实现同步释放，<strong>即当复位信号asyrst_n撤除时，由于双缓冲电路（双寄存器）的作用，asyrst_n复位信号不会随着asyrst_n的撤除而撤除</strong>。<br>假设第一级D触发器clk上升沿时asyrst_n正好撤除，则D触发器第一级有可能发生亚稳态，此时第二级触发器也会将输出更新为第一级触发器前一个周期的输出值，即低电平，所以亚稳态被阻隔或者是被缓冲。直到下一个clk来之后，第二级触发器才会更新最终的复位输出信号asyrst_n，但这个时候亚稳态多半已经恢复稳定了，即便恢复错了成了低电平其实也没关系，最多再等一个周期高电平就来了啊，关键是这个时候亚稳态已经没了，这就是同步释放。<br><img src=":/5f7aa23658104c96ae26d286c2841015" alt="f589dd86320af061bfc43200db98c7dc.png"></li></ul><h4 id="单bit异步信号慢时钟域到快时钟域">单bit异步信号慢时钟域到快时钟域</h4><p>单比特慢时钟域信号到快时钟域信号，因为慢时钟域的脉冲信号能被快时钟域采样到，一般情况下只需要通过<strong>两级触发器（打两拍）进行同步</strong>，更多级的寄存器对性能提升并不明显。</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">module</span> slow2fast(</span><br><span class="line"><span class="keyword">input</span>clk,</span><br><span class="line"><span class="keyword">input</span>rst_n,</span><br><span class="line"><span class="keyword">input</span>sin,</span><br><span class="line"><span class="keyword">output</span>sout</span><br><span class="line">);</span><br><span class="line"><span class="keyword">reg</span> [<span class="number">1</span>:<span class="number">0</span>] signal;</span><br><span class="line"><span class="keyword">always</span>@(<span class="keyword">posedge</span> clk <span class="keyword">or</span> <span class="keyword">negedge</span> rst_n) <span class="keyword">begin</span></span><br><span class="line"><span class="keyword">if</span>(!rst_n) <span class="keyword">begin</span></span><br><span class="line">signal &lt;= <span class="number">2&#x27;b00</span>;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">begin</span></span><br><span class="line">signal &lt;= &#123;signal[<span class="number">0</span>], sin&#125;;</span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line"><span class="keyword">assign</span> sout = signal[<span class="number">1</span>];</span><br><span class="line"><span class="keyword">endmodule</span></span><br></pre></td></tr></table></figure><h4 id="脉冲信号快时钟域到慢时钟域">脉冲信号快时钟域到慢时钟域</h4><p>在不同时钟域信号中，快时钟域的信号脉宽小于慢时钟周期的信号脉宽。如果慢时钟直接去采集信号则有可能会漏掉数据。在这个情况下通过<strong>握手协议对窄脉冲信号进行脉宽扩展+慢时钟域延迟打拍的方法进行同步，最后再对展宽的信号进行拉低处理：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">//慢时钟域下同步signala</span><br><span class="line">always@(posedge clk or negedge rst_n) begin</span><br><span class="line">if(!rst_n) signalb &lt;= 1&#x27;b0;</span><br><span class="line">else signalb &lt;= signala;</span><br><span class="line">end</span><br><span class="line">// 生成pulse与signal信号</span><br><span class="line">always@(posedge clk or negedge rst_n) begin</span><br><span class="line">if(!rst_n) signalb_r &lt;= 2&#x27;b00;</span><br><span class="line">else signalb_r &lt;= &#123;signalb_r[0], signalb&#125;;</span><br><span class="line">end</span><br><span class="line">assign pulseout &lt;= ~signalb_r[1] &amp;&amp; signalb_r[0];</span><br><span class="line">assign sout &lt;= signalb_r[1];</span><br><span class="line">//对展宽信号进行拉低处理</span><br><span class="line">always@(posedge clk or negedge rst_n) begin</span><br><span class="line">if(!rst_n) begin</span><br><span class="line">signala_r &lt;= 2&#x27;b00;</span><br><span class="line">end</span><br><span class="line">else begin</span><br><span class="line">signala_r &lt;= &#123;signala_r[0], signalb_r[1]&#125;;</span><br><span class="line">end</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h4 id="多bit异步信号同步器">多bit异步信号同步器</h4><p>当多位宽数据进行同步时，如果数据变化速率过快，用异步时钟进行打拍采样，可能会采集到因路径延迟不同而导致的错误数据。解决此类异步问题的常用方法包括：</p><ul><li><strong>格雷码编码</strong><br>通过格雷码编码将多位信号转化为每次只有一位变化的信号，将“多比特”的跨时钟域变换成“单比特”进行处理。</li><li><strong>握手处理</strong><br>通过通信双方使用专用控制信号进行数据收发的状态指示的方法，使控制信号<strong>双向联系</strong>（可以发送域传给接收域的，也可以接收域给发送域），有别于单向控制信号检测方式。</li><li><strong>MUX</strong>同步器<br>带数据有效标志信号的多比特数据做跨时钟域。</li><li><strong>异步FIFO</strong><br>什么情况下都可以使用，尤其在<strong>有大量的数据需要进行跨时钟域传输</strong>， 并且对数据传输速度要求比较高的场合。和格雷码+异步双口RAM方法是一样的。</li></ul><h2 id="有限状态机-fsm">==有限状态机（FSM）==</h2><p>状态机的本质是对具有<strong>逻辑顺序</strong>或<strong>时序规律</strong>事件的一种描述方法。</p><ul><li>Moore型状态机：<strong>输出只与当前状态有关</strong>，与当前输入无关。<br>输出会在一个完整的时钟周期内保持稳定，即使此时输入信号有变化，输出也不会变化。<strong>输入对输出的影响要到下一个时钟周期才能反映</strong>出来。所以moore型状态机的<strong>输入与输出是隔离</strong>开来的。</li><li>Mealy型状态机：输出不仅与当前状态有关，还取决于当前的输入信号。<br>Mealy 型状态机的输出是在输入信号变化以后<strong>立刻发生变化</strong>，且输入变化可能出现在任何状态的时钟周期内。所以在同一种情况下Mealy 型状态机输出对输入的响应会比 Moore 型状态机<strong>早一个时钟</strong>周期。</li><li>状态机的编码：<strong>二进制，格雷码，独热码</strong></li><li>一段式状态机：既描述状态转移，又描述状态的输入输出</li><li>二段式状态机：将状态分为当前状态和此状态；第一个always块利用同步时序逻辑描述状态转移，第二个always块利用组合逻辑描述状态转移条件以及输出。由于两段式状态机的<strong>输出一般使用组合逻辑描述，而组合逻辑易产生毛刺等不稳定因素</strong>，有时候会影响系统执行速率和结果。</li><li>三段式状态机：一个always块利用同步时序逻辑描述状态转移，即<strong>次态与现态的转换</strong>；一个always块利用组合逻辑描述<strong>状态转移条件</strong>；一个always块利用<strong>同步时序逻辑描述输出</strong>，即现态在输入情况下转换为次态的组合逻辑。三段式状态机避免了前两种描述方式的弊端，但是三段式状态机分割了两部分组合逻辑（状态转移条件组合逻辑和输出组合逻辑），因此这条路径的<strong>时序相对紧张</strong>。</li></ul><h2 id="锁存器-latch">锁存器（Latch）</h2><ol><li>电平触发的存储单元；数据存储动作由使能信号的电平决定；</li><li>区别于触发器（Flip-Flop：边沿触发的存储单元）；</li><li>当输入信号不稳定时，锁存器的输出信号就会出现毛刺；但是触发器只要没有亚稳态，输出就不会出现毛刺；</li><li>缺点：电平触发，易产生毛刺，对后端设计的时序收敛不友好；</li><li>优点：面积小，速度快。</li></ol><h2 id="存储器">存储器</h2><p><img src=":/1ddbdf3405464532ba44b86ac7b80ac6" alt="ada83fac67434bf407634b91825016e5.png"></p><ul><li>单元阵列</li><li>行列解码器</li><li>读出放大器</li></ul><h3 id="sram">SRAM</h3><p><img src=":/521390d4eabf40cbb1b5108537aa2fee" alt="单比特SRAM.png"><br>上面是能保存SRAM的一个bit，保存一个bit需要6个晶体管，所以贵，造价高。因此SRAM一般只有几个MB而已，再多了就不划算，因为贵！从电路图可以看出，基本都是一些晶体管运算，速度很快，所以SRAM一般用来做高速缓存存储器，既可以放在cpu芯片上，也可以放在片下。SRAM中的S是static的意思。</p><ol><li>读操作<br>读操作是指将单元内部存储节点上的信息读取到输出端口。读“0”时，在初始状态下，BL和BLB会先预充电为高电平，存储节点Q为“0”，QB为“1”，然后字线WL接高电压以 打开。传输晶体管N1和N2导通，从而建立存储节点和位线之间的连接。BL通过存储节点Q放电，电压下降。BLB与存储节点QB电位相同，无放电通路，保持高电平电压。BL和BLB之间的电压差逐渐增大一定量后，通过灵敏放大器的输出完成读操作。注意此时存储节点上的数据没有变化。</li><li>写操作<br>写操作是指将外部数据写入cell中的存储节点。以写“1”为例。在初始状态下，cell内部节点Q中的数据为“0”，QB中的数据为“1”。首先将要写入的“1”加载到BL上，同时将BLB置“0”，然后字线WL导通，传输晶体管N1和N2导通，所以 位线和存储节点导通；之后，存储节点QB通过N2放电为低电平，即写入数据“0”。同时，当QB下降到左反相器的阈值电压时，晶体管P1导通，存储节点Q充电为高电平。最后，字线WL被移除，存储节点中的数据发生变化。</li></ol><h3 id="dram">DRAM</h3><p><img src=":/cec885e35843451595d19d0b54b5682e" alt="77655df4fde4231d255a0f4b47c47a17.png"><br>可以看到，存储一个bit的DRAM只需要一个电容和一个晶体管。DRAM的数据实际上是存在于电容里面的，电容会有电的泄露，损失状态，故需要对电容状态进行保持和刷新处理，以维持持久状态，而这是需要时间的，所以就慢了。这个刷新加动态刷新，而DRAM中的D就是dynamic的意思。</p><ol><li>读操作</li><li>写操作</li></ol><h3 id="非易失性存储器">非易失性存储器</h3><ol><li><strong>EPROM</strong>(Easerable Programable ROM)是一种具有<strong>可擦除</strong>功能，擦除后即可进行再编程的ROM内存，写入前必须先把里面的内容用紫外线照射IC上的透明视窗的方式来清除掉。这一类芯片比较容易识别，其封装中包含有“石英玻璃窗”，一个编程后的EPROM芯片的“玻璃窗”一般使用黑色不干胶纸盖住， 以防止遭到紫外线照射。EPROM存储器就可以多次擦除然后多次写入了。但是要在特定环境<strong>紫外线下擦除</strong>，所以这种存储器也不方便写入。</li><li><strong>EEPROM</strong>(Eelectrically Easerable Programable ROM)，<strong>电可擦除</strong>ROM，现在使用的比较多，因为只要有电就可擦除数据，再重新写入数据，在使用的时候可频繁地反复编程。</li><li><strong>FLASH</strong>（FLASH EEPROM）又称闪存，快闪。它是EEPROM的一种。它结合了ROM和RAM的长处。不仅具备电子可擦除可编辑（EEPROM）的性能，还不会断电丢失数据同时可以<strong>快速读取</strong>数据。它于EEPROM的最大区别是，FLASH<strong>按扇区</strong>（block）操作，而EEPROM按照字节操作。FLASH的电路结构较简单，同样容量占芯片面积较小，成本自然比EEPROM低，因此适合用于做程序存储器。</li></ol><h2 id="静态时序分析-sta">静态时序分析（STA）</h2><p>静态时序分析，是把电路拆分成一条条的时序路径，然后检查每条时序路径是否满足setup/hold时序要求。路径主要分为以下四种：</p><ol><li>触发器-触发器（register to register）</li><li>触发器-输出端（register to output）</li><li>输入端-触发器（input to register）</li><li>输入端-输出端（input to output）</li></ol><h3 id="对比">对比</h3><table><thead><tr><th>静态时序分析</th><th>动态时序分析</th></tr></thead><tbody><tr><td>计算所有的可能性，不需要<strong>测试向量</strong></td><td>门级仿真无法测试所有的场景，因为它依赖于输入的测试向量</td></tr><tr><td>比仿真快得多</td><td>进行精确时序的<strong>仿真速度很慢</strong>，而且需要大量的服务器内存</td></tr><tr><td>无法验证跨时钟域之间的接口</td><td>适合检查不同时钟域之间的异步接口</td></tr><tr><td>STA基于工程师指定的约束，约束有多准确，时序分析的结果就有多准确</td><td>需要大量的计算资源</td></tr><tr><td>只有时序仿真可以验证复位的问题，而STA无法进行检查</td><td>能够可以帮助验证综合过程中设置的时序约束，如false paths,   multi-cycle paths等</td></tr><tr><td>STA只能识别0-1-上升沿-下降沿这几种信号，而没办法检查不定态</td><td>适合检查复位时序</td></tr><tr><td>STA无法合适的载入或者设置PLL</td><td>所有异步接口都应该在tapeout前进行时序反标动态时序验证，因为在STA中异步路径都被设置为false path，只能够在动态时序仿真中进行确认保证</td></tr></tbody></table><h3 id="解决静态时序问题的方法">解决静态时序问题的方法</h3><ol><li>解决建立时间不满足的方法有如下<ul><li>加强约束，重新进行综合，对违规的路径进行进一步的优化，但是一般效果可能不是很明显降低时钟的频率，但是这个一般是在项目最初的时候决定的，这个时候很难再改变</li><li>拆分组合逻辑，插入寄存器，增加流水线，这个是常用的方法</li><li>优化布局布线，减小传输的延时</li></ul></li><li>保持时间裕量违例可以通过如下方式解决：<ul><li>在组合逻辑中插入延时buffer，或者链路拉长，使得Tlogic变大。</li><li>可以在后端调整时钟SKEW，使得违例寄存器的时钟SKEW变得更小（相对于正SKEW）</li></ul></li></ol><p><strong>保持时间裕量与建立时间裕量是一对互斥的关系</strong>，上述可以用于优化建立时间裕量的方法，都不能用于优化保持时间裕量。</p><h2 id="低功耗设计方法">低功耗设计方法</h2><ol><li>动态功耗 = 翻转功耗 + 短路功耗<ul><li>翻转功耗：下面推导翻转功耗的表达式。当电容Cload通过PMOS 管充电时它的电压从0升至VDD，此时从电源上吸取了一定的能量。该能量的一部分消耗在 PMOS 器件上，而其余的则存放在负载电容上。在由高至低的翻转期间，这一电容被放电，于是存放的能量被消耗在NMOS 管中</li><li>短路功耗：在实际的电路设计中，假设输入波形的上升和下降时间为0是不正确的。输入信号变化的斜率造成了开关过程中 VDD和VSS之间在短期内出现了一条直流通路，此时NMOS管和PMOS管同时导通，产生短路电流。</li></ul></li></ol><h2 id="可测性设计-dft">可测性设计（DFT）</h2><p>DFT主要是通过在芯片中加入可测性逻辑，等芯片制造出来，在ATE设备上通过可测性逻辑对芯片进行测试，挑出有制造缺陷的芯片并淘汰掉，留下没有<strong>制造缺陷</strong>的好芯片（对于逻辑缺陷无能为力）。</p><ol><li>DFT的工作包括：<ul><li>在项目初期规划DFT架构；</li><li>在RTL级别设计测试电路；</li><li>在验证阶段验证测试电路；</li><li>在synthesis阶段实现测试逻辑的插入；</li><li>在测试阶段提供测试向量</li></ul></li><li>DFT需要处理基本上芯片所有逻辑的测试。他们包含：<ul><li>片上存储器</li><li>模拟模块 （如锁相环，LDO，IDV等）</li><li>系统控制模块</li><li>时钟控制模块</li><li>电源管理模块</li><li>寄存器</li></ul></li><li>在整个芯片开发流程中，除了流片和封装这两步以外，其他每一个阶段DFT都有其不同的工作。简单说就是：<ul><li>在架构阶段定义好DFT的架构</li><li>在设计阶段实现DFT的逻辑和验证</li><li>在后芯片阶段做好silicon bringup的辅助</li></ul></li><li>DFT常用方法：<ul><li>扫描插入(扫描链)</li><li>逻辑/存储器BIST插入</li><li>边界扫描插入(JTAG)</li><li>ATPG</li></ul></li><li>DFT的代价<ul><li>测试逻辑占用芯片面积。(例如基带芯片中&gt;10%)</li><li>扫描覆盖率越高，测试向量越多</li><li>并行测试由于电源的限制不能无限增多</li><li>管脚数目的限制导致测试和测试逻辑复杂度增加</li><li>优秀的DFT架构和实现才能带来高质量的测试</li></ul></li></ol><h2 id="amba总线">AMBA总线</h2><h3 id="ahb">AHB</h3><p>AHB实现了高性能，高时钟频率系统的以下特征要求：突发传输；分块处理；单周期总线主机移交；单时钟沿操作；非三态执行；</p><h4 id="典型的-ahb-系统">典型的 AHB 系统</h4><p>==一个总线仲裁器确保一个主机有效；一个中央译码器进行地址译码和从机选择==</p><ol><li><strong>AHB 主机</strong>：总线主机能够通过提供地址和控制信息发起读写操作。任何时候只允许一个总线主机处于有效状态并能使用总线。</li><li><strong>AHB 从机</strong>：总线从机在给定的地址空间范围内响应读写操作。总线从机将成功、失败或者等待数据传输的信号返回给有效的主机。</li><li><strong>AHB 仲裁器</strong>：总线仲裁器确保每次只有一个总线主机被允许发起数据传输。即使仲裁协议已经固定，任何一种<strong>仲裁算法</strong>，比如最高优先级或者公平访问都能够根据应用要求而得到执行。AHB 必须只包含一个伸裁器，尽管在单总线主机系统中这显得并不重要。</li><li><strong>AHB 译码器</strong>： AHB 译码器用来对每次传输进行<strong>地址译码</strong>并且在传输中包含一个<strong>从机选择</strong>信号。所有 AHB 执行都必须仅要求有一个中央译码器。</li></ol><p><img src=":/60d143784a534ebcb6610db1a9825ac5" alt="8779d13ac0c376dedc76dc2291f3fc2c.png"></p><h4 id="基本传输时序">基本传输时序</h4><ol><li>无等待single transfer<ul><li>第一个周期的上升沿，主机将地址信息和控制信息发送到总线上；</li><li>第二个周期的上升沿，从机采样地址和控制信号，并将HREADY拉高；如果是写操作，主机会在第二个周期的上升沿过后传输要写入的数据；如果是读操作，从机会在HREADY信号拉高后将读取的数据写入总线；</li><li>第三个周期的上升沿，如果是写操作，主机获取HREADY高信号，表明从机已成功接收数据，操作成功；如果是读操作，主机获取HREADY高信号，表明此时的读数据有效并且接收下来，操作成功。需要注意，HREADY信号在数据有效期间必须为高，并且延续到第三个周期的上升沿之后，确保主机的正确采样。<br><img src=":/846c9f5375944fab9ed49d3a147b8ee5" alt="c399acb3a5076204602a6d9b6d7022ae.png"></li></ul></li><li>slave等待single transfer<br>从机可以及时处理主机请求，但也可能存在从机太慢不能立即处理的情况。这时需要让主机稍微等一等，需要从机插入一些等待的状态。如下图所示，HREADY信号在第二和第三周期拉低，意在告诉主机，从机不能立即处理，需要主机等待2个周期。在这里需要注意2点：<ul><li>如果是写操作，主机要在等待期间保持写数据不变，直到本次传输完成；</li><li>如果是读操作，从机不需要一开始就给出数据，仅当HREADY拉高后才给出有效数据。<br><img src=":/6f58c0e83fe244308178d3d9f2e814ef" alt="159f1a915b7ce80814f499a4db9c1ed1.png"></li></ul></li><li>多个single transfer的pipeline操作<br>扩展数据周期的一个负效应是必需延长相应的下一笔传输的地址周期。A和C为零等待传输，B加入了一个等待周期，因此相应的C地址周期要进行扩展。<ul><li>第一个周期，主机发起一个操作A，并驱动地址和控制信号；</li><li>第二个周期，从机收到了来自总线的请求，将HREADY信号拉高；</li><li>第二个周期上升沿后，主机发现有操作B需要执行，并且检查到上一周期的HREADY为高，则发起第二个操作B；</li><li>第三个周期，主机获取HREADY信号为高，表示操作A已经完成；</li><li>第三个周期上升沿后，主机发现有操作C需要执行，并且检查到上一周期的HREADY为高，则发起第三个操作C；</li><li>第三个周期上升沿后，从机由于繁忙插入了一个等待状态，将HREADY拉低；</li><li>第四个周期，主机获取HREADY信号为低，知道从机希望等待，于是主机保持和上一拍一样的信号；</li><li>第四个周期，从机处理完了事务，将HREADY信号拉高，表示可以继续处理；</li><li>第五个周期，主机获取HREADY信号为高，知道从机已经可以处理B操作；</li><li>第五个周期上升沿后，B操作完成；</li><li>第六个周期上升沿后，C操作完成。<br><img src=":/e91bf43b3a9d4c6683abf75d20f4e41c" alt="18ccf3b3070e67d53909c747e2249ecc.png"><br><strong>注意</strong>：HREADY在一定程度上表示了从机的pipeline能力，在AHB中是2个pipe，也就是总线上最多存在2个未处理完的transfer。只有当总线上未完成的transfer少于2个时，主机才能发起操作。</li></ul></li></ol><h4 id="ahb-传输类型">AHB 传输类型</h4><table><thead><tr><th>HTRANS[1:0]</th><th>传输类型</th><th>描述</th></tr></thead><tbody><tr><td>00</td><td>IDLE</td><td>主机占用总线，在两次突发传输中间可发IDLE。若从机被使能，不会从主机获取任何数据，若从机被选中，需要在每个IDLE周期向主机返回OKAY</td></tr><tr><td>01</td><td>BUSY</td><td>主机占用总线，在突发传输过程中没有准备好进行下一次传输。主机需要给出下一拍的地址和控制信号，尽管从机不会采样，从机等待并返回OKAY响应</td></tr><tr><td>10</td><td>NONSEQ</td><td>单次传输或突发传输的首位数据和控制信号</td></tr><tr><td>11</td><td>SEQ</td><td>突发传输中剩下的连续传输，需要与前一次传输有关，控制信息与前一次传输相同，地址等于前一次传输的地址加上传输字节大小</td></tr></tbody></table><p><img src=":/634fdce077c94458bae4ff842809b2eb" alt="f1eda73233826972542186551d4ef9d6.png"></p><h4 id="增量突发和回环突发">增量突发和回环突发</h4><p>增量突发访问连续地址并且突发中的每次传输地址仅是前一次地址的一个增量；对于回环突发，如果传输的起始地址并未和突发（x 拍）中字节总数对齐那么突发传输地址将在达到边界处回环。例如，一个四拍回环突发的字（4 字节）访问将在16 字节边界回环。因此，如果传输的起始地址是 0x34，那么它将包含四个到地址<br>0x34、 0x38、 0x3C 和 0x30；<br>突发信息通过使用 HBURST[2:0]并且 8 种可能的类型在中定义如下：<br><img src=":/f35204bf4fa2444eb29387d8527a0b2a" alt="a1a64d74703afbb28c8c6311c12c06d6.png"></p><ul><li>==突发禁止超过 1KB 的地址边界==</li><li>突发大小表示突发的节拍数量，并不是一次突发传输的实际字节数量</li><li>所有突发传输必须将地址边界和传输大小对齐</li></ul><h4 id="仲裁机制">仲裁机制</h4><p>仲裁机制被用来确保任意时刻只有一个主机能够访问总线。仲裁器的功能是检测许多不同的使用总线的请求和决定当前请求总线的主机中哪—个的<strong>优先级</strong>最高。仲裁器也接收来自从机需要完成 SPIIT 传输的请求。<br><strong>仲裁信号的简短描述</strong>：</p><ul><li>HBUSREQx 被总线主机用来请求访问总线的总线请求信号。每个总线主机都有自己的连接到仲裁器的 HBUSREQx 信号并且任何一个系统中都可以有高达16个独立的总线主机。</li><li>HLOCKx 由主机在请求总线的同时时断言的锁定信号。这提示仲裁器主机正在执行一系列不可分割的传输并且一旦锁定传输的第一个传输，己经开始仲裁器不能授子任何其他主机访问总线。HLOCKx必须在涉及到的地址被寻址到之前至少断言一个周期，以防止仲裁器改变授子信号。</li><li>HGRANTx 授子信号由仲裁器产生并且表示相关主机是当前请求总线的主机中优先级最高的主机，（优先）考虑锁定传输和 SPLIT 传输。主机在 HGRANTx 为高时获取地址总线的所有权并且在HCLK 的上升沿 HREADY 为高电平。</li><li>HIVIASTER[3:0]  仲裁器使用 HMASTER[3:0]信号表示哪一个主机当前被授子总线并且该信号可被用来控制中央地址和控制多路选择器。有SFLIT 传输能力的从机也可以请求主机的序号以便它们能够提示仲裁器哪个主机能够完成一个SFLIT 传输。</li><li>HMASTLOCK仲裁器通过断言 HVASTLOCK 信号指示当前传输是一个锁定序列的一部分，该信号和地址以及控制信号有相同的时序。</li><li>HSPLIT [15: 0] 这16位有完整分块能力的总线被有分块(SFLIT）能力的从机用来指示哪个总线主机能够完成一个 SPLIT 传输。仲裁器需要这些信息以便于授子主机访问总线完成传输。</li></ul><h3 id="axi">AXI</h3><h4 id="定位">定位</h4><ul><li>高带宽、低时延</li><li>不需要复杂的<strong>桥</strong>就可以满足高频时钟要求</li><li>满足大多数模块的接口需求</li><li>适用于初始延迟较高的存储器控制</li><li>总线互联架构上提供更大的灵活性</li><li>后向兼容AHB和APB接口</li></ul><blockquote><p>“桥”<br>总线协议互换、跨时钟域、数据宽度匹配、仲裁和调度</p></blockquote><h4 id="特征">特征</h4><ul><li>地质/控制操作与数据操作分离</li><li>使用byte strobes（字节选通）信号实现非对齐数据传输</li><li>使用burst传输时只需要发送首地址，便可以发送一段数据</li><li>读数据和写数据通道独立，从而支持DMA</li><li>支持outstanding功能，可以发送多个地址进行读写</li></ul><h4 id="读架构">读架构</h4><p><img src=":/52b46566954440f5b52140769756d12a" alt="d886eb7c507359b2b1ff4a8a6739f5c1.png"></p><ol><li>地址通道携带控制消息，用于描述被传输的数据属性；</li><li>数据传输使用<strong>写通道</strong>来实现master到slave的传输，slave使用<strong>写响应通道</strong>来完成一次写传输；</li><li>读通道用来实现数据从slave到master的传输。</li></ol><h4 id="写架构">写架构</h4><p>AXI使用基于<strong>VALID/READY的握手机制</strong>数据传输协议，传输源端使用VALID表明地址/控制信号、数据是有效的，目的端使用READY表明自己能够接受信息。<br><img src=":/ed13090337e14a5e94de71bae070abfb" alt="a114c2e75ebb5d12d7864581b1e65e3c.png"></p><ul><li><strong>读/写地址通道</strong>：读、写传输每个都有自己的地址通道，对应的地址通道承载着对应传输的地址控制信息。</li><li>读数据通道：读数据通道承载着读数据和读响应信号包括数据总线（8/16/32/64/128/256/512/1024 bit）和指示读传输完成的读响应信号。</li><li><strong>写数据通道</strong>：写数据通道的数据信息被认为是缓冲（buffered）了的，master无需等待slave对上次写传输的确认即可发起一次新的写传输。写通道包括数据总线（8/16…1024 bit）和字节线（用于指示8 bit 数据信号的有效性）。</li><li><strong>写响应通道</strong>：slave使用写响应通道对写传输进行响应。所有的写传输需要写响应通道的完成信号。</li></ul><h4 id="读写传输">读写传输</h4><h5 id="握手过程">握手过程</h5><p>5个传输通道均使用VALID/READY信号对传输过程的<strong>地址、数据、控制信号进行握手</strong>。使用<strong>双向握手机制，传输仅仅发生在VALID、READY同时有效的时候</strong>。</p><ul><li>VALID信号表示地址/数据/应答信号总线上的信号是有效的，由传输发起方控制</li><li>READY信号表示传输接收方已经准备好接收，由接收方控制。</li></ul><p>VALID和READY的先后关系具有三种情况：<br><img src=":/71fe948dccf24465985ff1cf0e24c7bf" alt="720f710ee6c9f1bb46c06605e4fdbdfb.png"></p><ol><li>VALID先有效，等待READY有效后完成传输（VALID一旦有效后在传输完成前不可取消）。</li><li>READY先有效，等待VALID有效后完成传输（READY可以在VALID有效前撤销）。</li><li>VALID和READY同时有效，立刻完成传输。</li></ol><p>AXI总线的<strong>设计原则</strong>是在VALID信号拉高时，接收方应该尽快将READY信号拉高，以确保数据传输的正常进行，避免潜在的死锁问题。</p><blockquote><p>简单来说，如果发送方的VALID信号一直拉高，没有等到READY信号拉高，就会导致数据传输的阻塞。</p></blockquote><h5 id="读写操作顺序">读写操作顺序</h5><p><img src=":/9402a411e2704ce5b0d2351794e45a7c" alt="读操作顺序.png"><br><img src=":/b5c25c369f9b41d1801a9ff34bad92de" alt="写操作顺序.png"></p><h5 id="burst读写">Burst读写</h5><p><img src=":/4ccd39470fc74ec98b3408222b2beab9" alt="416759c82ab6aa0f490a9f86e6889bf3.png"><br>这一过程的开始时，主机发送地址和控制信息到写地址通道中，然后主机发送每一个写数据到写数据通道中。当主机发送最后一个数据时， WLAST 信号就变为高。当设备接收完所有数据之后他将一个写响应发送回主机来表明写事务完成。</p><ul><li><strong>突发长度</strong>为每次突发传输的传输次数，范围限制1~16（AXI4增量模1~256）且不能跨越4kb的地址空间，每次突发传输不允许提前终止（可以通过关闭所有数据字段的方式使一段传输数据无效，但传输行为必须完成）。每次传输的突发长度为Ax(R/W)LEN[3:0] + 1（AXI增量模式AxLEN[7:0] + 1.</li><li><strong>突发尺寸</strong>为每次传输的byte数量，与突发传输的地址预测相关性很强。每次的突发尺寸不能超过数据通道的宽度；<strong>若突发尺寸小于数据通道宽度，需要指定哪些位数是有效的</strong>。突发尺寸为2^AxSIZE[2:0]。</li><li><strong>突发类型</strong>：<ul><li>FIXED（AxBURST[1:0]=0b00）：<strong>固定突发</strong>模式，每次突发传输的地址相同</li><li>INCR（AxBURST[1:0]=0b01）：<strong>增量突发</strong>模式，突发传输地址递增，递增量与突发尺寸相关</li><li>WRAP（AxBURST[1:0]=0b10）：<strong>回卷突发</strong>模式，突发传输地址可溢出性递增，突发长度仅支持2,4,8,16。地址空间被划分为长度[突发尺寸 * 突发长度]的块，传输地址不会超出起始地址所在的块，一旦递增超出，则回到该块的起始地址</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ic设计基础知识&quot;&gt;IC设计基础知识&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;http://mp.weixin.qq.com/mp/homepage?__biz=Mzg2NzczODYzOA==&amp;amp;hid=3&amp;amp;sn=0d</summary>
      
    
    
    
    
    <category term="总结" scheme="https://planckzgh.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>win11下wsl2搭建vcs2016+verdi开发环境教程</title>
    <link href="https://planckzgh.github.io/2023/12/19/win11%E4%B8%8Bwsl2%E6%90%AD%E5%BB%BAvcs2016-verdi%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2023/12/19/win11%E4%B8%8Bwsl2%E6%90%AD%E5%BB%BAvcs2016-verdi%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E6%95%99%E7%A8%8B/</id>
    <published>2023-12-19T07:15:52.000Z</published>
    <updated>2023-12-19T07:36:34.766Z</updated>
    
    <content type="html"><![CDATA[<h1 id="win11下wsl2搭建vcs2016-verdi开发环境教程">win11下wsl2搭建vcs2016+verdi开发环境教程</h1><h2 id="1-资源获取">1 资源获取</h2><p>链接：<a href="https://pan.baidu.com/s/1SFCxy1CGoOGlp2gwk9imRw">https://pan.baidu.com/s/1SFCxy1CGoOGlp2gwk9imRw</a><br>提取码：1234<br>下载完成后拷贝进wsl2中<br><img src="/imgs/7e500024cee6df4eb326c5a7ce9cdd27.png" alt="文件内容"></p><h2 id="2-安装方法">2 安装方法</h2><h3 id="2-1-具体安装步骤">2.1 具体安装步骤</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 创建安装目录</span></span><br><span class="line">$ <span class="built_in">mkdir</span> vcs2016 verdi2016 scl_v11.9</span><br><span class="line"><span class="comment"># 2. 解压SynopsysInstaller.rar</span></span><br><span class="line">$ unrar x SynopsysInstaller.rar</span><br><span class="line"><span class="comment"># 3. 执行SynopsysInstaller_v3.3.run安装vcs、scl和verdi的安装器</span></span><br><span class="line">$ <span class="built_in">chmod</span> 777 SynopsysInstaller_v3.3.run</span><br><span class="line">$ ./SynopsysInstaller_v3.3.run</span><br><span class="line">$ Please specify installation directory [.]: ./</span><br><span class="line"><span class="comment"># 4. 安装csh</span></span><br><span class="line">$ sudo apt install csh</span><br><span class="line"><span class="comment"># 5. 运行安装器</span></span><br><span class="line">$ ./setup.sh</span><br><span class="line"><span class="comment"># 6. 根据提示依次安装vcs2016、scl_v11.9、verdi2016</span></span><br><span class="line">&lt;next&gt; &lt;选择安装源目录&gt; &lt;next&gt; &lt;next&gt; &lt;next&gt; &lt;选择linux64，next&gt; &lt;选择第1步创建的安装路径&gt; &lt;Accept Install&gt; &lt;Finish&gt; &lt;Dismiss&gt;</span><br><span class="line"><span class="comment"># 7. 获取mac地址（不清楚就百度一下）和hostname</span></span><br><span class="line">$ ifconfig</span><br><span class="line">$ hostname</span><br><span class="line"><span class="comment"># 8. 通过scl_keygen.exe获取许可证文件Synopsys.dat</span></span><br><span class="line"><span class="comment"># 在&lt;HOST Daemon&gt;和&lt;HOST ID Feature&gt;处填入mac地址</span></span><br><span class="line"><span class="comment"># 在&lt;HOST Name&gt;处填入hostname</span></span><br><span class="line"><span class="comment"># 修改&lt;EXPIRE&gt;为12-dec-2030</span></span><br><span class="line"><span class="comment"># 点击&lt;Generate&gt;生成许可证文件Synopsys.dat</span></span><br><span class="line"><span class="comment"># 9. 修改许可证文件第二行，增加snpslmd文件路径</span></span><br><span class="line">$ dos2unix Synopsys.dat</span><br><span class="line">$ vim Synopsys.dat</span><br><span class="line">$ &lt;2G<span class="variable">$a</span>&gt; scl_v11.9/amd64/bin/snpslmd</span><br><span class="line">$ <span class="built_in">mkdir</span> vcs2016/license</span><br><span class="line">$ <span class="built_in">mv</span> Synopsys.dat vcs2016/license/</span><br><span class="line"><span class="comment"># 10. 修改.bashrc文件，添加环境变量</span></span><br><span class="line">$ <span class="comment"># &lt;见下方&gt;</span></span><br><span class="line">$ <span class="built_in">source</span> ~/.bashrc</span><br><span class="line"><span class="comment"># 11. 激活license</span></span><br><span class="line">$ lmli</span><br><span class="line"><span class="comment"># 12. 启动dve和verdi</span></span><br><span class="line">$ dve</span><br><span class="line">$ verdi</span><br><span class="line"><span class="comment"># 其他（Debug）</span></span><br><span class="line">$ <span class="comment"># 下载gcc-4.8 g++-4.8的方法见下方</span></span><br><span class="line">$ sudo apt gcc-4.8 g++-4.8</span><br><span class="line">$ sudo apt install lsb-core libjpeg62</span><br><span class="line">$ <span class="comment"># 将libpng12.so.0拷贝进/usr/lib/x86_64-linux-gnu/目录内</span></span><br><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br><span class="line">$ sudo <span class="built_in">mkdir</span> /usr/tmp/</span><br></pre></td></tr></table></figure><h3 id="2-2-配置环境变量">2.2 配置环境变量</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># .bashrc文件</span></span><br><span class="line"><span class="comment">#vcs2016</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/vcs2016/gui/dve/bin:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/vcs2016/bin:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> VCS_HOME=<span class="string">&quot;/home/gh/app/vcs2016&quot;</span></span><br><span class="line"><span class="built_in">export</span> DVE_HOME=<span class="string">&quot;/home/gh/app/vcs2016/gui/dve&quot;</span></span><br><span class="line"><span class="built_in">export</span> LM_LICENSE_FILE=<span class="string">&quot;/home/gh/app/vcs2016/license/Synopsys.dat&quot;</span></span><br><span class="line"><span class="built_in">export</span> LM_LICENSE_FILE=27000@planckgh</span><br><span class="line"><span class="built_in">export</span> VCS_TARGET_ARCH=<span class="string">&quot;amd64&quot;</span></span><br><span class="line"><span class="built_in">export</span> VCS_ARCH_OVERRIDE=<span class="string">&quot;linux&quot;</span></span><br><span class="line"><span class="built_in">alias</span> verdi=<span class="string">&#x27;verdi -full64 &amp;&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> dve=<span class="string">&#x27;dve -full64 &amp;&#x27;</span></span><br><span class="line"><span class="built_in">alias</span> lmli=<span class="string">&quot;/home/gh/app/scl_v11.9/amd64/bin/lmgrd -c /home/gh/app/vcs2016/license/Synopsys.dat&quot;</span></span><br><span class="line"><span class="comment">#verdi2016</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/verdi2016/bin:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> VERDI_HOME=<span class="string">&quot;/home/gh/app/verdi2016:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="built_in">export</span> NOVAS_HOME=<span class="string">&quot;/home/gh/app/verdi2016:&quot;</span><span class="variable">$PATH</span></span><br><span class="line"><span class="comment">#scl_v11.9</span></span><br><span class="line"><span class="built_in">export</span> PATH=<span class="string">&quot;/home/gh/app/scl_v11.9/amd64/bin:&quot;</span><span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><h3 id="2-3-下载所需文件">2.3 下载所需文件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim etc/apt/sources.list</span><br><span class="line"># 在文档后面增加</span><br><span class="line">deb http://dk.archive.ubuntu.com/ubuntu/ xenial main</span><br><span class="line">deb http://dk.archive.ubuntu.com/ubuntu/ xenial universe</span><br><span class="line">deb http://cz.archive.ubuntu.com/ubuntu xenial main</span><br><span class="line"># 然后更新镜像源</span><br><span class="line">$ sudo apt update</span><br><span class="line"># 安装gcc-4.8, g++-4.8</span><br><span class="line">sudo apt install gcc-4.8, g++-4.8</span><br></pre></td></tr></table></figure><p>注意，有时update时会报错, 提示GPG error缺少公钥，多见于添加了xenial版本(Ubuntu16)源。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">W: GPG error: http://dk.archive.ubuntu.com/ubuntu xenial InRelease: The following signatures couldn&#x27;t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">E: The repository &#x27;http://dk.archive.ubuntu.com/ubuntu xenial InRelease&#x27; is not signed.</span><br><span class="line">N: Updating from such a repository can&#x27;t be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br><span class="line">W: GPG error: http://cz.archive.ubuntu.com/ubuntu xenial InRelease: The following signatures couldn&#x27;t be verified because the public key is not available: NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32</span><br><span class="line">E: The repository &#x27;http://cz.archive.ubuntu.com/ubuntu xenial InRelease&#x27; is not signed.</span><br><span class="line">N: Updating from such a repository can&#x27;t be done securely, and is therefore disabled by default.</span><br><span class="line">N: See apt-secure(8) manpage for repository creation and user configuration details.</span><br></pre></td></tr></table></figure><p><strong>解决办法</strong>：</p><p>根据报错信息“NO_PUBKEY 40976EAF437D05B5 NO_PUBKEY 3B4FE6ACC0B21F32”，将对应公钥导入即可</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 40976EAF437D05B5</span><br><span class="line">$ sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;win11下wsl2搭建vcs2016-verdi开发环境教程&quot;&gt;win11下wsl2搭建vcs2016+verdi开发环境教程&lt;/h1&gt;
&lt;h2 id=&quot;1-资源获取&quot;&gt;1 资源获取&lt;/h2&gt;
&lt;p&gt;链接：&lt;a href=&quot;https://pan.baidu.c</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>从Ubuntu真机到WSL2</title>
    <link href="https://planckzgh.github.io/2023/12/03/%E4%BB%8EUbuntu%E7%B3%BB%E7%BB%9F%E5%88%B0WSL2/"/>
    <id>https://planckzgh.github.io/2023/12/03/%E4%BB%8EUbuntu%E7%B3%BB%E7%BB%9F%E5%88%B0WSL2/</id>
    <published>2023-12-03T07:41:51.000Z</published>
    <updated>2023-12-03T08:12:34.405Z</updated>
    
    <content type="html"><![CDATA[<h1 id="从ubuntu真机到wsl2">从Ubuntu真机到WSL2</h1><blockquote><p>记录一次被迫从Ubuntu22.04真机系统迁移到WSL2-Ubuntu22.04虚拟子系统的经历；<br>原因是运行vcs需要gcc4.8.5，与ysyx项目产生冲突，导致ysyx项目无法编译（动态库链接版本问题），使得真机无法继续进行该项目，于是使用wsl2继续进行ysyx，使用win11平台进行verification，好处是两者均位于同一个系统，使用起来切换自如。且win11系统使用体验确实好于Ubuntu系统，拥有丰富的软件支持。</p></blockquote><h2 id="1-wsl2的启用和ubuntu的安装">1 WSL2的启用和Ubuntu的安装</h2><ol><li>手动启用HyperV</li><li>管理员权限打开PowerShell，并运行，以启用虚拟子系统和虚拟化平台；并将wsl默认设置为wsl2</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><ol start="3"><li>手动更新<a href="https://wslstorestorage.blob.core.windows.net/wslblob/wsl_update_x64.msi">最新Linux内核</a></li><li>Microsoft Store安装Ubuntu</li></ol><h2 id="2-terminal的美化和增强">2 Terminal的美化和增强</h2><h3 id="2-1-换源">2.1 换源</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sed -i &quot;s@http://.*archive.ubuntu.com@http://repo.huaweicloud.com@g&quot; /etc/apt/sources.list</span><br><span class="line">sed -i &quot;s@http://.*security.ubuntu.com@http://repo.huaweicloud.com@g&quot; /etc/apt/sources.list</span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><h3 id="2-2-美化">2.2 美化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install zsh</span><br><span class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)&quot;</span><br></pre></td></tr></table></figure><h3 id="2-3-增强">2.3 增强</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br><span class="line">git clone https://github.com/zsh-users/zsh-syntax-highlighting.git</span><br></pre></td></tr></table></figure><h2 id="3-git配置">3 Git配置</h2><h3 id="3-1-安装和配置git">3.1 安装和配置git</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install git</span><br><span class="line">git config --global user.name &quot;your name&quot; # your student ID and name</span><br><span class="line">git config --global user.email &quot;your email&quot;   # your email</span><br><span class="line">git config --global core.editor vim                 # your favorite editor</span><br><span class="line">git config --global color.ui true</span><br></pre></td></tr></table></figure><h3 id="3-2-创建和查看公钥">3.2 创建和查看公钥</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -C &quot;your email&quot; -t rsa</span><br><span class="line">cat ~/.ssh/id_rsa.pub </span><br></pre></td></tr></table></figure><h3 id="3-3-复制公钥到github">3.3 复制公钥到github</h3><p><img src="/imgs/9c3d117a15db45b9b5ef15759a1aac51.png" alt=""><br><img src="/imgs/6527df4981834576b01f35b267aac0cd.png" alt=""></p><h2 id="4-vim配置">4 vim配置</h2><h3 id="4-1-配置-vimrc">4.1 配置.vimrc</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> nocompatible</span><br><span class="line">filetype on</span><br><span class="line"><span class="built_in">set</span> rtp+=~/.vim/bundle/Vundle.vim</span><br><span class="line">call vundle<span class="comment">#begin()</span></span><br><span class="line"><span class="string">&quot; 插件配置 &quot;</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> YouCompleteMe:语句补全插件</span><br><span class="line"><span class="built_in">set</span> runtimepath+=~/.vim/bundle/YouCompleteMe</span><br><span class="line">autocmd InsertLeave * <span class="keyword">if</span> pumvisible() == 0|pclose|endif<span class="string">&quot;离开插入模式后自动关闭预览窗口&quot;</span></span><br><span class="line"><span class="built_in">let</span> g:ycm_collect_identifiers_from_tags_files = 1           <span class="string">&quot; 开启 YCM基于标签引擎</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot;</span> 注释与字符串中的内容也用于补全</span><br><span class="line"><span class="built_in">let</span> g:syntastic_ignore_files=[<span class="string">&quot;.*\.py$&quot;</span>]</span><br><span class="line"><span class="built_in">let</span> g:ycm_seed_identifiers_with_syntax = 1                  <span class="string">&quot; 语法关键字补全</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_comments = 1</span></span><br><span class="line"><span class="string">let g:ycm_confirm_extra_conf = 0                            &quot;</span> 关闭加载.ycm_extra_conf.py提示</span><br><span class="line"><span class="built_in">let</span> g:ycm_key_list_select_completion = [<span class="string">&#x27;&lt;c-n&gt;&#x27;</span>, <span class="string">&#x27;&lt;Down&gt;&#x27;</span>]  <span class="string">&quot; 映射按键,没有这个会拦截掉tab, 导致其他插件的tab不能用.</span></span><br><span class="line"><span class="string">let g:ycm_key_list_previous_completion = [&#x27;&lt;c-p&gt;&#x27;, &#x27;&lt;Up&gt;&#x27;]</span></span><br><span class="line"><span class="string">let g:ycm_complete_in_comments = 1                          &quot;</span> 在注释输入中也能补全</span><br><span class="line"><span class="built_in">let</span> g:ycm_complete_in_strings = 1                           <span class="string">&quot; 在字符串输入中也能补全</span></span><br><span class="line"><span class="string">let g:ycm_collect_identifiers_from_comments_and_strings = 1 &quot;</span> 注释和字符串中的文字也会被收入补全</span><br><span class="line"><span class="built_in">let</span> g:ycm_global_ycm_extra_conf=<span class="string">&#x27;~/.vim/bundle/YouCompleteMe/third_party/ycmd/cpp/ycm/.ycm_extra_conf.py&#x27;</span></span><br><span class="line"><span class="built_in">let</span> g:ycm_show_diagnostics_ui = 0                           <span class="string">&quot; 禁用语法检查</span></span><br><span class="line"><span class="string">inoremap &lt;expr&gt; &lt;CR&gt; pumvisible() ? &quot;</span>\&lt;C-y&gt;<span class="string">&quot; : &quot;</span>\&lt;CR&gt;<span class="string">&quot;             &quot;</span> 回车即选中当前项</span><br><span class="line">nnoremap &lt;c-j&gt; :YcmCompleter GoToDefinitionElseDeclaration&lt;CR&gt;     <span class="string">&quot; 跳转到定义处</span></span><br><span class="line"><span class="string">let g:ycm_min_num_of_chars_for_completion=2                 &quot;</span> 从第2个键入字符就开始罗列匹配项</span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> github 仓库中的插件 <span class="string">&quot;</span></span><br><span class="line"><span class="string">Plugin &#x27;VundleVim/Vundle.vim&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Plugin &#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line"><span class="string">&quot;</span>vim-airline配置:优化vim界面<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string">&quot; airline设置</span></span><br><span class="line"><span class="string">&quot;</span> 显示颜色</span><br><span class="line"><span class="built_in">set</span> t_Co=256</span><br><span class="line"><span class="built_in">set</span> background=dark</span><br><span class="line"><span class="built_in">set</span> laststatus=2</span><br><span class="line"><span class="string">&quot; 使用powerline打过补丁的字体</span></span><br><span class="line"><span class="string">let g:airline_powerline_fonts = 1</span></span><br><span class="line"><span class="string">&quot;</span> 开启tabline</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#enabled = 1</span></span><br><span class="line"><span class="string">&quot; tabline中当前buffer两端的分隔字符</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#left_sep = &#x27; &#x27;</span></span><br><span class="line"><span class="string">&quot;</span> tabline中未激活buffer两端的分隔字符</span><br><span class="line"><span class="built_in">let</span> g:airline<span class="comment">#extensions#tabline#left_alt_sep = &#x27; &#x27;</span></span><br><span class="line"><span class="string">&quot; tabline中buffer显示编号</span></span><br><span class="line"><span class="string">let g:airline#extensions#tabline#buffer_nr_show = 1</span></span><br><span class="line"><span class="string">&quot;</span> 映射切换buffer的键位</span><br><span class="line">nnoremap [b :bp&lt;CR&gt;</span><br><span class="line">nnoremap ]b :bn&lt;CR&gt;</span><br><span class="line"><span class="string">&quot; 映射&lt;leader&gt;num到num buffer</span></span><br><span class="line"><span class="string">map &lt;leader&gt;1 :b 1&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;2 :b 2&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;3 :b 3&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;4 :b 4&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;5 :b 5&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;6 :b 6&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;7 :b 7&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;8 :b 8&lt;CR&gt;</span></span><br><span class="line"><span class="string">map &lt;leader&gt;9 :b 9&lt;CR&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> vim-scripts 中的插件 <span class="string">&quot;</span></span><br><span class="line"><span class="string">Plugin &#x27;taglist.vim&#x27;</span></span><br><span class="line"><span class="string">&quot;</span>ctags 配置:F3快捷键显示程序中的各种tags，包括变量和函数等。</span><br><span class="line">map &lt;F3&gt; :TlistToggle&lt;CR&gt;</span><br><span class="line"><span class="built_in">let</span> Tlist_Use_Right_Window=1</span><br><span class="line"><span class="built_in">let</span> Tlist_Show_One_File=1</span><br><span class="line"><span class="built_in">let</span> Tlist_Exit_OnlyWindow=1</span><br><span class="line"><span class="built_in">let</span> Tlist_WinWidt=25</span><br><span class="line"> </span><br><span class="line">Plugin <span class="string">&#x27;The-NERD-tree&#x27;</span></span><br><span class="line"><span class="string">&quot;NERDTree 配置:F2快捷键显示当前目录树</span></span><br><span class="line"><span class="string">map &lt;F2&gt; :NERDTreeToggle&lt;CR&gt;</span></span><br><span class="line"><span class="string">let NERDTreeWinSize=25 </span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">Plugin &#x27;indentLine.vim&#x27;</span></span><br><span class="line"><span class="string">Plugin &#x27;delimitMate.vim&#x27;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> 非 github 仓库的插件<span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> Plugin <span class="string">&#x27;git://git.wincent.com/command-t.git&#x27;</span></span><br><span class="line"><span class="string">&quot; 本地仓库的插件 &quot;</span></span><br><span class="line"> </span><br><span class="line">call vundle<span class="comment">#end()</span></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>新文件自动填补</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;新建.c,.h,.sh,.v文件，自动插入文件头 </span></span><br><span class="line"><span class="string">autocmd BufNewFile *.cpp,*.[chv],*.sv,*.sh, exec &quot;</span>:call SetTitle()<span class="string">&quot; </span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;定义函数SetTitle，自动插入文件头 </span></span><br><span class="line"><span class="string">func SetTitle() </span></span><br><span class="line"><span class="string">  &quot;</span>如果文件类型为.sh文件 </span><br><span class="line">  <span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;sh&#x27;</span> </span><br><span class="line">    call setline(1, <span class="string">&quot;##########################################################################&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>), <span class="string">&quot;# File Name: &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;# Author: planckgh&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;# Mail: planckgh@gmail.com&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+3, <span class="string">&quot;# Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+4, <span class="string">&quot;#########################################################################&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+5, <span class="string">&quot;#!/bin/bash&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  <span class="keyword">else</span> </span><br><span class="line">    call setline(1, <span class="string">&quot;/*************************************************************************&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>),   <span class="string">&quot;  &gt; File Name: &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+1, <span class="string">&quot;  &gt; Author: planckgh&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+2, <span class="string">&quot;  &gt; Mail: planckgh@gmail.com &quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+3, <span class="string">&quot;  &gt; Description: &quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+4, <span class="string">&quot;  &gt; Created Time: &quot;</span>.strftime(<span class="string">&quot;%c&quot;</span>)) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+5, <span class="string">&quot; ************************************************************************/&quot;</span>) </span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+6, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">expand</span>(<span class="string">&quot;%:e&quot;</span>) == <span class="string">&#x27;cpp&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#include&lt;iostream&gt;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;using namespace std;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;int main(int argc, char *argv[])&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;    return 0;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">expand</span>(<span class="string">&quot;%:e&quot;</span>) == <span class="string">&#x27;c&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#include&lt;stdio.h&gt;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;int main(int argc, char *argv[])&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;&#123;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;    return 0;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> <span class="built_in">expand</span>(<span class="string">&quot;%:e&quot;</span>) == <span class="string">&#x27;h&#x27;</span></span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;#ifndef __&quot;</span>.toupper(<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>)).<span class="string">&quot;_H__&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;#define __&quot;</span>.toupper(<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>)).<span class="string">&quot;_H__&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;#include&lt;stdio.h&gt;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;#endif&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line">  <span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;verilog&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;module &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>).<span class="string">&quot;(&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;    input&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;    output&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;);&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&quot;</span>)</span><br><span class="line">  call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;endmodule&quot;</span>)</span><br><span class="line">  endif</span><br><span class="line"><span class="keyword">if</span> &amp;filetype == <span class="string">&#x27;systemverilog&#x27;</span></span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+7, <span class="string">&quot;class &quot;</span>.<span class="built_in">expand</span>(<span class="string">&quot;%:r&quot;</span>).<span class="string">&quot;;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+8, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+9, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+10, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+11, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+12, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    call append(line(<span class="string">&quot;.&quot;</span>)+13, <span class="string">&quot;&quot;</span>)</span><br><span class="line">call append(line(<span class="string">&quot;.&quot;</span>)+14, <span class="string">&quot;endclass&quot;</span>)</span><br><span class="line">endif</span><br><span class="line"></span><br><span class="line">  <span class="string">&quot;新建文件后，自动定位到文件末尾</span></span><br><span class="line"><span class="string">  autocmd BufNewFile * normal 5G$</span></span><br><span class="line"><span class="string">endfunc </span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;</span>键盘命令</span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;w :w!&lt;cr&gt;</span></span><br><span class="line"><span class="string">nmap &lt;leader&gt;f :find&lt;cr&gt;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&quot;</span> 映射全选+复制 ctrl+a</span><br><span class="line">map &lt;C-A&gt; ggVGY</span><br><span class="line">map! &lt;C-A&gt; &lt;Esc&gt;ggVGY</span><br><span class="line">map &lt;F12&gt; gg=G</span><br><span class="line"><span class="string">&quot; 选中状态下 Ctrl+c 复制</span></span><br><span class="line"><span class="string">vmap &lt;C-c&gt; &quot;</span>+y</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;实用设置</span></span><br><span class="line"><span class="string">&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;&quot;</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">&quot;</span> 设置当文件被改动时自动载入</span><br><span class="line"><span class="built_in">set</span> autoread</span><br><span class="line"><span class="string">&quot; quickfix模式</span></span><br><span class="line"><span class="string">autocmd FileType c,cpp map &lt;buffer&gt; &lt;leader&gt;&lt;space&gt; :w&lt;cr&gt;:make&lt;cr&gt;</span></span><br><span class="line"><span class="string">&quot;</span>代码补全 </span><br><span class="line"><span class="built_in">set</span> completeopt=preview,menu </span><br><span class="line"><span class="string">&quot;允许插件  </span></span><br><span class="line"><span class="string">filetype plugin on</span></span><br><span class="line"><span class="string">&quot;</span>共享剪贴板  </span><br><span class="line"><span class="built_in">set</span> clipboard=unnamedplus </span><br><span class="line"><span class="string">&quot;从不备份  </span></span><br><span class="line"><span class="string">set nobackup</span></span><br><span class="line"><span class="string">&quot;</span>make 运行</span><br><span class="line">:<span class="built_in">set</span> makeprg=g++\ -Wall\ \ %</span><br><span class="line"><span class="string">&quot;自动保存</span></span><br><span class="line"><span class="string">set autowrite</span></span><br><span class="line"><span class="string">set ruler                   &quot;</span> 打开状态栏标尺</span><br><span class="line"><span class="string">&quot;set cursorline              &quot;</span> 突出显示当前行</span><br><span class="line"><span class="built_in">set</span> magic                   <span class="string">&quot; 设置魔术</span></span><br><span class="line"><span class="string">set guioptions-=T           &quot;</span> 隐藏工具栏</span><br><span class="line"><span class="built_in">set</span> guioptions-=m           <span class="string">&quot; 隐藏菜单栏</span></span><br><span class="line"><span class="string">&quot;</span><span class="built_in">set</span> statusline=\ %&lt;%F[%1*%M%*%n%R%H]%=\ %y\ %0(%&#123;&amp;fileformat&#125;\ %&#123;&amp;encoding&#125;\ %c:%l/%L%)\</span><br><span class="line"><span class="string">&quot; 设置在状态行显示的信息</span></span><br><span class="line"><span class="string">set foldcolumn=0</span></span><br><span class="line"><span class="string">set foldmethod=indent </span></span><br><span class="line"><span class="string">set foldlevel=3 </span></span><br><span class="line"><span class="string">set foldenable              &quot;</span> 开始折叠</span><br><span class="line"><span class="string">&quot; 不要使用vi的键盘模式，而是vim自己的</span></span><br><span class="line"><span class="string">set nocompatible</span></span><br><span class="line"><span class="string">&quot;</span> 语法高亮</span><br><span class="line"><span class="built_in">set</span> syntax=on</span><br><span class="line"><span class="string">&quot; 去掉输入错误的提示声音</span></span><br><span class="line"><span class="string">set noeb</span></span><br><span class="line"><span class="string">&quot;</span> 在处理未保存或只读文件的时候，弹出确认</span><br><span class="line"><span class="built_in">set</span> confirm</span><br><span class="line"><span class="string">&quot; 自动缩进</span></span><br><span class="line"><span class="string">set autoindent</span></span><br><span class="line"><span class="string">set cindent</span></span><br><span class="line"><span class="string">&quot;</span> Tab键的宽度</span><br><span class="line"><span class="built_in">set</span> tabstop=2</span><br><span class="line"><span class="string">&quot; 统一缩进为2</span></span><br><span class="line"><span class="string">set softtabstop=2</span></span><br><span class="line"><span class="string">set shiftwidth=2</span></span><br><span class="line"><span class="string">&quot;</span> 不要用空格代替制表符</span><br><span class="line"><span class="built_in">set</span> noexpandtab</span><br><span class="line"><span class="string">&quot; 在行和段开始处使用制表符</span></span><br><span class="line"><span class="string">set smarttab</span></span><br><span class="line"><span class="string">&quot;</span> 显示行号</span><br><span class="line"><span class="built_in">set</span> number</span><br><span class="line"><span class="string">&quot; toumingbeijing</span></span><br><span class="line"><span class="string">hi Normal ctermfg=10 ctermbg=none</span></span><br><span class="line"><span class="string">&quot;</span> au GUIEnter * call libcallnr(<span class="string">&quot;vimtweak.dll&quot;</span>, <span class="string">&quot;SetAlpha&quot;</span>, 15)</span><br><span class="line"><span class="string">&quot; 历史记录数</span></span><br><span class="line"><span class="string">set history=1000</span></span><br><span class="line"><span class="string">&quot;</span>禁止生成临时文件</span><br><span class="line"><span class="built_in">set</span> nobackup</span><br><span class="line"><span class="built_in">set</span> noswapfile</span><br><span class="line"><span class="string">&quot;搜索忽略大小写</span></span><br><span class="line"><span class="string">set ignorecase</span></span><br><span class="line"><span class="string">&quot;</span>搜索逐字符高亮</span><br><span class="line"><span class="built_in">set</span> hlsearch</span><br><span class="line"><span class="built_in">set</span> incsearch</span><br><span class="line"><span class="string">&quot;行内替换</span></span><br><span class="line"><span class="string">set gdefault</span></span><br><span class="line"><span class="string">&quot;</span>编码设置</span><br><span class="line"><span class="built_in">set</span> enc=utf-8</span><br><span class="line"><span class="built_in">set</span> fencs=utf-8,ucs-bom,shift-jis,gb18030,gbk,gb2312,cp936</span><br><span class="line"><span class="string">&quot;语言设置</span></span><br><span class="line"><span class="string">set langmenu=zh_CN.UTF-8</span></span><br><span class="line"><span class="string">set helplang=cn</span></span><br><span class="line"><span class="string">&quot;</span> 我的状态行显示的内容（包括文件类型和解码）</span><br><span class="line"><span class="built_in">set</span> statusline=%F%m%r%h%w\ [FORMAT=%&#123;&amp;ff&#125;]\ [TYPE=%Y]\ [POS=%l,%v][%p%%]\ %&#123;strftime(\&quot;%d/%m/%y\ -\ %H:%M\&quot;)&#125;</span><br><span class="line"><span class="built_in">set</span> statusline=[%F]%y%r%m%*%=[Line:%l/%L,Column:%c][%p%%]</span><br><span class="line"><span class="string">&quot; 总是显示状态行</span></span><br><span class="line"><span class="string">set laststatus=2</span></span><br><span class="line"><span class="string">&quot;</span> 命令行（在状态行下）的高度，默认为1，这里是2</span><br><span class="line"><span class="built_in">set</span> cmdheight=2</span><br><span class="line"><span class="string">&quot; 侦测文件类型</span></span><br><span class="line"><span class="string">filetype on</span></span><br><span class="line"><span class="string">&quot;</span> 载入文件类型插件</span><br><span class="line">filetype plugin on</span><br><span class="line"><span class="string">&quot; 为特定文件类型载入相关缩进文件</span></span><br><span class="line"><span class="string">filetype indent on</span></span><br><span class="line"><span class="string">&quot;</span> 保存全局变量</span><br><span class="line"><span class="built_in">set</span> viminfo+=!</span><br><span class="line"><span class="string">&quot; 带有如下符号的单词不要被换行分割</span></span><br><span class="line"><span class="string">set iskeyword+=_,$,@,%,#,-</span></span><br><span class="line"><span class="string">&quot;</span> 字符间插入的像素行数目</span><br><span class="line"><span class="built_in">set</span> linespace=0</span><br><span class="line"><span class="string">&quot; 增强模式中的命令行自动完成操作</span></span><br><span class="line"><span class="string">set wildmenu</span></span><br><span class="line"><span class="string">&quot;</span> 使回格键（backspace）正常处理indent, eol, start等</span><br><span class="line"><span class="built_in">set</span> backspace=2</span><br><span class="line"><span class="string">&quot; 允许backspace和光标键跨越行边界</span></span><br><span class="line"><span class="string">set whichwrap+=&lt;,&gt;,h,l</span></span><br><span class="line"><span class="string">&quot;</span> 可以在buffer的任何地方使用鼠标（类似office中在工作区双击鼠标定位）</span><br><span class="line"><span class="built_in">set</span> mouse=a</span><br><span class="line"><span class="built_in">set</span> selection=exclusive</span><br><span class="line"><span class="built_in">set</span> selectmode=mouse,key</span><br><span class="line"><span class="string">&quot; 通过使用: commands命令，告诉我们文件的哪一行被改变过</span></span><br><span class="line"><span class="string">set report=0</span></span><br><span class="line"><span class="string">&quot;</span> 在被分割的窗口间显示空白，便于阅读</span><br><span class="line"><span class="built_in">set</span> fillchars=vert:\ ,stl:\ ,stlnc:\</span><br><span class="line"><span class="string">&quot; 高亮显示匹配的括号</span></span><br><span class="line"><span class="string">set showmatch</span></span><br><span class="line"><span class="string">&quot;</span> 匹配括号高亮的时间（单位是十分之一秒）</span><br><span class="line"><span class="built_in">set</span> matchtime=1</span><br><span class="line"><span class="string">&quot; 光标移动到buffer的顶部和底部时保持3行距离</span></span><br><span class="line"><span class="string">set scrolloff=3</span></span><br><span class="line"><span class="string">&quot;</span> 为C程序提供自动缩进</span><br><span class="line"><span class="built_in">set</span> smartindent</span><br><span class="line"><span class="string">&quot; 高亮显示普通txt文件（需要txt.vim脚本）</span></span><br><span class="line"><span class="string"> au BufRead,BufNewFile *  setfiletype txt</span></span><br><span class="line"><span class="string">&quot;</span>自动补全</span><br><span class="line">:inoremap ( ()&lt;ESC&gt;i</span><br><span class="line">:inoremap ) &lt;c-r&gt;=ClosePair(<span class="string">&#x27;)&#x27;</span>)&lt;CR&gt;</span><br><span class="line">:inoremap &#123; &#123;&#125;&lt;ESC&gt;i</span><br><span class="line">:inoremap &#125; &lt;c-r&gt;=ClosePair(<span class="string">&#x27;&#125;&#x27;</span>)&lt;CR&gt;</span><br><span class="line">:inoremap [ []&lt;ESC&gt;i</span><br><span class="line">:inoremap ] &lt;c-r&gt;=ClosePair(<span class="string">&#x27;]&#x27;</span>)&lt;CR&gt;</span><br><span class="line"><span class="string">&quot;:inoremap &quot;</span> <span class="string">&quot;&quot;</span>&lt;ESC&gt;i</span><br><span class="line"><span class="string">&quot;:inoremap &#x27; &#x27;&#x27;&lt;ESC&gt;i</span></span><br><span class="line"><span class="string">function! ClosePair(char)</span></span><br><span class="line"><span class="string">  if getline(&#x27;.&#x27;)[col(&#x27;.&#x27;) - 1] == a:char</span></span><br><span class="line"><span class="string">    return &quot;</span>\&lt;Right&gt;<span class="string">&quot;</span></span><br><span class="line"><span class="string">  else</span></span><br><span class="line"><span class="string">    return a:char</span></span><br><span class="line"><span class="string">  endif</span></span><br><span class="line"><span class="string">endfunction</span></span><br><span class="line"><span class="string">filetype plugin indent on </span></span><br><span class="line"><span class="string">&quot;</span>打开文件类型检测, 加了这句才可以用智能补全</span><br><span class="line"><span class="built_in">set</span> completeopt=longest,menu</span><br><span class="line"><span class="string">&quot;set termguicolors</span></span><br></pre></td></tr></table></figure><h3 id="4-2-安装vundle中的插件">4.2 安装Vundle中的插件</h3><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install universal-ctags</span><br><span class="line">git <span class="built_in">clone</span> https://github.com/VundleVim/Vundle.vim.git ~/.vim/bundle/Vundle.vim</span><br><span class="line">vim</span><br><span class="line">:PluginInstall</span><br><span class="line"><span class="comment"># 一直等到左下角出现“Done!&quot;标志</span></span><br></pre></td></tr></table></figure><h2 id="5-hexo构建">5 hexo构建</h2><h3 id="5-1-安装node-js和npm">5.1 安装Node.js和npm</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update  </span><br><span class="line">sudo apt-get install nodejs  npm</span><br></pre></td></tr></table></figure><h3 id="5-2-安装hexo并初始化">5.2 安装hexo并初始化</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir hexo</span><br><span class="line">cd hexo</span><br><span class="line">sudo npm install -g hexo-cli</span><br><span class="line">hexo init</span><br></pre></td></tr></table></figure><h3 id="5-3-安装插件">5.3 安装插件</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-index --save  &amp;</span><br><span class="line">npm install hexo-generator-archive --save  &amp;</span><br><span class="line">npm install hexo-generator-category --save  &amp;</span><br><span class="line">npm install hexo-generator-tag --save  &amp;</span><br><span class="line">npm install hexo-server --save  &amp;</span><br><span class="line">npm install hexo-deployer-git --save  &amp;</span><br><span class="line">npm install hexo-deployer-heroku --save  &amp;</span><br><span class="line">npm install hexo-deployer-rsync --save  &amp; </span><br><span class="line">npm install hexo-deployer-openshift --save &amp; </span><br><span class="line">npm install hexo-renderer-marked --save  &amp;</span><br><span class="line">npm install hexo-renderer-stylus --save  &amp;</span><br><span class="line">npm install hexo-generator-feed --save  &amp;</span><br><span class="line">npm install hexo-generator-sitemap --save &amp;</span><br><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><h3 id="5-4-配置主题">5.4 配置主题</h3><h4 id="5-4-1-修改-config-yml">5.4.1 修改_config.yml</h4><h4 id="5-4-2-修改theme">5.4.2 修改theme</h4><p>选择你喜欢的<a href="https://hexo.io/themes/">主题</a>  ，以<a href="https://hexo.io/themes/">butterfly</a>为例：</p><ol><li>选择<a href="https://butterfly.js.org/posts/21cfbf15/">中文安装和配置手册</a></li><li>根据安装和配置手册进行安装，关键步骤如下：<ul><li>应用主题：修改hexo根目录下的<code>_config.yml</code>文件（<code>theme: butterfly</code>）</li><li>主题配置：修改hexo/theme/butterfly根目录下的<code>_config.yml</code>文件。</li></ul></li></ol><h3 id="5-5-hexo相关命令">5.5 hexo相关命令</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n &quot;文章名称&quot;</span><br><span class="line">hexo g // 本地部署</span><br><span class="line">hexo s // 本地预览</span><br><span class="line">hexo d // 推到远程</span><br></pre></td></tr></table></figure><h2 id="6-ysyx构建">6 YSYX构建</h2><h3 id="6-1-安装pa相关工具">6.1 安装PA相关工具</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install build-essential man gcc-doc gdb git libreadline-dev libsdl2-dev llvm llvm-dev llvm-11 llvm-11-dev ccache</span><br><span class="line">sudo apt install tmux vim</span><br></pre></td></tr></table></figure><h3 id="6-2-获取项目代码">6.2 获取项目代码</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git clone -b master git@github.com:OSCPU/ysyx-workbench.git</span><br><span class="line">bash init.sh nemu</span><br><span class="line">bash init.sh abstract-machine</span><br><span class="line">bash init.sh am-kernels</span><br><span class="line">bash init.sh npc</span><br><span class="line"># 打补丁</span><br><span class="line">sudo apt install flex bison help2man</span><br></pre></td></tr></table></figure><h3 id="6-3-安装verilator-v5-008">6.3 安装verilator v5.008</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install git perl python3 make autoconf g++ flex bison ccache</span><br><span class="line">sudo apt-get install libgoogle-perftools-dev numactl perl-doc</span><br><span class="line">sudo apt-get install libfl2 # Ubuntu only (ignore if gives error)</span><br><span class="line">sudo apt-get install libfl-dev # Ubuntu only (ignore if gives error)</span><br><span class="line">sudo apt-get install zlibc zlib1g zlib1g-dev # Ubuntu only (ignore if gives error)</span><br><span class="line">git clone https://github.com/verilator/verilator</span><br><span class="line">unset VERILATOR_ROOT # For bash</span><br><span class="line">cd verilator</span><br><span class="line">git pull # Make sure git repository is up-to-date</span><br><span class="line">git tag # See what versions exist</span><br><span class="line">git checkout v5.008 # Switch to specified release version</span><br><span class="line">autoconf # Create ./configure script</span><br><span class="line">./configure # Configure and create Makefile</span><br><span class="line">make -j \`nproc\` # Build Verilator itself (if error, try just &#x27;make&#x27;)</span><br><span class="line">sudo make install</span><br><span class="line">verilator --version</span><br></pre></td></tr></table></figure><h2 id="7-debug">7 Debug</h2><h3 id="bug1：系统找不到指定的文件">Bug1：系统找不到指定的文件</h3><ol><li><strong>原因一</strong>：安装了VMware，导致注册表发生了改变</li><li><strong>解决方案</strong>：卸载VMware，并使用CleanMyPC软件重新修复注册表</li><li><strong>原因二</strong>：原先安装的Ubuntu卸载之后没有注销</li><li><strong>解决方案</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wsl --list --all</span><br><span class="line">wsl --unregister Ubuntu-22.04</span><br></pre></td></tr></table></figure><h3 id="bug2：vim打开文件无响应">Bug2：VIM打开文件无响应</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vim</span><br><span class="line">$ (无响应)</span><br></pre></td></tr></table></figure><ol><li><strong>原因</strong>：安装了vim-gtk3导致的</li><li><strong>解决方案</strong>：卸载掉vim-gtk3</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;从ubuntu真机到wsl2&quot;&gt;从Ubuntu真机到WSL2&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;记录一次被迫从Ubuntu22.04真机系统迁移到WSL2-Ubuntu22.04虚拟子系统的经历；&lt;br&gt;
原因是运行vcs需要gcc4.8.5，与ysyx项</summary>
      
    
    
    
    
    <category term="记录" scheme="https://planckzgh.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://planckzgh.github.io/2023/12/03/hello-world/"/>
    <id>https://planckzgh.github.io/2023/12/03/hello-world/</id>
    <published>2023-12-03T06:21:17.855Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start">Quick Start</h2><h3 id="create-a-new-post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h3 id="choose-a-theme">Choose a theme</h3><p>Such as <a href="https://butterfly.js.org/">Butterfly</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
    <category term="其他" scheme="https://planckzgh.github.io/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>Mermaid简明教程</title>
    <link href="https://planckzgh.github.io/2023/11/19/Mermaid%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2023/11/19/Mermaid%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</id>
    <published>2023-11-19T14:20:33.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>使用教程：<a href="https://zhuanlan.zhihu.com/p/627356428">从入门到精通</a><br>Mermaid 是一种使用文本生成流程图、饼状图、甘特图等图表的描述语言，它可以帮助用户以简单、直观的方式创建各种类型的图表，包括<strong>流程图、时序图、甘特图</strong>等。</p></blockquote><h2 id="1-如何使用-mermaid？">1 如何使用 Mermaid？</h2><ul><li>在 HTML 或 Markdown 文件中引用 Mermaid 库和 Mermaid CSS 样式表。</li><li>使用 Mermaid 的 CLI 工具在命令行中生成图表，或使用 Mermaid 的 API 在自己的应用程序中生成图表。</li></ul><p>具体而言，</p><ul><li>如果只是轻量级、偶尔使用，推荐 <strong>Mermaid 在线渲染编辑器</strong>——<a href="https://mermaid.js.org://mermaid.js.org/">Mermaid Live Editor</a></li><li>推荐使用 <strong>Markdown 编辑器</strong>，比如 <a href="https://typora.io/">Typora</a>，<a href="https://joplinapp.org/">Joplin</a>.</li><li>一些<strong>兼容 Markdown 语法</strong>，支持 Mermaid Code 的现代编辑器，比如 <a href="https://flowus.cn/product">FlowUs 息流</a>.</li><li>流程图工具均支持 Mermaid 语法进行程序绘图。比如，<a href="https://pub.visionon.cn/?c=spike&amp;l=articleid&amp;r=categoryid">VisionOn</a>.</li><li>更多内容，推荐阅读 <a href="https://mermaid.js.org/syntax/timeline.html">Mermaid 官方文档</a>。</li></ul><h2 id="2-mermaid-支持哪些类型的图表？">2 Mermaid 支持哪些类型的图表？</h2><ol><li><strong>流程图</strong>（Flowchart）：展示过程、决策和操作流程。</li><li><strong>序列图</strong>（Sequence Diagram）：展示对象之间的交互顺序。</li><li><strong>甘特图</strong>（Gantt Chart）：展示项目计划和进度。</li><li><strong>类图</strong>（Class Diagram）：展示类的结构和关系。</li><li><strong>饼图</strong>（Pie Chart）：展示数据占比。</li><li><strong>旅程图</strong>（Journey）：展示用户如何与应用程序交互。</li></ol><p>除此之外，Mermaid 还支持其他类型的图表；</p><h2 id="3-mermaid-语法">3 Mermaid 语法</h2><h3 id="3-1-flow-chart">3.1 Flow Chart</h3><h4 id="3-1-1-连线类型">3.1.1 连线类型</h4><h4 id="3-1-2-形状颜色">3.1.2 形状颜色</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">graph TD</span><br><span class="line">subgraph Subgraph A</span><br><span class="line">A --&gt; B -.-&gt; C &lt;---&gt; D</span><br><span class="line">A ==&gt; C1</span><br><span class="line">C1 ----o D1</span><br><span class="line">C1 ----x E1</span><br><span class="line">end</span><br><span class="line">style A fill:#f9c;</span><br><span class="line">  style B stroke:#333,stroke-width:4px;</span><br><span class="line">  style C fill:#f96,stroke:#333,stroke-width:2px;</span><br><span class="line">  style D fill:#fc9,stroke:#f63,stroke-width:4px,stroke-dasharray: 5 5;</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-1.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">flowchart LR</span><br><span class="line">A[Hard edge] --&gt;|Link text| B(Round edge)</span><br><span class="line">B --&gt; C&#123;Decision&#125;</span><br><span class="line">C --&gt;|One| D[Result one]</span><br><span class="line">C --&gt;|Two| E[Result two]</span><br><span class="line">style A fill:#f9f,stroke:#333,stroke-width:4px</span><br><span class="line">style B fill:#bbf,stroke:#f66,stroke-width:2px,color:#fff,stroke-dasharray: 5</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-2.png" alt=""></p><h3 id="3-2-sequence-diagram">3.2 Sequence Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant Alice</span><br><span class="line">    participant Bob</span><br><span class="line">    Alice-&gt;&gt;John: Hello John, how are you?</span><br><span class="line">    loop Healthcheck</span><br><span class="line">        John-&gt;&gt;John: Fight against hypochondria</span><br><span class="line">    end</span><br><span class="line">    Note right of John: Rational thoughts &lt;br/&gt;prevail!</span><br><span class="line">    John--&gt;&gt;Alice: Great!</span><br><span class="line">    John-&gt;&gt;Bob: How about you?</span><br><span class="line">    Bob--&gt;&gt;John: Jolly good!</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-3.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">sequenceDiagram</span><br><span class="line">    participant Alice</span><br><span class="line">    participant John</span><br><span class="line"></span><br><span class="line">    rect rgb(191, 223, 255)</span><br><span class="line">    note right of Alice: Alice calls John.</span><br><span class="line">    Alice-&gt;&gt;+John: Hello John, how are you?</span><br><span class="line">    rect rgb(200, 150, 255)</span><br><span class="line">    Alice-&gt;&gt;+John: John, can you hear me?</span><br><span class="line">    John--&gt;&gt;-Alice: Hi Alice, I can hear you!</span><br><span class="line">    end</span><br><span class="line">    John--&gt;&gt;-Alice: I feel great!</span><br><span class="line">    end</span><br><span class="line">    Alice -&gt;&gt;+ John: Did you want to go to the game tonight?</span><br><span class="line">    John --&gt;&gt;- Alice: Yeah! See you there.</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-4.png" alt=""></p><h3 id="3-3-gantt-chart">3.3 Gantt Chart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">gantt</span><br><span class="line">dateFormat  YYYY-MM-DD</span><br><span class="line">title Adding GANTT diagram to mermaid</span><br><span class="line">excludes weekdays 2014-01-10</span><br><span class="line"></span><br><span class="line">section A section</span><br><span class="line">Completed task            :done,    des1, 2014-01-06,2014-01-08</span><br><span class="line">Active task               :active,  des2, 2014-01-09, 3d</span><br><span class="line">Future task               :         des3, after des2, 5d</span><br><span class="line">Future task2              :         des4, after des3, 5d</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-5.png" alt=""></p><h3 id="3-4-pie-chart">3.4 Pie Chart</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">pie showData</span><br><span class="line">    title Key elements in Product X</span><br><span class="line">    &quot;Calcium&quot; : 42.96</span><br><span class="line">    &quot;Potassium&quot; : 50.06</span><br><span class="line">    &quot;Magnesium&quot; : 10.01</span><br><span class="line">    &quot;Iron&quot; :  5</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-6.png" alt=""></p><h3 id="3-5-class-diagram">3.5 Class diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">Class01 &lt;|-- AveryLongClass : Cool</span><br><span class="line">Class03 *-- Class04</span><br><span class="line">Class05 o-- Class06</span><br><span class="line">Class07 .. Class08</span><br><span class="line">Class09 --&gt; C2 : Where am i?</span><br><span class="line">Class09 --* C3</span><br><span class="line">Class09 --|&gt; Class07</span><br><span class="line">Class07 : equals()</span><br><span class="line">Class07 : Object[] elementData</span><br><span class="line">Class01 : size()</span><br><span class="line">Class01 : int chimp</span><br><span class="line">Class01 : int gorilla</span><br><span class="line">Class08 &lt;--&gt; C2: Cool label</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-7.png" alt=""></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">classDiagram</span><br><span class="line">classA &lt;|-- classB</span><br><span class="line">classC *-- classD</span><br><span class="line">classE o-- classF</span><br><span class="line">classG &lt;-- classH</span><br><span class="line">classI -- classJ</span><br><span class="line">classK &lt;.. classL</span><br><span class="line">classM &lt;|.. classN</span><br><span class="line">classO .. classP</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-8.png" alt=""></p><h3 id="3-6-journey-diagram">3.6 Journey Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">journey</span><br><span class="line">    title My working day</span><br><span class="line">    section Go to work</span><br><span class="line">      Make tea: 5: Me</span><br><span class="line">      Go upstairs: 3: Me</span><br><span class="line">      Do work: 1: Me, Cat</span><br><span class="line">    section Go home</span><br><span class="line">      Go downstairs: 5: Me</span><br><span class="line">      Sit down: 5: Me</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-9.png" alt=""></p><h3 id="3-7-requirement-diagram">3.7 Requirement Diagram</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">requirementDiagram</span><br><span class="line"></span><br><span class="line">    requirement test_req &#123;</span><br><span class="line">id: 1</span><br><span class="line">text: the test text.</span><br><span class="line">risk: high</span><br><span class="line">verifymethod: test</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    element test_entity &#123;</span><br><span class="line">type: simulation</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    test_entity - satisfies -&gt; test_req</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-10.png" alt=""></p><h3 id="3-8-git-graph">3.8 Git graph</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">gitGraph</span><br><span class="line">   commit</span><br><span class="line">   commit</span><br><span class="line">   branch develop</span><br><span class="line">   commit</span><br><span class="line">   checkout main</span><br><span class="line">   commit</span><br><span class="line">   commit</span><br><span class="line">   merge develop</span><br><span class="line">   commit</span><br><span class="line">   commit</span><br></pre></td></tr></table></figure><p><img src="/imgs/mermaid-11.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;使用教程：&lt;a href=&quot;https://zhuanlan.zhihu.com/p/627356428&quot;&gt;从入门到精通&lt;/a&gt;&lt;br&gt;
Mermaid 是一种使用文本生成流程图、饼状图、甘特图等图表的描述语言，它可以帮助用户以简单、直观的方式创建</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22-04安装Questasim2021踩坑记录</title>
    <link href="https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85Questasim2021%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85Questasim2021%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-08T01:31:34.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-资源获取">1 资源获取</h2><p><a href="https://bbs.eetop.cn/forum.php?mod=viewthread&amp;tid=913460&amp;highlight=questasim%2B2021">EETOP Questasim2021</a></p><h2 id="2-安装步骤">2 安装步骤</h2><ol><li>安装依赖</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install libxft2 libxft2:i386 lib32ncurses6  </span><br><span class="line">sudo apt install libxext6  </span><br><span class="line">sudo apt install libxext6:i386  </span><br></pre></td></tr></table></figure><ol start="2"><li>获取license</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python2 mgclicgen.py &lt;hostid&gt;  </span><br></pre></td></tr></table></figure><ol start="3"><li>安装questasim</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./questa_sim-2021.2_1.aol  </span><br></pre></td></tr></table></figure><ol start="3"><li>复制文件<code>pubkey_verify</code>到安装目录下，然后执行</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./pubkey_verify -y</span><br></pre></td></tr></table></figure><p>4, 配置环境变量，然后更新<code>.bashrc</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">export PATH=/path/to/questasim/linux_x86_64:$PATH</span><br><span class="line">export PATH=/path/to/questasim/RUVM_2021.2:$PATH</span><br><span class="line">export LM_LICENSE_FILE=/path/to/license.dat:$LM_LICENSE_FILE</span><br></pre></td></tr></table></figure><h2 id="3-补充说明">3 补充说明</h2><ol><li><p><code>&lt;hostid&gt;</code>是什么？<br><img src="/imgs/81a085e1495429d040776f7dfabd8d60.png" alt="81a085e1495429d040776f7dfabd8d60.png"><br>host id 是网卡的物理地址，<strong>不要利用hostid获取</strong>，利用ifconfig获取，且<strong>不要省略掉冒号</strong>，如下图所是。<br><img src="/imgs/91014323dc0595e2ce3c6291eaa3ebc0.png" alt="91014323dc0595e2ce3c6291eaa3ebc0.png"></p></li><li><p>环境变量设置<br>注意将<code>/path/to</code>设置为自己的路径，并查看环境变量名是否与其他环境变量名冲突（有可能与VCS的license环境变量产生冲突。</p></li></ol><h2 id="4-运行questasim-2021">4 运行questasim 2021</h2><p>完成安装与破解后，打开终端输入<code>vsim</code>即可启动questasim</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-资源获取&quot;&gt;1 资源获取&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://bbs.eetop.cn/forum.php?mod=viewthread&amp;amp;tid=913460&amp;amp;highlight=questasim%2B2021&quot;&gt;EETOP Q</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu22.04安装VCS2018踩坑记录</title>
    <link href="https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85VCS2018%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/08/Ubuntu22-04%E5%AE%89%E8%A3%85VCS2018%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-08T01:07:40.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考资料：<a href="https://blog.csdn.net/qq_41717683/article/details/122267191">VCS2018在Ubuntu20 18安装步骤</a>、<a href="https://www.cnblogs.com/devindd/articles/17173802.html">VCS compiling error issues - devindd</a>、<a href="https://blog.csdn.net/ZikY_0827/article/details/130430660">Ubuntu22.10安装VCS、Verdi</a></p></blockquote><h2 id="1-资源获取">1 资源获取</h2><p><a href="https://pan.baidu.com/s/19CtwqWcxpv-4wPyAD4_ITw">百度网盘链接</a>  提取码：3pib</p><ul><li>文件内容<ul><li><code>libpng12.so.0：</code>后面可能会需要这个包</li><li><code>scl_keygen_2030：</code>这个是License生成器</li><li><code>scl_v2018.06：</code>这个是SCL安装包，用来</li><li><code>synopsysinstaller_v5.0：</code>这个是安装器</li><li><code>vcs_vO-2018.09-SP2：</code>这个是vcs的安装包</li><li><code>verdi-2018.9：</code>这个是verdi安装包</li></ul></li></ul><h2 id="2-安装步骤">2 安装步骤</h2><h3 id="2-1-建立安装路径-更改权限">2.1 建立安装路径，更改权限</h3><p><img src="/imgs/faa20cece21e49aeba5aeda466505a52_cac9d758dbb9412cb.png" alt="在这里插入图片描述"><br>建立图2的安装目录文件：<strong>Liscen</strong>用来存放license文件，<strong>SCL2018</strong>；<strong>vcs2018</strong>、<strong>verdi</strong>是对应的安装路径；<strong>vcs_install</strong>用来存放安装包好安装器。</p><h3 id="2-2-运行安装器进行安装">2.2 运行安装器进行安装</h3><ol><li><p>进入<code>synopsysinstaller_v5.0</code>文件夹，运行<code>./SynopsysInstaller_v5.0.run</code>，会出现下面界面，提示选择安装器安装路径，直接在本路径下安装即可<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_e5039f729d254ad19.jpg" alt="在这里插入图片描述"><br><a href="http://xn--setup-xf6h77jytt8i5c6b4b.sh">安装后出现setup.sh</a><br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_a4c16d9e4c2446438.jpg" alt="在这里插入图片描述"></p></li><li><p>运行<code>setup.sh</code>，进入安装界面，当前安装器可以依次安装Scl、vcs、verdi。下面以vcs安装为例。</p></li><li><p>安装器安装的详细过程<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_1a3ceb9c6f064ec89.png" alt="在这里插入图片描述"><br>选择安装包的路径<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_58a1abeff4ea4a7c8.png" alt="在这里插入图片描述"><br>选择要安装的地址，也就是第一步创建的目录<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_6b8383095342490ea.png" alt="在这里插入图片描述"><br>点击next，进入下面界面，选择vcs<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_0ff2f50c9dc1443cb.png" alt="在这里插入图片描述"><br>一路next，进入下面界面，点击<code>Accept，install</code>，然后等待安装<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_70e67e61d9124c358.png" alt="在这里插入图片描述"><br>安装完后会弹出安装失败，不管这个错误，点击<code>OK</code>。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_02489ba07d2e419ea.png" alt="在这里插入图片描述"><br>然后跳转到这个目录，手动运行这个脚本，根据提示选择路径。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_b1c8cb20ce0841fab.png" alt="在这里插入图片描述"><br>出现下面界面，点击<code>Dismiss</code>, vcs安装结束。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_6dd3009859aa49b79.png" alt="在这里插入图片描述"></p></li><li><p>重复第2步和第3步，选择不同的安装包和安装路径，继续安装<code>verdi</code>和<code>scl</code></p></li></ol><h3 id="2-3-生成license文件">2.3 生成License文件</h3><ol><li>在linux系统终端运行<code>ifconfig</code>获取电脑的物理地址和host-name，如下图所示；<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_dea01911af2744f5a.png" alt="在这里插入图片描述"></li><li>前往window系统运行这个<code>scl_keygen.exe</code>文件生成License文件<code>Synopsys.dat</code>。<br><img src="/imgs/ae57597e189e49cc93ca661e240a3c6e_f893e050867144688.png" alt="在这里插入图片描述"><br>出现下面界面，图中需要修改三个地方，<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_1f1f0f7d05fc4e22a.png" alt="在这里插入图片描述"><br><code>1 2</code>为电脑物理地址，填写物理地址的时候中间的<code>：</code>记得去掉。<code>3</code>为linux的host-name。</li><li>打开<code>Synopsys.dat</code>文件，需要修改的地方有一个<br><img src="/imgs/37f4327eced445d7a78980803a9a8ab5_c721c0b6dc584aa5a.png" alt="在这里插入图片描述"><br>需要在<code>1</code>这个地方添加snpslmd的路径，注意路径记得改成自己的路径，如下图所示<br><img src="/imgs/ff68b70d72e448b096cef6e9888ae20b_c9052d23b9ce47e6a.png" alt="在这里插入图片描述"><br>同时需要注意license有效期的问题，其他的license生成器可能生成的license有效期是2019，需要手动改成2030。本license生成器license有效期为2030，所以不需要改动。如下图所示<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_a6bc2adabff84feba.png" alt="在这里插入图片描述"></li><li>修改完毕之后，将<code>Synopsys.dat</code>转移到Linux系统下的Liscen目录中。</li></ol><h3 id="2-4-设置环境变量">2.4 设置环境变量</h3><p>在<strong>根目录</strong>下打开<code>.bashrc</code>，将下面内容复制进去，下面的路径记得改成自己的路径；设置好后运行<code>source .bashrc</code>命令使环境变量生效。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> <span class="built_in">export</span> SYNOPSYS=<span class="string">&quot;/usr/software/synopsys&quot;</span></span></span><br><span class="line">export VCS_TARGET_ARCH=&quot;amd64&quot;</span><br><span class="line">export PATH=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2/gui/dve/bin:&quot;$PATH</span><br><span class="line">export DVE_HOME=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2/gui/dve&quot;</span><br><span class="line">export PATH=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2/bin:&quot;$PATH</span><br><span class="line">export VCS_HOME=&quot;/usr/stone/software/vcs2018/vcs/O-2018.09-SP2&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash"><span class="built_in">export</span> VCS_ARCH_OVERRIDE=<span class="string">&quot;linux&quot;</span></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">verdi</span></span><br><span class="line">export PATH=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2/bin:&quot;$PATH</span><br><span class="line">export VERDI_HOME=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line">export LD_LIBRARY_PATH=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2/share/PLI/lib/LINUX64&quot;:$LD_LIBRARY_PATH</span><br><span class="line">export VERDI_DIR=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line">export NOVAS_INST_DIR=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line">export NPI_PLATFORM=&quot;LINUX64_GNU_472&quot;</span><br><span class="line">export LD_LIBRARY_PATH=&quot;$NOVAS_INST_DIR/share/NPI/lib/LINUX64_GNU_520&quot;:$LD_LIBRARY_PATH</span><br><span class="line">export NOVAS_HOME=&quot;/usr/stone/software/verdi/verdi/Verdi_O-2018.09-SP2&quot;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">LICENSE</span></span><br><span class="line">export SNPSLMD_LICENSE_FILE=&quot;/usr/stone/software/Liscen/Synopsys.dat&quot;</span><br><span class="line">export SNPSLMD_LICENSE_FILE=27000@自己的host-name</span><br><span class="line">export LM_LICENSE_FILE=&quot;/usr/stone/software/Liscen/Synopsys.dat&quot;</span><br><span class="line">alias lmli=&quot;/usr/stone/software/SCL2018/scl/2018.06/linux64/bin/lmgrd -c /usr/stone/software/License/Synopsys.dat&quot;</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">SCL</span></span><br><span class="line">export PATH=/usr/stone/software/SCL2018/scl/2018.06/linux64/bin:$PATH</span><br><span class="line">alias dve=&quot;dve -full64 &amp;&quot;</span><br><span class="line">alias vcs64=&quot;vcs -full64&quot;</span><br><span class="line">alias verdi=&quot;verdi -full64 &amp;&quot;</span><br></pre></td></tr></table></figure><h3 id="2-5-验证license">2.5 验证License</h3><p>通过下面命令验证license，直到出现<code>Passed</code>，如下所示。如果多次验证依旧没有出现<code>Passed</code>，那么重新生成license，重新验证</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sssverify 自己的license路径</span><br></pre></td></tr></table></figure><p><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_4d9caa0682354de2b.png" alt="在这里插入图片描述"></p><h3 id="2-6-启动lmgrd">2.6 启动lmgrd</h3><p><code>lmgrd</code>是license管理工具，用于将license运行在后台，使软件正常工作，目前对于lmgrd理解只有这些。由于在环境变量设置了命令，所以输入<code>lmli</code>就可以启动<code>lmgrd</code>。</p><ol><li><strong>问题一：</strong><br>路径明明正确，通过<code>ls</code>也可以看到<code>lmgrd</code>，但它就是找不到lmgrd 。<br><img src="/imgs/65d0053bc6864ec5b9518498ec189bd2_2d244dbe4c71436f8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 这是因为没有32位运行库导致的通过下面命令安装即可。</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install lsb</span><br></pre></td></tr></table></figure><ol start="2"><li><p><strong>问题二：</strong><br>再次执行<code>lmli</code>，提示没有/usr/tmp目录和在/usr/local/flexlm/licenses目录下找不到license。这个是肯定的，因为你压根就没有建这些目录<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_b476714129d64f8e8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 在/usr建立tmp目录，建立local/flexlm/licenses目录，把Synopsys.dat复制到licenses目录下，并把名字改成<strong>license.bat</strong></p></li><li><p><strong>问题三：</strong><br>提示打不开license，这是因为环境变量<code>SNPSLMD_LICENSE_FILE</code>的问题，在这个环境变量中赋值了两次，第一次是license的位置，第二次是用户。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_e21fc48a06a64178b.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 这里需要license的位置，所以先把第二个赋值注释，在后面启动DVE中，又会需要第二次赋值，再把注释打开</p></li><li><p><strong>问题四：</strong><br>由于上面lmgrd没有启动成功，但是端口号他还是占用的。当你再次输入<strong>lmli</strong>，应该会出现下面错误，显示端口号被占用<br><img src="/imgs/3c0d5dca161c487995a46fab2f3a4344_816dbc938bae49ac8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 输入下面命令终止该端口号。首先释放license，显示lmgrd占用的端口号，然后结束这个端口号进程，如下图所示</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lmdown ps auf | grep lmgrd kill -9 2381</span><br></pre></td></tr></table></figure><p><img src="/imgs/104c7525021f44ca9a7b8df1f9b39c1e_58f4aeccdaaa46dca.png" alt="在这里插入图片描述"><br>然后再次输入<code>lmli</code>,启动lmgrd。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_980e1f3be4484235b.png" alt="在这里插入图片描述"></p></li><li><p><strong>问题五：</strong><br>提示verdi语法错误Syntax error: “(“ unexpected<br><img src="/imgs/7e05b497b9ef8075fd878404c3e94aa0.png" alt="7e05b497b9ef8075fd878404c3e94aa0.png"><br><strong>解决方案：</strong> 代码对于标准bash而言没有错，因为Ubuntu为了加快开机速度，用dash代替了传统的bash，是dash在捣鬼，解决方法就是取消dash。</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg-reconfigure dash</span><br></pre></td></tr></table></figure><p><img src="/imgs/fcca05d088a62e2b3ee8f3c480f287c5.png" alt="fcca05d088a62e2b3ee8f3c480f287c5.png"><br>选择no</p></li></ol><h3 id="2-7-验证软件是否安装成功">2.7 验证软件是否安装成功</h3><ol><li>dve<br>输入<code>dve</code>,再次报错，提示<strong>SNPSLMD_LICENSE_FILE</strong>指示错误server。<br><img src="/imgs/f346182cc8c542c88fefc78bb6799bcb_fb38f5b7eb61418b8.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 不慌，这个就是咱上面遗留的问题，把上面的注释打开即可。再次输入<code>dve</code>,见证dve的真面目吧！！！<br><img width="1219" height="641" src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_047ba3d9ba624537a.png"/></li><li>verdi<br>输入<code>verdi</code>，不要慌张，该来的总会来的。提示没有<strong>libpng12.so.0</strong>这个库<br><img src="/imgs/b65d253e28f044748fdce1264ca48335_f23015c7cdc743429.png" alt="在这里插入图片描述"><br><strong>解决方案：</strong> 还记得第一步提到的那个库文件么，这时候就派上用场了。输入下面命令，注意<strong>libpng12.so.0</strong>是文件夹里面的文件，移动整个文件夹无法解决问题 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo cp libpng12.so.0  /usr/lib/x86_64-linux-gnu/</span><br></pre></td></tr></table></figure>再次输入<code>verdi</code>,激动吧！<br><img width="1219" height="573" src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_15cfc5162b954b359.png"/></li><li>VCS<br>输入<code>vcs -help</code>,坚持就是胜利！出现下面错误 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh:0: illegal option –h</span><br></pre></td></tr></table></figure><strong>解决方案：</strong> 这是因为Ubuntu下默认将<code>sh</code>链接到<code>bash</code>，输入下面命令重新链接。 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm -f /bin/sh ln -s /bin/bash /bin/sh</span><br></pre></td></tr></table></figure>输入<code>vcs -help</code>，好了，你的努力不是白费的。<br><img src="/imgs/watermark_type_d3F5LXplbmhlaQ_sh_abaa340ee93742d98.png" alt="在这里插入图片描述"></li></ol><h3 id="2-8-设置开机自启动license">2.8 设置开机自启动License</h3><p>在<code>/etc/profile.d/</code>目录下创建<code>lmli.sh</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/profile.d/  </span><br><span class="line">sudo touch lmli.sh </span><br><span class="line">sudo chmod 777 lmli.sh</span><br></pre></td></tr></table></figure><p>写入下面内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/stone/software/SCL2018/scl/2018.06/linux64/bin/lmgrd -c </span><br><span class="line">/usr/stone/software/License/Synopsys.dat -l </span><br><span class="line">/usr/stone/software/SCL2018/scl/2018.06/linux64/bin/lmgrd.log</span><br></pre></td></tr></table></figure><hr><p>至此，vcs安装结束！</p><h2 id="3-vcs启动过程中的问题">3 VCS启动过程中的问题</h2><h3 id="1-vcs安装license激活的问题">1. VCS安装license激活的问题</h3><p>在VCS安装好后，使用scl工具对license进行激活时，可能会遇到如下错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash: /usr/synopsys/scl/scl/linux64/bin/lmgrd: No such file or directory</span><br></pre></td></tr></table></figure><p>该问题的原因是没有lsb库，在保证license文件路径正确的情况下，使用如下命令安装lsb库：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install lsb-core</span><br></pre></td></tr></table></figure><p>安装完成后reboot虚拟机即可解决上述问题，但可能还会出现flexlm文件不存在的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Can&#x27;t make directory /usr/tmp/.flexlm, errno: 2(No such file or directory)</span><br></pre></td></tr></table></figure><p>这个问题比较好解决，直接创建一个flexlm文件就行了：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.  sudo mkdir /usr/tmp </span><br><span class="line">2.  sudo touch /usr/tmp/.flexlm</span><br></pre></td></tr></table></figure><h2 id="4-vcs编译仿真中的问题">4 VCS编译仿真中的问题</h2><h3 id="4-1-recipe-for-target-simv-failed问题">4.1 recipe for target ‘simv’ failed问题</h3><p>在临时license授权成功后，就可以对编写的RTL代码编译和运行，但由于系统一开始缺少一些设置，直接运行VCS可能会出现一些问题，一开始会遇到这样的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/bin/sh: 0: Illegal option -h</span><br><span class="line">Makefile:4: recipe for target &#x27;simv&#x27; failed</span><br><span class="line">make: *** [simv] Error 2</span><br></pre></td></tr></table></figure><p>该问题是由于Ubuntu操作系统将sh链接到了dash，手动修改sh链接到bash即可解决该问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo mv /bin/sh /bin/sh_bak</span><br><span class="line">sudo ln -s /bin/bash /bin/sh</span><br></pre></td></tr></table></figure><h3 id="4-2-product-timestamp-error问题">4.2 product_timestamp error问题</h3><p>解决上述问题后，可能会遇到product_timestamp error的问题：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Makefile:109: recipe for target &#x27;product_timestamp&#x27; failed</span><br><span class="line">make[1]: *** [product_timestamp] Error 1</span><br><span class="line">make[1]: Leaving directory &#x27;/home/alanwu/Documents/RISCV-SIM/csrc&#x27;</span><br><span class="line">Make exited with status 2</span><br></pre></td></tr></table></figure><p>这是因为操作系统安装的gcc版本太高，VCS调用的版本较低，需要修改VCS启动的变量，将gcc指定为g+±4.8，同时在你的vcs命令中添加如下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">simv:filelist.f</span><br><span class="line">vcs -full64 -cpp g++-4.8 -cc gcc-4.8 -LDFLAGS -Wl,--no-as-needed \</span><br><span class="line">-f filelist.f \</span><br><span class="line">-sverilog \</span><br><span class="line">-debug_access+all \</span><br><span class="line">-kdb \</span><br><span class="line">-timescale=1ns/1ps \</span><br><span class="line">-l com.log</span><br></pre></td></tr></table></figure><p>如果操作系统没有安装gcc 4.8，会报错：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">make[1]: Entering directory &#x27;/home/alanwu/Documents/RISCV-SIM/csrc&#x27;</span><br><span class="line">make[1]: gcc-4.8: Command not found</span><br></pre></td></tr></table></figure><p>安装gcc 4.8即可，这里安装直接从官方下载安装（如下方式）即可，不建议使用安装包的方式完成。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cd</span><br><span class="line">mkdir install_g++-4.8</span><br><span class="line">cd install_g++-4.8/</span><br><span class="line">sudo apt update</span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/g++-4.8_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/gcc-4.8_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/cpp-4.8_4.8.5-4ubuntu8_amd64.deb </span><br><span class="line">wget http://mirrors.kernel.org/ubuntu/pool/universe/g/gcc-4.8/libasan0_4.8.5-4ubuntu8_amd64.deb  </span><br><span class="line">sudo apt install ./gcc-4.8_4.8.5-4ubuntu8_amd64.deb ./gcc-4.8-base_4.8.5-4ubuntu8_amd64.deb ./libstdc++-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./cpp-4.8_4.8.5-4ubuntu8_amd64.deb ./libgcc-4.8-dev_4.8.5-4ubuntu8_amd64.deb ./libasan0_4.8.5-4ubuntu8_amd64.deb ./g++-4.8_4.8.5-4ubuntu8_amd64.deb</span><br><span class="line">cd</span><br><span class="line">rm -rf install_g++-4.8</span><br></pre></td></tr></table></figure><h3 id="4-3-g-4-8-unrecognized-command-line-option-no-pie-错误">4.3 g+±4.8 unrecognized command line option '-no-pie’错误</h3><p>这里重点强调下g++的-no-pie错误，在安装好gcc 4.8和g+±4.8以后，可能还会报出g+±4.8: error: unrecognized command line option '-no-pie’的错误：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">g++-4.8: error: unrecognized command line option &#x27;-no-pie&#x27;</span><br><span class="line">Makefile:109: recipe for target &#x27;product_timestamp&#x27; failed</span><br></pre></td></tr></table></figure><p>出现该错误的原因是g++版本较低，VCS的预编译选项中会添加-no-pie标志，但g++不能够识别该命令，在VCS编译完成后的/csrc/Makefile文件中，会增加预编译选项：<br><img width="751" height="268" src="/imgs/f2b2e0f13176479d82c0f2c5fd2ffd28_65dad2919c8e462ea.png"/><br>csrc是个临时文件，真正产生该文件的位置是在安装的VCS路径下面：<br><img width="751" height="138" src="/imgs/07710ad1937a4483b2e946b4177825a4_6dd4725aba2848708.png"/><br>因此，进入VCS安装路径对应的/bin/文件夹下，打开vcs文件，将其中的PRE_LDFLAGS参数后面的-no-pie删除，即可成功解决该问题。<br><img width="751" height="127" src="/imgs/9e6cf1aa0e654b7d8219426de55bea21_1e42c29dbc9248b59.png"/></p><h3 id="4-5-undefined-reference-to-vfs-set-dir-map-问题">4.5 undefined reference to ‘vfs_set_dir_map’问题</h3><p>在vcs编译选项中加入下列语句：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-LDFLAGS -Wl,--no-as-needed</span><br></pre></td></tr></table></figure><h3 id="4-5-undefined-reference-to-pthread-yield问题">4.5 undefined reference to pthread_yield问题</h3><p>原因是：<code>/home/synopsys/vcs_2018.9/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o</code> 中的pthread_yield已在最新的glibc放弃使用了。<strong>注意文件夹路径</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 1. 备份 </span></span><br><span class="line"><span class="built_in">mv</span> /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o.bak </span><br><span class="line"><span class="comment"># 2. 替换符号表中的pthread_yield </span></span><br><span class="line">objcopy --redefine-sym pthread_yield=sched_yield /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o.bak /home/synopsys/vcs/O-2018.09-SP2/linux64/lib/vcs_save_restore_new.o</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://blog.csdn.net/qq_41717683/article/details/122267191&quot;&gt;VCS2018在Ubuntu20 18安装步骤&lt;/a&gt;、&lt;a href=&quot;https://www.</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>YSYX-PA1学习记录</title>
    <link href="https://planckzgh.github.io/2023/11/05/YSYX-PA1%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/05/YSYX-PA1%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-05T06:59:40.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ysyx-pa1学习记录">YSYX-PA1学习记录</h1><h2 id="1-rtfsc">1 RTFSC</h2><p>这一部分最关键的是<strong>反复阅读</strong>源码！<br>不是像读课文一样反复阅读，而是了解源码结构和功能之后，在后面的练习中遇到不懂的反复回看源码。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">ics2023</span><br><span class="line">├── abstract-machine           # 抽象计算机</span><br><span class="line">├── am-kernels                 # 基于抽象计算机开发的应用程序</span><br><span class="line">├── fceux-am                   # 红白机模拟器</span><br><span class="line">├── init.sh                    # 初始化脚本</span><br><span class="line">├── Makefile                   # 用于工程打包提交</span><br><span class="line">├── nemu                       # NEMU</span><br><span class="line">└── README.md</span><br><span class="line">───────────────────────────────────────────────</span><br><span class="line">nemu</span><br><span class="line">├── configs                    # 预先提供的一些配置文件</span><br><span class="line">├── include                    # 存放全局使用的头文件</span><br><span class="line">│   ├── common.h               # 公用的头文件</span><br><span class="line">│   ├── config                 # 配置系统生成的头文件, 用于维护配置选项更新的时间戳</span><br><span class="line">│   ├── cpu</span><br><span class="line">│   │   ├── cpu.h</span><br><span class="line">│   │   ├── decode.h           # 译码相关</span><br><span class="line">│   │   ├── difftest.h</span><br><span class="line">│   │   └── ifetch.h           # 取指相关</span><br><span class="line">│   ├── debug.h                # 一些方便调试用的宏</span><br><span class="line">│   ├── device                 # 设备相关</span><br><span class="line">│   ├── difftest-def.h</span><br><span class="line">│   ├── generated</span><br><span class="line">│   │   └── autoconf.h         # 配置系统生成的头文件, 用于根据配置信息定义相关的宏</span><br><span class="line">│   ├── isa.h                  # ISA相关</span><br><span class="line">│   ├── macro.h                # 一些方便的宏定义</span><br><span class="line">│   ├── memory                 # 访问内存相关</span><br><span class="line">│   └── utils.h</span><br><span class="line">├── Kconfig                    # 配置信息管理的规则</span><br><span class="line">├── Makefile                   # Makefile构建脚本</span><br><span class="line">├── README.md</span><br><span class="line">├── resource                   # 一些辅助资源</span><br><span class="line">├── scripts                    # Makefile构建脚本</span><br><span class="line">│   ├── build.mk</span><br><span class="line">│   ├── config.mk</span><br><span class="line">│   ├── git.mk                 # git版本控制相关</span><br><span class="line">│   └── native.mk</span><br><span class="line">├── src                        # 源文件</span><br><span class="line">│   ├── cpu</span><br><span class="line">│   │   └── cpu-exec.c         # 指令执行的主循环</span><br><span class="line">│   ├── device                 # 设备相关</span><br><span class="line">│   ├── engine</span><br><span class="line">│   │   └── interpreter        # 解释器的实现</span><br><span class="line">│   ├── filelist.mk</span><br><span class="line">│   ├── isa                    # ISA相关的实现</span><br><span class="line">│   │   ├── mips32</span><br><span class="line">│   │   ├── riscv32</span><br><span class="line">│   │   ├── riscv64</span><br><span class="line">│   │   └── x86</span><br><span class="line">│   ├── memory                 # 内存访问的实现</span><br><span class="line">│   ├── monitor</span><br><span class="line">│   │   ├── monitor.c</span><br><span class="line">│   │   └── sdb                # 简易调试器</span><br><span class="line">│   │       ├── expr.c         # 表达式求值的实现</span><br><span class="line">│   │       ├── sdb.c          # 简易调试器的命令处理</span><br><span class="line">│   │       └── watchpoint.c   # 监视点的实现</span><br><span class="line">│   ├── nemu-main.c            # 你知道的...</span><br><span class="line">│   └── utils                  # 一些公共的功能</span><br><span class="line">│       ├── log.c              # 日志文件相关</span><br><span class="line">│       ├── rand.c</span><br><span class="line">│       ├── state.c</span><br><span class="line">│       └── timer.c</span><br><span class="line">└── tools                      # 一些工具</span><br><span class="line">    ├── fixdep                 # 依赖修复, 配合配置系统进行使用</span><br><span class="line">    ├── gen-expr</span><br><span class="line">    ├── kconfig                # 配置系统</span><br><span class="line">    ├── kvm-diff</span><br><span class="line">    ├── qemu-diff</span><br><span class="line">    └── spike-diff</span><br></pre></td></tr></table></figure><h2 id="2-基础设施：简易调试器">2 基础设施：简易调试器</h2><h3 id="2-1-解析命令">2.1 解析命令</h3><p>掌握一些字符串处理函数</p><ol><li><code>man strtok</code>：字符串切分和解析函数</li><li><code>man strncpy</code>：字符串复制函数</li><li><code>man sscanf</code>：字符串解析函数</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">strtok(<span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *delim);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- 第一次调用时，str需要指定，后续对同一个str解析时，str指定为NULL</span></span><br><span class="line"><span class="comment">- 每次调用，delim可以制定不同的分界符</span></span><br><span class="line"><span class="comment">- 每次调用，strtok都会返回一个指针指向下一个token，直到下一个token为空指向NULL</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="built_in">strncpy</span>(<span class="type">char</span> *dest, <span class="type">const</span> <span class="type">char</span> *str, <span class="type">size_t</span> n);</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- 复制str字符串的前n个字节至dest中</span></span><br><span class="line"><span class="comment">- str不足n长，用空字节补全</span></span><br><span class="line"><span class="comment">- 如果str的前n字节无空字节，dest将不会以空字节`\0`结尾</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sscanf</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *str, <span class="type">const</span> <span class="type">char</span> *format, ...)</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">- sscanf返回成功提取的参数的个数，否则返回0</span></span><br><span class="line"><span class="comment">- format可以自定义解析的格式</span></span><br><span class="line"><span class="comment">- 特殊用法：sscanf(str, &quot;%d %50[^\n]&quot;, &amp;num, expr); 其中%50[^\n]指的是提取宽度为50的字符串并将其解析成字符串（除非遇到换行符\n）</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h3 id="2-2-单步执行">2.2 单步执行</h3><p>掌握<code>cpu_exec(n)</code>的作用</p><h3 id="2-3-打印寄存器">2.3 打印寄存器</h3><p>寄存器符号<code>regs[i]</code>和寄存器值<code>cpu.gpr[i]</code><br>别忘了<code>pc</code>寄存器和寄存器值<code>cpu.pc</code></p><h3 id="2-4-扫描内存">2.4 扫描内存</h3><p>掌握<code>sscanf()</code>函数解析字符串</p><h2 id="3-表达式求值">3 表达式求值</h2><h3 id="3-1-利用正则表达式识别token">3.1 利用正则表达式识别token</h3><h3 id="3-2-递归求值-分治法">3.2 递归求值——分治法</h3><h4 id="3-2-1-匹配括号">3.2.1 匹配括号</h4><h4 id="3-2-2-寻找主操作符">3.2.2 寻找主操作符</h4><h3 id="3-3-随机测试">3.3 随机测试</h3><ul><li>[ ] 如何保证表达式进行无符号运算?</li><li>[x] 如何随机插入空格?</li><li>[ ] 如何生成长表达式, 同时不会使buf溢出?</li><li>[x] 如何过滤求值过程中有除0行为的表达式?</li></ul><h2 id="4-监视点">4 监视点</h2><p>单向链表的插入操作：头插法</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ysyx-pa1学习记录&quot;&gt;YSYX-PA1学习记录&lt;/h1&gt;
&lt;h2 id=&quot;1-rtfsc&quot;&gt;1 RTFSC&lt;/h2&gt;
&lt;p&gt;这一部分最关键的是&lt;strong&gt;反复阅读&lt;/strong&gt;源码！&lt;br&gt;
不是像读课文一样反复阅读，而是了解源码结构和功能之后，在后</summary>
      
    
    
    
    
    <category term="总结" scheme="https://planckzgh.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>YSYX-PA0学习记录</title>
    <link href="https://planckzgh.github.io/2023/11/01/YSYX-PA0%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/11/01/YSYX-PA0%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</id>
    <published>2023-11-01T09:40:30.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ysyx-pa0学习记录">YSYX-PA0学习记录</h1><blockquote><p>写下PA0重新复盘PA0的完成过程，查漏补缺</p></blockquote><h2 id="1-ubuntu的安装">1 Ubuntu的安装</h2><p>由于之前使用的常常是windows系统，此处选择安装双系统，主要参考b站up阿杰的<a href="https://www.bilibili.com/video/BV1554y1n7zv/?spm_id_from=333.337.search-card.all.click&amp;vd_source=1d1cb8cc1e7664d1de1ccb2714b0b9b4">双系统安装教程</a>，关键步骤如下：</p><ol><li>使用rufus制作启动U盘；</li><li>磁盘分区尽量大一些；（如果选择方案二，根挂载点应当给到50GB以上）</li><li>注意系统的时间同步问题；</li></ol><h2 id="2-ubuntu系统的配置">2 Ubuntu系统的配置</h2><ol><li>推荐安装一些常用软件：QQ，网易邮箱，Joplin，clash，onedrive，edge, sublime-text</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i *.deb</span><br></pre></td></tr></table></figure><ol start="2"><li>简洁的配置vim和sublime</li></ol><h2 id="3-linux的学习探索">3 Linux的学习探索</h2><blockquote><p>学习资源：<a href="https://101.ustclug.org/">Linux101</a>、<a href="https://www.harley.com/books/sg3.html">HARLEY HAHN’S GUIDE TO UNIX AND LINUX</a>、<a href="https://missing-semester-cn.github.io/">计算机教育中缺失的一课</a>、<a href="http://akaedu.github.io/book/">C语言教程</a>、<a href="https://www.cntofu.com/book/25/index.html">笨办法学C</a>，<a href="https://github.com/search?o=desc&amp;q=dotfiles&amp;s=stars&amp;type=Repositories">dotfiles仓库</a></p></blockquote><h3 id="3-1-常用命令">3.1 常用命令</h3><ol><li>软件安装：<code>sudo apt install file or *.deb</code></li><li>帮助文档<ul><li>全面：<code>man</code></li><li>快速：<code>tldr</code></li></ul></li><li>文件操作<ul><li>查看：<code>cat</code>,<code>less</code>,<code>head</code>,<code>tail</code></li><li>复制：<code>cp</code></li><li>移动：<code>mv</code></li><li>删除：<code>rm</code></li><li>创建：<code>mkdir</code>,<code>touch</code></li><li>压缩：<code>tar</code></li><li>权限：<code>chmod</code></li><li>搜索：<code>find</code>，<code>fd</code>，<code>locate</code></li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找所有名称为src的文件夹</span></span><br><span class="line">find . -name src -type d</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找所有文件夹路径中包含<span class="built_in">test</span>的python文件</span></span><br><span class="line">find . -path &#x27;*/test/*.py&#x27; -type f</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找前一天修改的所有文件</span></span><br><span class="line">find . -mtime -1</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查找所有大小在500k至10M的tar.gz文件</span></span><br><span class="line">find . -size +500k -size -10M -name &#x27;*.tar.gz&#x27;</span><br></pre></td></tr></table></figure><ol start="4"><li>重定向与管道<ul><li>覆盖：<code>echo &quot;Hello Linux!&quot; &gt; output_file</code></li><li>追加：<code>echo &quot;Hello Linux!&quot; &gt;&gt; output_file</code><ul><li>转义与不转义：<code>echo &quot;$foo&quot;</code> or <code>echo '$foo'</code></li></ul></li><li>管道：<code>|</code>将符号左侧命令的<code>stdout</code>作为符号右侧命令的<code>stdin</code></li></ul></li><li>网络下载：<code>wget</code>,<code>curl</code></li><li>文本处理<ul><li>统计：<code>wc</code></li><li>比较：<code>diff file1 file2</code></li><li>查找：<code>grep</code></li><li>替换：<code>sed</code></li><li>排序：<code>sort</code></li><li>正则表达式</li></ul></li></ol><h3 id="3-2-shell脚本">3.2 Shell脚本</h3><ol><li>变量赋值：<code>foo=bar</code></li><li>变量访问：<code>$foo</code></li><li>字符串：转义<code>&quot;&quot;</code>，原义<code>''</code></li><li>通配符：<ul><li><code>?</code>：匹配一个字符</li><li><code>*</code>：匹配任意个字符</li></ul></li><li>花括号：<code>mv *&#123;.py,.sh&#125; folder</code></li><li>函数：<ol><li>参数：<ul><li><code>$0</code>：脚本名</li><li><code>$1-$9</code>：第1-9个参数</li><li><code>$@</code>：所有参数</li><li><code>$#</code>：参数个数</li><li><code>$?</code>：前一个命令的返回值</li><li><code>$$</code>：当前脚本的进程识别码</li><li><code>!!</code>：完整的上一条命令</li><li><code>$_</code>：上一条命令的最后一个参数</li></ul></li><li>返回值：<code>0</code>：表示正常执行，反之出错</li></ol></li><li>条件语句：<ul><li><code>-z/-n</code> ：空/非空</li><li><code>-eq/-ne</code>：相等/不等</li><li><code>-gt/-lt</code>：大于/小于</li><li><code>-ge/-le</code>：大于等于/小于等于</li></ul></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">if condition1</span><br><span class="line">then</span><br><span class="line">    # 代码块会在条件1为真时执行</span><br><span class="line">elif condition2</span><br><span class="line">then</span><br><span class="line">    # 代码块会在条件2为真时执行</span><br><span class="line">else</span><br><span class="line">    # 如果前面的条件都不为真，执行此代码块</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h3 id="3-3-makefile简明教程">3.3 Makefile简明教程</h3><h3 id="3-4-gdb">3.4 GDB</h3><blockquote><p><a href="https://linuxconfig.org/gdb-debugging-tutorial-for-beginners">small tutorial</a></p></blockquote><h4 id="3-4-1-bug：生成转储文件">3.4.1 BUG：生成转储文件</h4><ol start="0"><li>生成可执行文件：<code>gcc -ggdb test.c -o test.out</code></li><li>查看转储文件生成路径：<code>cat /proc/sys/kernel/core_pattern</code></li><li>修改转储文件输出路径和输出文件名</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 控制core文件的文件名中是否添加pid作为扩展</span><br><span class="line">echo &quot;1&quot; &gt; /proc/sys/kernel/core_uses_pid </span><br><span class="line">// 设置core文件的输出路径和输出文件名，这里我的路径是/home/boy/corefile，文件名就是后面的部分</span><br><span class="line">echo &quot;/home/your_path/core-%e-%p-%t&quot;&gt; /proc/sys/kernel/core_pattern </span><br><span class="line">//参数说明</span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">p - insert pid into filename 添加pid</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">u - insert current uid into filename 添加当前uid</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">g - insert current gid into filename 添加当前gid</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">s - insert signal that caused the coredump into the filename 添加导致产生core的信号</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">t - insert UNIX time that the coredump occurred into filename 添加core文件生成时的unix时间</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">h - insert hostname <span class="built_in">where</span> the coredump happened into filename 添加主机名</span></span><br><span class="line"><span class="meta prompt_">%</span><span class="language-bash">e - insert coredumping executable name into filename 添加程序名</span></span><br></pre></td></tr></table></figure><ol start="3"><li>查看core file size：<code>ulimit -a</code></li><li>修改core file size：<code>ulimit -c unlimited</code></li><li>重新运行可执行文件：<code>./test.out</code></li><li>注意：以上行为可能需要su权限，甚至gdb执行内核转储文件的操作也需要su权限。</li></ol><h4 id="3-4-2-基本操作">3.4.2 基本操作</h4><ol><li>su下使用gdb分析core dump：<code>gdb ./test.out ./core.1341870.1000.8.test.out.1598867712</code></li><li>Backstracing：<code>bt</code></li><li>Frame: <code>f n</code></li><li>List source code: <code>list</code></li><li>Print: <code>p a</code></li><li><code>watch expr</code>：表达式发生变化时暂停运行</li><li><code>awatch expr</code>：表达式被访问、改变是暂停执行</li><li>rwatch <code>expr</code>：表达式被访问时暂停执行</li></ol><h3 id="3-5-tmux简明教程">3.5 <a href="https://planckzgh.github.io/2023/10/23/Tmux%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/">Tmux简明教程</a></h3><h3 id="3-6-git简明教程">3.6 Git简明教程</h3><blockquote><p><a href="https://missing-semester-cn.github.io/2020/version-control/">git</a><br><a href="https://learngitbranching.js.org/?locale=zh_CN">Learn Git Branching</a></p></blockquote><h3 id="3-7-c语言教程">3.7 C语言教程</h3><blockquote><p>在此总结此后遇到的所有与c语言相关的问题；<br>完成预学习部分的C语言题目</p></blockquote><h3 id="3-8-正则表达式">3.8 正则表达式</h3><p><img src="/imgs/a1.png" alt="正则表达式基本规则.png"></p><h2 id="4-数字电路基础实验">4 数字电路基础实验</h2><blockquote><p><a href="https://nju-projectn.github.io/dlco-lecture-note/exp/01.html">南大数字逻辑与计算机组成课程实验</a></p></blockquote><h3 id="4-1-注意">4.1 注意！</h3><ol><li>强烈建议初学者不要使用行为建模方式设计电路</li><li>One-hot编码的状态机从一个状态到另一个状态的<strong>状态跳转速度非常快</strong>，而顺序二进制编码从一个状态跳转到另外一个状态需要较多次跳转，并且随着状态的增加，速度急剧下降。 在芯片受到干扰时，one-hot编码一般只能跳转到无效状态（如果跳到另一有效状态必须是当前为 1 的为变为 0 ，同时另外一位变成由 0 变为 1 ，这种可能性很小），因此<strong>one-hot编码的状态机稳定性高</strong>。CPLD多使用gray-code，而FPGA多使用one-hot 编码。对于触发器资源非常丰富的FPGA器件，使用one-hot是常用的。</li></ol><hr><p>Verilog一开始并不是为了设计可综合电路而提出的，它的本质是一门基于事件队列模型的电路建模语言。因此，行为建模很容易会让初学者偏离描述电路的初衷: 开发者需要看着电路图，心里想象电路的行为，然后转化成事件队列模型的思考方式，最后再用行为建模方式来描述电路的行为，综合器再来根据这样的描述推导出相应的电路。从这个过程来看，这不仅是没有必要的，而且还很容易引入错误：如果开发者心里本身就已经有电路图，直接描述它是最方便的，如果开发者心里本身就已经有电路图，而开发者对行为建模方式的理解所有偏差，可能会采用了错误的描述方式，从而设计出非预期的电路。如果开发者心里没有电路图，而是期望通过行为建模方式让综合器生成某种行为的电路，这就已经偏离“描述电路”的本质了。大部分同学非常容易犯这样的错误，把行为建模当作过程式的C语言来写，尝试把任意复杂的行为描述映射到电路，最终综合器只会生成出延迟大，面积大，功耗高的低质量电路。所以，直到大家掌握“描述电路”的思维而不被行为建模误导之前，我们强烈建议初学者远离行为建模方式，仅通过数据流建模和结构化建模方式直接描述电路。例如，上文关于if和always的说法从某种程度上来说是正确的，但下面的问题可以帮助大家测试自己是否已经掌握了Verilog的本质：</p><ul><li>在硬件描述语言中，“执行”的精确含义是什么？</li></ul><blockquote><p>答：在仿真器里是模拟电路；在综合器中综合电路；在时序电路中顺序执行，在并行电路中交互执行；</p></blockquote><ul><li>是谁在执行Verilog的语句？ 是电路，综合器，还是其它的？</li></ul><blockquote><p>答：在开发阶段，使用模拟器；在综合阶段，使用综合器；最后在电路上执行。</p></blockquote><ul><li>if的条件满足，就不执行else后的语句，这里的“不执行”又是什么意思？ 和描述电路有什么联系？</li></ul><blockquote><p>都要描述；不执行指跳过执行。</p></blockquote><ul><li>有“并发执行”，又有“顺序执行”，还有“任何一个变量发生变化就立即执行”，以及“在任何情况下都执行”，它们都是如何在设计出来的电路中体现的？</li></ul><blockquote><p>并联和串联的关系；顺序执行可以通过时序和寄存器实现；变化执行可以通过触发器(Flip-Flops)实现；</p></blockquote><p>如果你无法对这些问题作出明确的回答，我们强烈建议你不要使用行为建模方式。如果你真的想弄懂它们，你需要阅读 Verilog标准手册 。</p><p><strong>真正的描述电路 = 实例化 + 连线</strong></p><ul><li>实例化：在电路板上放一个元件/模块，可以是一个门电路，或者是由门电路组成的模块</li><li>连线：用导线将元件/模块的引脚正确地连起来</li></ul><h3 id="4-2-拓展">4.2 拓展</h3><blockquote><p><strong>生成进位加法器</strong><br>先行进位加法器（Carry Look-Ahead Adder，CLA）是一种加法器设计，旨在加快加法操作的速度，特别是在大规模加法操作中。与传统的Ripple Carry Adder相比，CLA具有更高的性能，因为它可以在不等待进位传递的情况下生成和处理进位。<br>CLA加法器的设计基于以下原理：</p><ol><li>生成（G）和传播（P）信号：CLA加法器使用生成和传播信号来确定每个位的进位。生成信号（G）表示两个输入位相加时是否会生成进位（1表示生成，0表示不生成），而传播信号（P）表示输入位是否传播进位到该位（1表示传播，0表示不传播）。</li><li>进位生成：对于每一位i，进位生成（G_i）等于输入A_i和B_i相加的逻辑与（AND）操作。即：G_i = A_i &amp; B_i。</li><li>进位传播：进位传播（P_i）等于输入A_i或B_i的逻辑或（OR）操作。即：P_i = A_i | B_i。</li><li>进位计算：CLA加法器使用生成（G）和传播（P）信号来计算每一位的进位。对于第一位（最低位），进位C0等于G0，然后每一位的进位C_i都通过以下等式计算：C_i = G_i + (P_i &amp; C_(i-1))。</li></ol></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;ysyx-pa0学习记录&quot;&gt;YSYX-PA0学习记录&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;写下PA0重新复盘PA0的完成过程，查漏补缺&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;1-ubuntu的安装&quot;&gt;1 Ubuntu的安装&lt;/h2&gt;
&lt;p&gt;由于</summary>
      
    
    
    
    
    <category term="总结" scheme="https://planckzgh.github.io/tags/%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Tmux简明教程</title>
    <link href="https://planckzgh.github.io/2023/10/23/Tmux%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/"/>
    <id>https://planckzgh.github.io/2023/10/23/Tmux%E7%AE%80%E6%98%8E%E6%95%99%E7%A8%8B/</id>
    <published>2023-10-23T03:26:59.000Z</published>
    <updated>2023-12-03T07:38:49.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="tmux简明教程">Tmux简明教程</h1><blockquote><p>参考资料：<a href="https://blog.csdn.net/easylife206/article/details/102713902">可能是东半球最全面易懂的 Tmux 使用教程！( 强烈建议收藏 )</a></p></blockquote><h2 id="tmux简介">Tmux简介</h2><ol><li>会话：用户在终端窗口(进程)中输入命令进行交互，称为一次会话；</li><li>Tmux就是会话与窗口的解绑工具。</li></ol><h2 id="基本操作">基本操作</h2><h3 id="0-前缀键：ctrl-b">0. 前缀键：<code>ctrl+b</code></h3><ol><li><code>+ 方向键</code>：切换窗格</li><li><code>+ x</code>：关闭当前窗格</li><li><code>+ z</code>：全屏当前窗格</li><li><code>+ d</code>：分离当前会话</li><li><code>+ q</code>：显示窗格编号tmux</li></ol><h3 id="1-会话操作">1. 会话操作</h3><blockquote><p>启动，退出，创建，接入，分离，查看，杀死，重命名，切换0</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">tmux # 启动</span><br><span class="line">exit # 退出</span><br><span class="line">tmux new -s &lt;session-name&gt;</span><br><span class="line">tmux attach -t &lt;session-name&gt;</span><br><span class="line">tmux detach </span><br><span class="line">tmux ls</span><br><span class="line">tmux kill-session -t &lt;session-name&gt;</span><br><span class="line">tmux rename-session -t &lt;target-name&gt; &lt;new-name&gt;</span><br><span class="line">tmux switch-session -t &lt;session-name&gt;</span><br></pre></td></tr></table></figure><h3 id="2-窗格操作">2. 窗格操作</h3><blockquote><p>新建，切换，划分，移动，交换</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">tmux new-window -n &lt;window-name&gt;</span><br><span class="line">tmux select-window -t &lt;window-name&gt;</span><br><span class="line">tmux rename-window &lt;new-name&gt;</span><br><span class="line"></span><br><span class="line">tmux split-window    # up-down</span><br><span class="line">tmux split-window -h # left-right</span><br><span class="line"></span><br><span class="line">tmux select-pane -U  # up</span><br><span class="line">tmux select-pane -D  # down</span><br><span class="line">tmux select-pane -L  # left</span><br><span class="line">tmux select-pane -R  # right</span><br><span class="line"></span><br><span class="line">tmux swap-pane   -U  # -D -L -R</span><br></pre></td></tr></table></figure><h3 id="3-其他操作">3. 其他操作</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tmux set mouse on # 设定鼠标滚动支持</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;tmux简明教程&quot;&gt;Tmux简明教程&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;参考资料：&lt;a href=&quot;https://blog.csdn.net/easylife206/article/details/102713902&quot;&gt;可能是东半球最全面易懂的 Tmux</summary>
      
    
    
    
    
    <category term="教程" scheme="https://planckzgh.github.io/tags/%E6%95%99%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Joplin笔记恢复记录</title>
    <link href="https://planckzgh.github.io/2023/10/23/Joplin%E7%AC%94%E8%AE%B0%E6%81%A2%E5%A4%8D%E8%AE%B0%E5%BD%95/"/>
    <id>https://planckzgh.github.io/2023/10/23/Joplin%E7%AC%94%E8%AE%B0%E6%81%A2%E5%A4%8D%E8%AE%B0%E5%BD%95/</id>
    <published>2023-10-23T02:03:30.000Z</published>
    <updated>2024-03-24T10:55:18.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="记一次joplin笔记恢复记录">记一次Joplin笔记恢复记录</h1><h2 id="1-原因">1 原因</h2><p>更改了Onedrive本地文件夹路径，导致Joplin同步为空，但本地文件并未丢失。</p><h2 id="2-找回方法">2 找回方法</h2><h3 id="2-1-确定现象">2.1 确定现象</h3><p>打开Joplin，等待软件自动同步，Joplin会因找不到原路径而重新创建一个新路径（我的路径为：Onedrive/应用/Joplin）</p><p><strong>注意</strong>：此处Joplin找不到路径的原因是我们曾经动过Joplin的同步路径，就算我们后来改回了原路径，也算曾经对原路径改动过，Joplin仍然会忽略我们改回的路径，重新创建一个同步路径。<br>那我自己举例：</p><ol><li>我将Joplin同步路径（Onedrive/应用/Joplin）不小心更改为（Onedrive/Apps/Joplin）。</li><li>在上述操作不知情时，我打开Joplin记笔记，Joplin会自动同步，找不到路径重新生成新路径（Onedrive/应用/Joplin），此时我发现同步笔记数据部分丢失。</li><li>于是我删除了Joplin重新创建的新路径（因为新路径的笔记数据不完整），将第一步操作重做（即，重新将Joplin同步路径更改为Onedrive/应用/Joplin）</li><li>此时，我再次打开Joplin，发现Joplin似乎不认识原路径，自动同步状态下重新创建了新路径（Onedrive/应用 1/Joplin）</li></ol><h3 id="2-2-解决方案">2.2 解决方案</h3><p>利用Joplin同步一共分为五个步骤。</p><ol><li>备份Joplin笔记数据。</li><li>清空Onedrive中Joplin的同步路径（无论是Joplin的原始同步路径，还是Joplin后来创建的新的同步路径）。</li><li>打开Joplin，等待Joplin同步完成，自动创建同步路径（Onedrive/应用/Joplin），<strong>不要</strong>关闭Joplin软件。</li><li>删除（Onedrive/应用）路径下的Joplin文件夹，更换为第一步已备份的Joplin文件夹。</li><li>点击Joplin软件菜单栏的工具–&gt;选项–&gt;同步–&gt;显示高级选项–&gt;重新上传本地数据到同步目标–&gt;确定，等待Joplin上传本地项目。此时，Joplin笔记数据会慢慢恢复。</li></ol><h2 id="3-总结">3 总结</h2><p>经此一次，我得出教训，Joplin同步路径最好不要乱动，对于平日在Joplin记录的重要内容要定期定时进行多端（手机端，电脑端、平板端和网页端）同步。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;记一次joplin笔记恢复记录&quot;&gt;记一次Joplin笔记恢复记录&lt;/h1&gt;
&lt;h2 id=&quot;1-原因&quot;&gt;1 原因&lt;/h2&gt;
&lt;p&gt;更改了Onedrive本地文件夹路径，导致Joplin同步为空，但本地文件并未丢失。&lt;/p&gt;
&lt;h2 id=&quot;2-找回方法&quot;&gt;2 找回</summary>
      
    
    
    
    
    <category term="记录" scheme="https://planckzgh.github.io/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
</feed>
